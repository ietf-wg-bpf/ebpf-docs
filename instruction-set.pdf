%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 53 0 R /F5 55 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Times-Roman /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 57.02362 337.2236 0 ] /Rect [ 57.02362 724.8236 222.3316 735.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 57.02362 337.2236 0 ] /Rect [ 533.526 725.4611 538.252 735.6611 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 57.02362 286.2236 0 ] /Rect [ 77.02362 708.6236 200.8091 718.8236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 57.02362 286.2236 0 ] /Rect [ 533.526 709.2611 538.252 719.4611 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 57.02362 214.2236 0 ] /Rect [ 97.02362 692.4236 146.1621 702.6236 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 57.02362 214.2236 0 ] /Rect [ 533.526 693.0611 538.252 703.2611 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 56 0 R /XYZ 57.02362 597.0236 0 ] /Rect [ 97.02362 676.2236 159.8641 686.4236 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 56 0 R /XYZ 57.02362 597.0236 0 ] /Rect [ 533.526 676.8611 538.252 687.0611 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 56 0 R /XYZ 57.02362 297.8929 0 ] /Rect [ 97.02362 660.0236 162.6946 670.2236 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 56 0 R /XYZ 57.02362 297.8929 0 ] /Rect [ 533.526 660.6611 538.252 670.8611 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 643.8236 202.3811 654.0236 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 533.526 644.4611 538.252 654.6611 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 468.0236 0 ] /Rect [ 77.02362 627.6236 171.9941 637.8236 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 468.0236 0 ] /Rect [ 533.526 628.2611 538.252 638.4611 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 372.0236 0 ] /Rect [ 97.02362 611.4236 221.7526 621.6236 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 372.0236 0 ] /Rect [ 533.526 612.0611 538.252 622.2611 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 304.4236 0 ] /Rect [ 97.02362 595.2236 220.3331 605.4236 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 304.4236 0 ] /Rect [ 533.526 595.8611 538.252 606.0611 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 602.0236 0 ] /Rect [ 97.02362 579.0236 192.9291 589.2236 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 602.0236 0 ] /Rect [ 533.526 579.6611 538.252 589.8611 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 341.0236 0 ] /Rect [ 77.02362 562.8236 216.3811 573.0236 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 341.0236 0 ] /Rect [ 533.526 563.4611 538.252 573.6611 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 546.6236 206.1466 556.8236 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 533.526 547.2611 538.252 557.4611 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 57.02362 281.4236 0 ] /Rect [ 97.02362 530.4236 207.5746 540.6236 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 57.02362 281.4236 0 ] /Rect [ 533.526 531.0611 538.252 541.2611 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 57.02362 469.4236 0 ] /Rect [ 97.02362 514.2236 189.1466 524.4236 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 57.02362 469.4236 0 ] /Rect [ 533.526 514.8611 538.252 525.0611 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 304.6236 0 ] /Rect [ 117.0236 498.0236 211.5181 508.2236 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 304.6236 0 ] /Rect [ 533.526 498.6611 538.252 508.8611 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 190.6236 0 ] /Rect [ 117.0236 481.8236 239.3811 492.0236 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 190.6236 0 ] /Rect [ 533.526 482.4611 538.252 492.6611 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 124.6236 0 ] /Rect [ 77.02362 465.6236 197.9786 475.8236 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 124.6236 0 ] /Rect [ 533.526 466.2611 538.252 476.4611 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 300.8236 0 ] /Rect [ 97.02362 449.4236 251.0521 459.6236 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 300.8236 0 ] /Rect [ 528.8 450.0611 538.252 460.2611 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 433.2236 239.7131 443.4236 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 528.8 433.8611 538.252 444.0611 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 636.8236 0 ] /Rect [ 97.02362 417.0236 191.0421 427.2236 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 636.8236 0 ] /Rect [ 528.8 417.6611 538.252 427.8611 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 400.8236 231.1876 411.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 528.8 401.4611 538.252 411.6611 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 360.0236 0 ] /Rect [ 117.0236 384.6236 170.8881 394.8236 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 360.0236 0 ] /Rect [ 528.8 385.2611 538.252 395.4611 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 240.0236 0 ] /Rect [ 117.0236 368.4236 219.5421 378.6236 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 240.0236 0 ] /Rect [ 528.8 369.0611 538.252 379.2611 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 174.0236 0 ] /Rect [ 97.02362 352.2236 271.8261 362.4236 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 174.0236 0 ] /Rect [ 528.8 352.8611 538.252 363.0611 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
54 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 
  15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 
  25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 
  35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 
  45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R ] /Contents 121 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
55 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
56 0 obj
<<
/Contents 122 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
57 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 639.3236 0 ] /Rect [ 345.6836 549.0236 425.7136 561.0236 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 604.5236 0 ] /Rect [ 213.1736 95.62362 295.4236 107.6236 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Annots [ 57 0 R 58 0 R ] /Contents 123 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
60 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 767.5236 0 ] /Rect [ 404.9136 570.6236 538.252 582.6236 ] /Subtype /Link /Type /Annot
>>
endobj
61 0 obj
<<
/Annots [ 60 0 R ] /Contents 124 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
62 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 127.6236 0 ] /Rect [ 322.6337 518.7736 442.6937 530.7736 ] /Subtype /Link /Type /Annot
>>
endobj
63 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 127.6236 0 ] /Rect [ 322.6337 500.7736 442.6937 512.7736 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 127.6236 0 ] /Rect [ 322.6337 482.7736 442.6937 494.7736 ] /Subtype /Link /Type /Annot
>>
endobj
65 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 127.6236 0 ] /Rect [ 322.6337 464.7736 442.6937 476.7736 ] /Subtype /Link /Type /Annot
>>
endobj
66 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 344.0236 0 ] /Rect [ 322.6337 446.7736 464.3437 458.7736 ] /Subtype /Link /Type /Annot
>>
endobj
67 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 344.0236 0 ] /Rect [ 322.6337 428.7736 464.3437 440.7736 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 344.0236 0 ] /Rect [ 322.6337 398.7736 464.3437 410.7736 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 344.0236 0 ] /Rect [ 322.6337 368.7736 464.3437 380.7736 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 604.5236 0 ] /Rect [ 189.8436 78.82362 272.0936 90.82362 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/Annots [ 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R ] /Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
72 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 57.02362 283.9236 0 ] /Rect [ 291.602 201.0236 391.082 213.0236 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/Annots [ 72 0 R ] /Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
74 0 obj
<<
/Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
75 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 306.6236 0 ] /Rect [ 418.6978 79.42362 490.9478 91.42362 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/Annots [ 75 0 R ] /Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
77 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 192.6236 0 ] /Rect [ 418.6978 750.0236 523.7278 762.0236 ] /Subtype /Link /Type /Annot
>>
endobj
78 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 57.02362 306.6236 0 ] /Rect [ 418.6978 720.0236 490.9478 732.0236 ] /Subtype /Link /Type /Annot
>>
endobj
79 0 obj
<<
/Annots [ 77 0 R 78 0 R ] /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
80 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 767.5236 0 ] /Rect [ 356.4952 612.5736 483.7552 624.5736 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 176.5236 0 ] /Rect [ 356.4952 594.5736 531.5652 606.5736 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 176.5236 0 ] /Rect [ 356.4952 564.5736 531.5652 576.5736 ] /Subtype /Link /Type /Annot
>>
endobj
83 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 303.3236 0 ] /Rect [ 356.4952 534.5736 507.1252 546.5736 ] /Subtype /Link /Type /Annot
>>
endobj
84 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 767.5236 0 ] /Rect [ 356.4952 516.5736 493.7852 528.5736 ] /Subtype /Link /Type /Annot
>>
endobj
85 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 57.02362 639.3236 0 ] /Rect [ 356.4952 498.5736 436.5252 510.5736 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 57.02362 604.5236 0 ] /Rect [ 193.1736 312.8236 275.4236 324.8236 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/Annots [ 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 85 0 R 86 0 R ] /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
88 0 obj
<<
/Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
89 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 471.0236 0 ] /Rect [ 435.6736 732.0236 535.472 744.0236 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 362.0236 0 ] /Rect [ 470.7336 489.0236 495.1836 501.0236 ] /Subtype /Link /Type /Annot
>>
endobj
91 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 242.0236 0 ] /Rect [ 342.8936 435.0236 424.5836 447.0236 ] /Subtype /Link /Type /Annot
>>
endobj
92 0 obj
<<
/Annots [ 89 0 R 90 0 R 91 0 R ] /Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 120 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
93 0 obj
<<
/Outlines 95 0 R /PageLabels 133 0 R /PageMode /UseNone /Pages 120 0 R /Type /Catalog
>>
endobj
94 0 obj
<<
/Author () /CreationDate (D:20240420195852+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20240420195852+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
95 0 obj
<<
/Count 31 /First 96 0 R /Last 96 0 R /Type /Outlines
>>
endobj
96 0 obj
<<
/Count 23 /Dest [ 54 0 R /XYZ 57.02362 337.2236 0 ] /First 97 0 R /Last 112 0 R /Parent 95 0 R /Title (\376\377\0001\000\240\000\240\000\240\000B\000P\000F\000 \000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000S\000e\000t\000 \000A\000r\000c\000h\000i\000t\000e\000c\000t\000u\000r\000e\000 \000\(\000I\000S\000A\000\))
>>
endobj
97 0 obj
<<
/Count 4 /Dest [ 54 0 R /XYZ 57.02362 286.2236 0 ] /First 98 0 R /Last 101 0 R /Next 102 0 R /Parent 96 0 R 
  /Title (\376\377\0001\000.\0001\000\240\000\240\000\240\000D\000o\000c\000u\000m\000e\000n\000t\000a\000t\000i\000o\000n\000 \000c\000o\000n\000v\000e\000n\000t\000i\000o\000n\000s)
>>
endobj
98 0 obj
<<
/Dest [ 54 0 R /XYZ 57.02362 214.2236 0 ] /Next 99 0 R /Parent 97 0 R /Title (\376\377\0001\000.\0001\000.\0001\000\240\000\240\000\240\000T\000y\000p\000e\000s)
>>
endobj
99 0 obj
<<
/Dest [ 56 0 R /XYZ 57.02362 597.0236 0 ] /Next 100 0 R /Parent 97 0 R /Prev 98 0 R /Title (\376\377\0001\000.\0001\000.\0002\000\240\000\240\000\240\000F\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
100 0 obj
<<
/Dest [ 56 0 R /XYZ 57.02362 297.8929 0 ] /Next 101 0 R /Parent 97 0 R /Prev 99 0 R /Title (\376\377\0001\000.\0001\000.\0003\000\240\000\240\000\240\000D\000e\000f\000i\000n\000i\000t\000i\000o\000n\000s)
>>
endobj
101 0 obj
<<
/Dest [ 59 0 R /XYZ 57.02362 765.0236 0 ] /Parent 97 0 R /Prev 100 0 R /Title (\376\377\0001\000.\0001\000.\0004\000\240\000\240\000\240\000C\000o\000n\000f\000o\000r\000m\000a\000n\000c\000e\000 \000g\000r\000o\000u\000p\000s)
>>
endobj
102 0 obj
<<
/Count 3 /Dest [ 59 0 R /XYZ 57.02362 468.0236 0 ] /First 103 0 R /Last 105 0 R /Next 106 0 R /Parent 96 0 R 
  /Prev 97 0 R /Title (\376\377\0001\000.\0002\000\240\000\240\000\240\000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
103 0 obj
<<
/Dest [ 59 0 R /XYZ 57.02362 372.0236 0 ] /Next 104 0 R /Parent 102 0 R /Title (\376\377\0001\000.\0002\000.\0001\000\240\000\240\000\240\000B\000a\000s\000i\000c\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
104 0 obj
<<
/Dest [ 61 0 R /XYZ 57.02362 304.4236 0 ] /Next 105 0 R /Parent 102 0 R /Prev 103 0 R /Title (\376\377\0001\000.\0002\000.\0002\000\240\000\240\000\240\000W\000i\000d\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
105 0 obj
<<
/Dest [ 71 0 R /XYZ 57.02362 602.0236 0 ] /Parent 102 0 R /Prev 104 0 R /Title (\376\377\0001\000.\0002\000.\0003\000\240\000\240\000\240\000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000c\000l\000a\000s\000s\000e\000s)
>>
endobj
106 0 obj
<<
/Count 5 /Dest [ 71 0 R /XYZ 57.02362 341.0236 0 ] /First 107 0 R /Last 109 0 R /Next 112 0 R /Parent 96 0 R 
  /Prev 102 0 R /Title (\376\377\0001\000.\0003\000\240\000\240\000\240\000A\000r\000i\000t\000h\000m\000e\000t\000i\000c\000 \000a\000n\000d\000 \000j\000u\000m\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
107 0 obj
<<
/Dest [ 73 0 R /XYZ 57.02362 765.0236 0 ] /Next 108 0 R /Parent 106 0 R /Title (\376\377\0001\000.\0003\000.\0001\000\240\000\240\000\240\000A\000r\000i\000t\000h\000m\000e\000t\000i\000c\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
108 0 obj
<<
/Dest [ 74 0 R /XYZ 57.02362 281.4236 0 ] /Next 109 0 R /Parent 106 0 R /Prev 107 0 R /Title (\376\377\0001\000.\0003\000.\0002\000\240\000\240\000\240\000B\000y\000t\000e\000 \000s\000w\000a\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
109 0 obj
<<
/Count 2 /Dest [ 76 0 R /XYZ 57.02362 469.4236 0 ] /First 110 0 R /Last 111 0 R /Parent 106 0 R /Prev 108 0 R 
  /Title (\376\377\0001\000.\0003\000.\0003\000\240\000\240\000\240\000J\000u\000m\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
110 0 obj
<<
/Dest [ 79 0 R /XYZ 57.02362 304.6236 0 ] /Next 111 0 R /Parent 109 0 R /Title (\376\377\0001\000.\0003\000.\0003\000.\0001\000\240\000\240\000\240\000H\000e\000l\000p\000e\000r\000 \000f\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
111 0 obj
<<
/Dest [ 79 0 R /XYZ 57.02362 190.6236 0 ] /Parent 109 0 R /Prev 110 0 R /Title (\376\377\0001\000.\0003\000.\0003\000.\0002\000\240\000\240\000\240\000P\000r\000o\000g\000r\000a\000m\000-\000l\000o\000c\000a\000l\000 \000f\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
112 0 obj
<<
/Count 7 /Dest [ 79 0 R /XYZ 57.02362 124.6236 0 ] /First 113 0 R /Last 119 0 R /Parent 96 0 R /Prev 106 0 R 
  /Title (\376\377\0001\000.\0004\000\240\000\240\000\240\000L\000o\000a\000d\000 \000a\000n\000d\000 \000s\000t\000o\000r\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
113 0 obj
<<
/Dest [ 87 0 R /XYZ 57.02362 300.8236 0 ] /Next 114 0 R /Parent 112 0 R /Title (\376\377\0001\000.\0004\000.\0001\000\240\000\240\000\240\000R\000e\000g\000u\000l\000a\000r\000 \000l\000o\000a\000d\000 \000a\000n\000d\000 \000s\000t\000o\000r\000e\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
114 0 obj
<<
/Dest [ 88 0 R /XYZ 57.02362 765.0236 0 ] /Next 115 0 R /Parent 112 0 R /Prev 113 0 R /Title (\376\377\0001\000.\0004\000.\0002\000\240\000\240\000\240\000S\000i\000g\000n\000-\000e\000x\000t\000e\000n\000s\000i\000o\000n\000 \000l\000o\000a\000d\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
115 0 obj
<<
/Dest [ 88 0 R /XYZ 57.02362 636.8236 0 ] /Next 116 0 R /Parent 112 0 R /Prev 114 0 R /Title (\376\377\0001\000.\0004\000.\0003\000\240\000\240\000\240\000A\000t\000o\000m\000i\000c\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
116 0 obj
<<
/Count 2 /Dest [ 92 0 R /XYZ 57.02362 765.0236 0 ] /First 117 0 R /Last 118 0 R /Next 119 0 R /Parent 112 0 R 
  /Prev 115 0 R /Title (\376\377\0001\000.\0004\000.\0004\000\240\000\240\000\240\0006\0004\000-\000b\000i\000t\000 \000i\000m\000m\000e\000d\000i\000a\000t\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
117 0 obj
<<
/Dest [ 92 0 R /XYZ 57.02362 360.0236 0 ] /Next 118 0 R /Parent 116 0 R /Title (\376\377\0001\000.\0004\000.\0004\000.\0001\000\240\000\240\000\240\000M\000a\000p\000s)
>>
endobj
118 0 obj
<<
/Dest [ 92 0 R /XYZ 57.02362 240.0236 0 ] /Parent 116 0 R /Prev 117 0 R /Title (\376\377\0001\000.\0004\000.\0004\000.\0002\000\240\000\240\000\240\000P\000l\000a\000t\000f\000o\000r\000m\000 \000V\000a\000r\000i\000a\000b\000l\000e\000s)
>>
endobj
119 0 obj
<<
/Dest [ 92 0 R /XYZ 57.02362 174.0236 0 ] /Parent 112 0 R /Prev 116 0 R /Title (\376\377\0001\000.\0004\000.\0005\000\240\000\240\000\240\000L\000e\000g\000a\000c\000y\000 \000B\000P\000F\000 \000P\000a\000c\000k\000e\000t\000 \000a\000c\000c\000e\000s\000s\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
120 0 obj
<<
/Count 12 /Kids [ 54 0 R 56 0 R 59 0 R 61 0 R 71 0 R 73 0 R 74 0 R 76 0 R 79 0 R 87 0 R 
  88 0 R 92 0 R ] /Type /Pages
>>
endobj
121 0 obj
<<
/Length 8666
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 349.2236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 375.6 cm
q
BT 1 0 0 1 0 1.7 Tm 10.2 TL /F3 8.5 Tf 0 .4 .6 rg (1   BPF Instruction Set Architecture \(ISA\)) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 375.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F3 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 359.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1   Documentation conventions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 359.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 343.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.1   Types) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 343.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.2   Functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.3   Definitions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.4   Conformance groups) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2   Instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.1   Basic instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.2   Wide instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (4) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.3   Instruction classes) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3   Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.1   Arithmetic instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (6) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.2   Byte swap instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (7) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3   Jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (8) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3.1   Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3.2   Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4   Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.1   Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.2   Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.3   Atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4   64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4.1   Maps) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4.2   Platform Variables) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.5   Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 316.2236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (1   BPF Instruction Set Architecture \(ISA\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 298.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This document specifies the BPF instruction set architecture \(ISA\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 268.2236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.1   Documentation conventions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 226.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .288726 Tw (For brevity and consistency, this document refers to families of types using a shorthand syntax and refers to) Tj T* 0 Tw 1.276796 Tw (several expository, mnemonic functions when describing the semantics of instructions. The range of valid) Tj T* 0 Tw (values for those types and the semantics of those functions are defined in the following subsections.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 199.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.1   Types) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 169.2236 cm
q
BT 1 0 0 1 0 14 Tm .752686 Tw 12 TL /F1 10 Tf 0 0 0 rg (This document refers to integer types with the notation ) Tj /F4 10 Tf (SN) Tj /F1 10 Tf ( to specify a type's signedness \() Tj /F4 10 Tf (S) Tj /F1 10 Tf (\) and bit width) Tj T* 0 Tw (\() Tj /F4 10 Tf (N) Tj /F1 10 Tf (\), respectively.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 163.2236 cm
Q
q
1 0 0 1 57.02362 139.2236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 175.6192 0 Td (Meaning of signedness notation.) Tj T* -175.6192 0 Td ET
Q
Q
q
1 0 0 1 57.02362 79.22362 cm
q
1 1 1 rg
n 0 54 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 481.2283 -18 re f*
1 1 1 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 64.70013 0 Td (S) Tj T* -64.70013 0 Td ET
Q
Q
q
1 0 0 1 154.0703 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 140.299 0 Td (Meaning) Tj T* -140.299 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (u) Tj T* ET
Q
Q
q
1 0 0 1 154.0703 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (s) Tj T* ET
Q
Q
q
1 0 0 1 154.0703 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 148.0703 0 m 148.0703 54 l S
n 0 54 m 481.2283 54 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 54 l S
n 481.2283 0 m 481.2283 54 l S
Q
Q
Q
q
1 0 0 1 57.02362 79.22362 cm
Q
q
1 0 0 1 57.02362 73.22362 cm
Q
 
endstream
endobj
122 0 obj
<<
/Length 7757
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 753.0236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 178.9492 0 Td (Meaning of bit-width notation.) Tj T* -178.9492 0 Td ET
Q
Q
q
1 0 0 1 57.02362 639.0236 cm
q
1 1 1 rg
n 0 108 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -18 re f*
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 76.32363 0 Td (N) Tj T* -76.32363 0 Td ET
Q
Q
q
1 0 0 1 177.8673 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 127.5705 0 Td (Bit width) Tj T* -127.5705 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (128) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (128 bits) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 90 m 481.2283 90 l S
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 171.8673 0 m 171.8673 108 l S
n 0 108 m 481.2283 108 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 108 l S
n 481.2283 0 m 481.2283 108 l S
Q
Q
Q
q
1 0 0 1 57.02362 639.0236 cm
Q
q
1 0 0 1 57.02362 609.0236 cm
q
BT 1 0 0 1 0 14 Tm .105917 Tw 12 TL /F1 10 Tf 0 0 0 rg (For example, ) Tj /F4 10 Tf (u32) Tj /F1 10 Tf ( is a type whose valid values are all the 32-bit unsigned numbers and ) Tj /F4 10 Tf (s16) Tj /F1 10 Tf ( is a types whose) Tj T* 0 Tw (valid values are all the 16-bit signed numbers.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 582.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.2   Functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 570.0236 cm
Q
q
1 0 0 1 57.02362 570.0236 cm
Q
q
1 0 0 1 57.02362 546.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .174168 Tw (htobe16: Takes an unsigned 16-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 16-bit number in big-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 540.0236 cm
Q
q
1 0 0 1 57.02362 516.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .174168 Tw (htobe32: Takes an unsigned 32-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 32-bit number in big-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 510.0236 cm
Q
q
1 0 0 1 57.02362 486.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .174168 Tw (htobe64: Takes an unsigned 64-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 64-bit number in big-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 480.0236 cm
Q
q
1 0 0 1 57.02362 456.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .412739 Tw (htole16: Takes an unsigned 16-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 16-bit number in little-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 450.0236 cm
Q
q
1 0 0 1 57.02362 426.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .412739 Tw (htole32: Takes an unsigned 32-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 32-bit number in little-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 420.0236 cm
Q
q
1 0 0 1 57.02362 396.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .412739 Tw (htole64: Takes an unsigned 64-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 64-bit number in little-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 393.8929 cm
Q
q
1 0 0 1 57.02362 369.8929 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.79631 Tw (bswap16: Takes an unsigned 16-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 363.8929 cm
Q
q
1 0 0 1 57.02362 339.8929 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.79631 Tw (bswap32: Takes an unsigned 32-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 333.8929 cm
Q
q
1 0 0 1 57.02362 309.8929 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.79631 Tw (bswap64: Takes an unsigned 64-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 309.8929 cm
Q
q
1 0 0 1 57.02362 282.8929 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.3   Definitions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 264.8929 cm
Q
q
1 0 0 1 57.02362 148.6929 cm
q
1 .972549 .862745 rg
n 0 116.2 481.2283 -116.2 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 90.2 Tm  T* ET
q
1 0 0 1 16 85.2 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2.5 Tm /F2 12.5 Tf 15 TL (Example) Tj T* ET
Q
Q
q
1 0 0 1 16 61.2 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sign extend an 8-bit number ) Tj /F5 10 Tf (A) Tj /F1 10 Tf ( to a 16-bit number ) Tj /F5 10 Tf (B) Tj /F1 10 Tf ( on a big-endian platform:) Tj T* ET
Q
Q
q
1 0 0 1 16 16 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 448.0283 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F5 10 Tf 12 TL (A:          10000110) Tj T* (B: 11111111 10000110) Tj T* ET
Q
Q
Q
Q
Q
q
1 J
1 j
.662745 .662745 .662745 RG
.5 w
n 0 116.2 m 481.2283 116.2 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 116.2 l S
n 481.2283 0 m 481.2283 116.2 l S
Q
Q
Q
q
1 0 0 1 57.02362 142.6929 cm
Q
 
endstream
endobj
123 0 obj
<<
/Length 7587
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.4   Conformance groups) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 696.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.619168 Tw (An implementation does not need to support all instructions specified in this document \(e.g., deprecated) Tj T* 0 Tw .847565 Tw (instructions\). Instead, a number of conformance groups are specified. An implementation must support the) Tj T* 0 Tw 4.738941 Tw (base32 conformance group and may support additional conformance groups, where supporting a) Tj T* 0 Tw (conformance group means it must support all instructions in that conformance group.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 654.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 4.483196 Tw (The use of named conformance groups enables interoperability between a runtime that executes) Tj T* 0 Tw -0.045118 Tw (instructions, and tools as such compilers that generate instructions for the runtime. Thus, capability discovery) Tj T* 0 Tw (in terms of conformance groups might be done manually by users or automatically by tools.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 624.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .973022 Tw (Each conformance group has a short ASCII label \(e.g., "base32"\) that corresponds to a set of instructions) Tj T* 0 Tw (that are mandatory. That is, each instruction has one or more conformance groups of which it is a member.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 606.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This document defines the following conformance groups:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 600.0236 cm
Q
q
1 0 0 1 57.02362 600.0236 cm
Q
q
1 0 0 1 57.02362 588.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (base32: includes all instructions defined in this specification unless otherwise noted.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 582.0236 cm
Q
q
1 0 0 1 57.02362 570.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (base64: includes base32, plus instructions explicitly noted as being in the base64 conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 564.0236 cm
Q
q
1 0 0 1 57.02362 552.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (atomic32: includes 32-bit atomic operation instructions \(see ) Tj 0 .4 .6 rg (Atomic operations) Tj 0 0 0 rg (\).) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 546.0236 cm
Q
q
1 0 0 1 57.02362 534.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic64: includes atomic32, plus 64-bit atomic operation instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 528.0236 cm
Q
q
1 0 0 1 57.02362 516.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (divmul32: includes 32-bit division, multiplication, and modulo instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 510.0236 cm
Q
q
1 0 0 1 57.02362 498.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (divmul64: includes divmul32, plus 64-bit division, multiplication, and modulo instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 492.0236 cm
Q
q
1 0 0 1 57.02362 480.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (packet: deprecated packet access instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 480.0236 cm
Q
q
1 0 0 1 57.02362 450.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.2   Instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 432.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF has two instruction encodings:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 426.0236 cm
Q
q
1 0 0 1 57.02362 426.0236 cm
Q
q
1 0 0 1 57.02362 414.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the basic instruction encoding, which uses 64 bits to encode an instruction) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 408.0236 cm
Q
q
1 0 0 1 57.02362 384.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .699314 Tw (the wide instruction encoding, which appends a second 64 bits after the basic instruction for a total of) Tj T* 0 Tw (128 bits.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 384.0236 cm
Q
q
1 0 0 1 57.02362 357.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.1   Basic instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 339.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A basic instruction is encoded as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 257.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|    opcode     |     regs      |            offset             |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                              imm                              |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 237.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (opcode) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 95.62362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 129.2 Tm  T* ET
q
1 0 0 1 20 127.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (operation to perform, encoded as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 70 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 460.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|specific |class|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 20 46 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (specific) Tj T* ET
Q
Q
q
1 0 0 1 20 31 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of these bits varies by instruction class) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (class) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 79.62362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (regs) Tj T* ET
Q
Q
 
endstream
endobj
124 0 obj
<<
/Length 5312
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 527.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 224.4 Tm  T* ET
q
1 0 0 1 20 222.4 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The source and destination register numbers, encoded as follows on a little-endian host:) Tj T* ET
Q
Q
q
1 0 0 1 20 165.2 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 460.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|src_reg|dst_reg|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 20 139.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and as follows on a big-endian host:) Tj T* ET
Q
Q
q
1 0 0 1 20 82 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 460.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|dst_reg|src_reg|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 20 58 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (src_reg) Tj T* ET
Q
Q
q
1 0 0 1 20 31 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm .552577 Tw 12 TL /F1 10 Tf 0 0 0 rg (the source register number \(0-10\), except where otherwise specified \() Tj 0 .4 .6 rg (64-bit immediate instructions) Tj 0 0 0 rg  T* 0 Tw (reuse this field for other purposes\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (dst_reg) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (destination register number \(0-10\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 511.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (offset) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 496.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer offset used with pointer arithmetic) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 480.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 465.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 435.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.148647 Tw (Note that the contents of multi-byte fields \('offset' and 'imm'\) are stored using big-endian byte ordering on) Tj T* 0 Tw (big-endian hosts and little-endian byte ordering on little-endian hosts.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 417.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For example:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 336.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F5 10 Tf 12 TL (opcode                  offset imm          assembly) Tj T* (       src_reg dst_reg) Tj T* (07     0       1        00 00  44 33 22 11  r1 += 0x11223344 // little) Tj T* (       dst_reg src_reg) Tj T* (07     1       0        00 00  11 22 33 44  r1 += 0x11223344 // big) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 316.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Note that most instructions do not use all of the fields. Unused fields shall be cleared to zero.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 289.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.2   Wide instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 247.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .179223 Tw (Some instructions are defined to use the wide instruction encoding, which uses two 32-bit immediate values.) Tj T* 0 Tw 2.503453 Tw (The 64 bits following the basic instruction format contain a pseudo instruction with 'opcode', 'dst_reg',) Tj T* 0 Tw ('src_reg', and 'offset' all set to zero.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 229.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This is depicted in the following figure:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 100.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 98 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|    opcode     |     regs      |            offset             |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                              imm                              |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                           reserved                            |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                           next_imm                            |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 80.22362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (opcode) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 65.22362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (operation to perform, encoded as explained above) Tj T* ET
Q
Q
q
Q
Q
Q
 
endstream
endobj
125 0 obj
<<
/Length 9980
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 753.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (regs) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 738.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The source and destination register numbers, encoded as explained above) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 722.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (offset) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 707.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer offset used with pointer arithmetic) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 691.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 676.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 660.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (reserved) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 645.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unused, set to zero) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 629.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (next_imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 614.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (second signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 587.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.3   Instruction classes) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 569.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The three least significant bits of the 'opcode' field store the instruction class:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 563.0236 cm
Q
q
1 0 0 1 57.02362 353.0236 cm
q
1 1 1 rg
n 0 210 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 180 481.2283 -18 re f*
1 1 1 rg
n 0 162 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 144 481.2283 -18 re f*
1 1 1 rg
n 0 126 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 108 481.2283 -18 re f*
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL .09988 0 Td (clas) Tj T* 6.95 0 Td (s) Tj T* -7.04988 0 Td ET
Q
Q
q
1 0 0 1 37.65976 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.87988 0 Td (val) Tj T* 1.115 0 Td (ue) Tj T* -3.99488 0 Td ET
Q
Q
q
1 0 0 1 69.31952 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 65.19525 0 Td (description) Tj T* -65.19525 0 Td ET
Q
Q
q
1 0 0 1 265.61 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 82.29916 0 Td (reference) Tj T* -82.29916 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LD) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (non-standard load operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LDX) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (load into register operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 147 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ST) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (store from immediate operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 129 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (STX) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (store from register operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 111 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ALU) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x4) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32-bit arithmetic operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 93 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JM) Tj T* (P) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x5) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit jump operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 75 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JM) Tj T* (P32) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x6) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32-bit jump operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 45 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (ALU) Tj T* (64) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x7) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit arithmetic operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 15 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 180 m 481.2283 180 l S
n 0 162 m 481.2283 162 l S
n 0 144 m 481.2283 144 l S
n 0 126 m 481.2283 126 l S
n 0 108 m 481.2283 108 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 31.65976 0 m 31.65976 210 l S
n 63.31952 0 m 63.31952 210 l S
n 259.61 0 m 259.61 210 l S
n 0 210 m 481.2283 210 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 210 l S
n 481.2283 0 m 481.2283 210 l S
Q
Q
Q
q
1 0 0 1 57.02362 353.0236 cm
Q
q
1 0 0 1 57.02362 323.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.3   Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 293.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.154897 Tw 12 TL /F1 10 Tf 0 0 0 rg (For arithmetic and jump instructions \() Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (JMP) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (JMP32) Tj /F1 10 Tf (\), the 8-bit 'opcode' field is divided into) Tj T* 0 Tw (three parts:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 235.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|  code |s|class|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 215.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (code) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 200.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the operation code, whose meaning varies by instruction class) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 184.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (s \(source\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 109.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 62 Tm  T* ET
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the source operand location, which unless otherwise specified is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 54 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 461.2283 -18 re f*
1 1 1 rg
n 0 18 461.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.880176 0 Td (source) Tj T* -1.880176 0 Td ET
Q
Q
q
1 0 0 1 54.55035 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.444313 0 Td (value) Tj T* -1.444313 0 Td ET
Q
Q
q
1 0 0 1 95.00898 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 153.1597 0 Td (description) Tj T* -153.1597 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (K) Tj T* ET
Q
Q
q
1 0 0 1 54.55035 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 95.00898 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use 32-bit 'imm' value as source operand) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (X) Tj T* ET
Q
Q
q
1 0 0 1 54.55035 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 95.00898 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use 'src_reg' register value as source operand) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 461.2283 36 l S
n 0 18 m 461.2283 18 l S
n 48.55035 0 m 48.55035 54 l S
n 89.00898 0 m 89.00898 54 l S
n 0 54 m 461.2283 54 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 54 l S
n 461.2283 0 m 461.2283 54 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 93.82362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (instruction class) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 78.82362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
 
endstream
endobj
126 0 obj
<<
/Length 10852
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.1   Arithmetic instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 696.0236 cm
q
BT 1 0 0 1 0 38 Tm 1.01131 Tw 12 TL /F5 10 Tf 0 0 0 rg (ALU) Tj /F1 10 Tf ( uses 32-bit wide operands while ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( uses 64-bit wide operands for otherwise identical operations.) Tj T* 0 Tw 2.73295 Tw /F5 10 Tf (ALU64) Tj /F1 10 Tf ( instructions belong to the base64 conformance group unless noted otherwise. The 'code' field) Tj T* 0 Tw 1.994609 Tw (encodes the operation as below, where 'src' and 'dst' refer to the values of the source and destination) Tj T* 0 Tw (registers, respectively.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 690.0236 cm
Q
q
1 0 0 1 57.02362 198.0236 cm
q
1 1 1 rg
n 0 492 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 462 481.2283 -30 re f*
1 1 1 rg
n 0 432 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 402 481.2283 -30 re f*
1 1 1 rg
n 0 372 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 354 481.2283 -30 re f*
1 1 1 rg
n 0 324 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 306 481.2283 -30 re f*
1 1 1 rg
n 0 276 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 258 481.2283 -30 re f*
1 1 1 rg
n 0 228 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 198 481.2283 -30 re f*
1 1 1 rg
n 0 168 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 138 481.2283 -30 re f*
1 1 1 rg
n 0 108 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 78 481.2283 -30 re f*
1 1 1 rg
n 0 48 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 4.205945 0 Td (na) Tj T* -1.39 0 Td (me) Tj T* -2.815945 0 Td ET
Q
Q
q
1 0 0 1 38.08189 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 1.150945 0 Td (cod) Tj T* 6.11 0 Td (e) Tj T* -7.260945 0 Td ET
Q
Q
q
1 0 0 1 70.16378 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2.847323 0 Td (offset) Tj T* -2.847323 0 Td ET
Q
Q
q
1 0 0 1 115.0784 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 153.125 0 Td (description) Tj T* -153.125 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (AD) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 447 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 447 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 447 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst += src) Tj T* ET
Q
Q
q
1 0 0 1 6 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (SU) Tj T* (B) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst -= src) Tj T* ET
Q
Q
q
1 0 0 1 6 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MU) Tj T* (L) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 387 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 387 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 387 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst *= src) Tj T* ET
Q
Q
q
1 0 0 1 6 357 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (DIV) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 357 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 357 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 357 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst / src\) : 0) Tj T* ET
Q
Q
q
1 0 0 1 6 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (SDI) Tj T* (V) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst s/ src\) : 0) Tj T* ET
Q
Q
q
1 0 0 1 6 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (OR) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x4) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst |= src) Tj T* ET
Q
Q
q
1 0 0 1 6 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (AN) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x5) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 291 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst &) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 6 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LSH) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x6) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 261 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst <) Tj (<) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 231 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (RS) Tj T* (H) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x7) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 243 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst >) Tj (>) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (NE) Tj T* (G) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x8) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = -dst) Tj T* ET
Q
Q
q
1 0 0 1 6 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MO) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x9) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst % src\) : dst) Tj T* ET
Q
Q
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (SM) Tj T* (OD) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x9) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst s% src\) : dst) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (XO) Tj T* (R) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xa) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst ^= src) Tj T* ET
Q
Q
q
1 0 0 1 6 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MO) Tj T* (V) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xb) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = src) Tj T* ET
Q
Q
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MO) Tj T* (VSX) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xb) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (8/16/3) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(s8,s16,s32\)src) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (AR) Tj T* (SH) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xc) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 33 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (:term:`sign extending) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( dst >) Tj (>) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (END) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xd) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (byte swap operations \(see ) Tj 0 .4 .6 rg (Byte swap instructions) Tj 0 0 0 rg ( below\)) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 462 m 481.2283 462 l S
n 0 432 m 481.2283 432 l S
n 0 402 m 481.2283 402 l S
n 0 372 m 481.2283 372 l S
n 0 354 m 481.2283 354 l S
n 0 324 m 481.2283 324 l S
n 0 306 m 481.2283 306 l S
n 0 276 m 481.2283 276 l S
n 0 258 m 481.2283 258 l S
n 0 228 m 481.2283 228 l S
n 0 198 m 481.2283 198 l S
n 0 168 m 481.2283 168 l S
n 0 138 m 481.2283 138 l S
n 0 108 m 481.2283 108 l S
n 0 78 m 481.2283 78 l S
n 0 48 m 481.2283 48 l S
n 0 18 m 481.2283 18 l S
n 32.08189 0 m 32.08189 492 l S
n 64.16378 0 m 64.16378 492 l S
n 109.0784 0 m 109.0784 492 l S
n 0 492 m 481.2283 492 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 492 l S
n 481.2283 0 m 481.2283 492 l S
Q
Q
Q
q
1 0 0 1 57.02362 198.0236 cm
Q
q
1 0 0 1 57.02362 144.0236 cm
q
BT 1 0 0 1 0 38 Tm -0.115444 Tw 12 TL /F1 10 Tf 0 0 0 rg (Underflow and overflow are allowed during arithmetic operations, meaning the 64-bit or 32-bit value will wrap.) Tj T* 0 Tw .95213 Tw (If BPF program execution would result in division by zero, the destination register is instead set to zero. If) Tj T* 0 Tw 1.869272 Tw (execution would result in modulo by zero, for ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( the value of the destination register is unchanged) Tj T* 0 Tw (whereas for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf ( the upper 32 bits of the destination register are zeroed.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 126.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ADD,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf (, where 'code' = ) Tj /F5 10 Tf (ADD) Tj /F1 10 Tf (, 'source' = ) Tj /F5 10 Tf (X) Tj /F1 10 Tf (, and 'class' = ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 92.82362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\) \(\(u32\) dst + \(u32\) src\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 72.82362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where '\(u32\)' indicates that the upper 32 bits are zeroed.) Tj T* ET
Q
Q
 
endstream
endobj
127 0 obj
<<
/Length 8650
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 753.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ADD,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 719.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = dst + src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 699.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({XOR,) Tj ( ) Tj (K,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 666.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\) dst ^ \(u32\) imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 646.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({XOR,) Tj ( ) Tj (K,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 613.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = dst ^ imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 581.4236 cm
q
BT 1 0 0 1 0 14 Tm .433647 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that most instructions have instruction offset of 0. Only three instructions \() Tj /F5 10 Tf (SDIV) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (SMOD) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (MOVSX) Tj /F1 10 Tf (\) have a) Tj T* 0 Tw (non-zero offset.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 539.4236 cm
q
BT 1 0 0 1 0 26 Tm 1.019168 Tw 12 TL /F1 10 Tf 0 0 0 rg (Division, multiplication, and modulo operations for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf ( are part of the "divmul32" conformance group, and) Tj T* 0 Tw .24131 Tw (division, multiplication, and modulo operations for ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( are part of the "divmul64" conformance group. The) Tj T* 0 Tw (division and modulo operations support both unsigned and signed flavors.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 497.4236 cm
q
BT 1 0 0 1 0 26 Tm .190491 Tw 12 TL /F1 10 Tf 0 0 0 rg (For unsigned operations \() Tj /F5 10 Tf (DIV) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (MOD) Tj /F1 10 Tf (\), for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, 'imm' is interpreted as a 32-bit unsigned value. For ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (,) Tj T* 0 Tw -0.067744 Tw ('imm' is first ) Tj 1 0 0 rg (:term:`sign extended) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( from 32 to 64 bits, and then interpreted as a 64-bit unsigned) Tj T* 0 Tw (value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 455.4236 cm
q
BT 1 0 0 1 0 26 Tm .792844 Tw 12 TL /F1 10 Tf 0 0 0 rg (For signed operations \() Tj /F5 10 Tf (SDIV) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (SMOD) Tj /F1 10 Tf (\), for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, 'imm' is interpreted as a 32-bit signed value. For ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (,) Tj T* 0 Tw .586373 Tw ('imm' is first ) Tj 1 0 0 rg (:term:`sign extended) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( from 32 to 64 bits, and then interpreted as a 64-bit signed) Tj T* 0 Tw (value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 401.4236 cm
q
BT 1 0 0 1 0 38 Tm 1.938022 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there are varying definitions of the signed modulo operation when the dividend or divisor are) Tj T* 0 Tw 1.58589 Tw (negative, where implementations often vary by language such that Python, Ruby, etc. differ from C, Go,) Tj T* 0 Tw 1.171667 Tw (Java, etc. This specification requires that signed modulo use truncated division \(where -13 % 3 == -1\) as) Tj T* 0 Tw (implemented in C, Go, etc.:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 395.4236 cm
Q
q
1 0 0 1 57.02362 383.4236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a % n = a - n * trunc\(a / n\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 383.4236 cm
Q
q
1 0 0 1 57.02362 329.4236 cm
q
BT 1 0 0 1 0 38 Tm 3.50295 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (MOVSX) Tj /F1 10 Tf ( instruction does a move operation with sign extension. ) Tj /F5 10 Tf ({MOVSX,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( ) Tj 1 0 0 rg (:term:`sign) Tj T* 0 Tw .805223 Tw (extends) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( 8-bit and 16-bit operands into 32 bit operands, and zeroes the remaining upper 32) Tj T* 0 Tw .56631 Tw (bits. ) Tj /F5 10 Tf ({MOVSX,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( ) Tj 1 0 0 rg (:term:`sign extends) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( 8-bit, 16-bit, and 32-bit operands into 64 bit) Tj T* 0 Tw (operands. Unlike other arithmetic instructions, ) Tj /F5 10 Tf (MOVSX) Tj /F1 10 Tf ( is only defined for register source operands \() Tj /F5 10 Tf (X) Tj /F1 10 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 311.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (NEG) Tj /F1 10 Tf ( instruction is only defined when the source bit is clear \() Tj /F5 10 Tf (K) Tj /F1 10 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 293.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Shift operations use a mask of 0x3F \(63\) for 64-bit operations and 0x1F \(31\) for 32-bit operations.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 266.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.2   Byte swap instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 248.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The byte swap instructions use instruction classes of ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( and a 4-bit 'code' field of ) Tj /F5 10 Tf (END) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 218.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.040097 Tw (The byte swap instructions operate on the destination register only and do not use a separate source register) Tj T* 0 Tw (or immediate value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 188.4236 cm
q
BT 1 0 0 1 0 14 Tm -0.017982 Tw 12 TL /F1 10 Tf 0 0 0 rg (For ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, the 1-bit source operand field in the opcode is used to select what byte order the operation converts) Tj T* 0 Tw (from or to. For ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (, the 1-bit source operand field in the opcode is reserved and must be set to 0.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 182.4236 cm
Q
q
1 0 0 1 57.02362 86.42362 cm
q
1 1 1 rg
n 0 96 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 66 481.2283 -18 re f*
1 1 1 rg
n 0 48 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.226282 0 Td (clas) Tj T* 6.95 0 Td (s) Tj T* -9.176282 0 Td ET
Q
Q
q
1 0 0 1 41.91256 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 6.335051 0 Td (source) Tj T* -6.335051 0 Td ET
Q
Q
q
1 0 0 1 99.37266 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 1.951282 0 Td (valu) Tj T* 7.225 0 Td (e) Tj T* -9.176282 0 Td ET
Q
Q
q
1 0 0 1 135.2852 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 143.0216 0 Td (description) Tj T* -143.0216 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ALU) Tj T* ET
Q
Q
q
1 0 0 1 41.91256 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TO_LE) Tj T* ET
Q
Q
q
1 0 0 1 99.37266 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 135.2852 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (convert between host byte order and little endian) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ALU) Tj T* ET
Q
Q
q
1 0 0 1 41.91256 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TO_BE) Tj T* ET
Q
Q
q
1 0 0 1 99.37266 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 135.2852 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (convert between host byte order and big endian) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (ALU) Tj T* (64) Tj T* ET
Q
Q
q
1 0 0 1 41.91256 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Reserved) Tj T* ET
Q
Q
q
1 0 0 1 99.37266 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 135.2852 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (do byte swap unconditionally) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 66 m 481.2283 66 l S
n 0 48 m 481.2283 48 l S
n 0 30 m 481.2283 30 l S
n 35.91256 0 m 35.91256 96 l S
n 93.37266 0 m 93.37266 96 l S
n 129.2852 0 m 129.2852 96 l S
n 0 96 m 481.2283 96 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 96 l S
n 481.2283 0 m 481.2283 96 l S
Q
Q
Q
q
1 0 0 1 57.02362 86.42362 cm
Q
 
endstream
endobj
128 0 obj
<<
/Length 8900
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .058797 Tw (The 'imm' field encodes the width of the swap operations. The following widths are supported: 16, 32 and 64.) Tj T* 0 Tw 1.731223 Tw (Width 64 operations belong to the base64 conformance group and other swap operations belong to the) Tj T* 0 Tw (base32 conformance group.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 711.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Examples:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 693.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({END,) Tj ( ) Tj (TO_LE,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( with imm = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 635.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = htole16\(dst\)) Tj T* (dst = htole32\(dst\)) Tj T* (dst = htole64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 615.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({END,) Tj ( ) Tj (TO_BE,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( with imm = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 558.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = htobe16\(dst\)) Tj T* (dst = htobe32\(dst\)) Tj T* (dst = htobe64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 538.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({END,) Tj ( ) Tj (TO_LE,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( with imm = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 481.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = bswap16\(dst\)) Tj T* (dst = bswap32\(dst\)) Tj T* (dst = bswap64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 454.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.3   Jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 412.4236 cm
q
BT 1 0 0 1 0 26 Tm .312556 Tw 12 TL /F5 10 Tf 0 0 0 rg (JMP32) Tj /F1 10 Tf ( uses 32-bit wide operands and indicates the base32 conformance group, while ) Tj /F5 10 Tf (JMP) Tj /F1 10 Tf ( uses 64-bit wide) Tj T* 0 Tw .639029 Tw (operands for otherwise identical operations, and indicates the base64 conformance group unless otherwise) Tj T* 0 Tw (specified. The 'code' field encodes the operation as below:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 406.4236 cm
Q
q
1 0 0 1 57.02362 64.42362 cm
q
1 1 1 rg
n 0 342 481.2283 -42 re f*
.878431 .878431 .878431 rg
n 0 300 481.2283 -30 re f*
1 1 1 rg
n 0 270 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 240 481.2283 -30 re f*
1 1 1 rg
n 0 210 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 180 481.2283 -30 re f*
1 1 1 rg
n 0 150 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 120 481.2283 -30 re f*
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.2017 0 Td (code) Tj T* -1.2017 0 Td ET
Q
Q
q
1 0 0 1 43.7434 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .234812 0 Td (va) Tj T* 1.115 0 Td (lu) Tj T* 1.665 0 Td (e) Tj T* -3.014812 0 Td ET
Q
Q
q
1 0 0 1 67.33302 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL .227737 0 Td (src_) Tj T* 2.505 0 Td (reg) Tj T* -2.732737 0 Td ET
Q
Q
q
1 0 0 1 100.3585 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 40.17784 0 Td (description) Tj T* -40.17784 0 Td ET
Q
Q
q
1 0 0 1 246.6142 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 100.9721 0 Td (notes) Tj T* -100.9721 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JA) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ({JA, K, JMP} only) Tj T* ET
Q
Q
q
1 0 0 1 6 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JA) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += imm) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ({JA, K, JMP32} only) Tj T* ET
Q
Q
q
1 0 0 1 6 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JEQ) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (1) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset if dst == src) Tj T* ET
Q
Q
q
1 0 0 1 6 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JGT) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 195 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst > src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JGE) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (3) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 165 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst >) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSET) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (4) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 135 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst & src) Tj T* ET
Q
Q
q
1 0 0 1 6 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JNE) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (5) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset if dst != src) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSGT) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (6) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 75 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst > src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JSG) Tj T* (E) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (7) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 45 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst >) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CALL) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (call helper function by) Tj T* (address) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ({CALL, K, JMP} only, see ) Tj 0 .4 .6 rg (Helper functions) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 0 m 481.2283 0 l S
n 0 300 m 481.2283 300 l S
n 0 270 m 481.2283 270 l S
n 0 240 m 481.2283 240 l S
n 0 210 m 481.2283 210 l S
n 0 180 m 481.2283 180 l S
n 0 150 m 481.2283 150 l S
n 0 120 m 481.2283 120 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 37.7434 0 m 37.7434 342 l S
n 61.33302 0 m 61.33302 342 l S
n 94.3585 0 m 94.3585 342 l S
n 240.6142 0 m 240.6142 342 l S
n 0 342 m 481.2283 342 l S
n 0 0 m 0 342 l S
n 481.2283 0 m 481.2283 342 l S
Q
Q
Q
 
endstream
endobj
129 0 obj
<<
/Length 8613
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 555.0236 cm
q
1 1 1 rg
n 0 210 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 180 481.2283 -30 re f*
1 1 1 rg
n 0 150 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 120 481.2283 -30 re f*
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CALL) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call PC += imm) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 195 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ({CALL, K, JMP} only, see ) Tj 0 .4 .6 rg (Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CALL) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call helper function by BTF ID) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 165 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ({CALL, K, JMP} only, see ) Tj 0 .4 .6 rg (Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 6 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (EXIT) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (9) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (return) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ({CALL, K, JMP} only) Tj T* ET
Q
Q
q
1 0 0 1 6 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JLT) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (a) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 105 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst < src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JLE) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (b) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 75 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst <) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSLT) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (c) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 45 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst < src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSLE) Tj T* ET
Q
Q
q
1 0 0 1 43.7434 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (d) Tj T* ET
Q
Q
q
1 0 0 1 67.33302 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 100.3585 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst <) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 210 m 481.2283 210 l S
n 0 180 m 481.2283 180 l S
n 0 150 m 481.2283 150 l S
n 0 120 m 481.2283 120 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 37.7434 0 m 37.7434 210 l S
n 61.33302 0 m 61.33302 210 l S
n 94.3585 0 m 94.3585 210 l S
n 240.6142 0 m 240.6142 210 l S
n 0 0 m 0 210 l S
n 481.2283 0 m 481.2283 210 l S
n 0 0 m 481.2283 0 l S
Q
Q
Q
q
1 0 0 1 57.02362 555.0236 cm
Q
q
1 0 0 1 57.02362 537.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The BPF program needs to store the return value into register R0 before doing an ) Tj /F5 10 Tf (EXIT) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 519.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Example:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 501.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({JSGE,) Tj ( ) Tj (X,) Tj ( ) Tj (JMP32}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 467.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (if \(s32\)dst s) Tj (>) Tj (= \(s32\)src goto +offset) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 447.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (where 's) Tj (>) Tj (=' indicates a signed ') Tj (>) Tj (=' comparison.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 429.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({JA,) Tj ( ) Tj (K,) Tj ( ) Tj (JMP32}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 396.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (gotol +imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 376.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where 'imm' means the branch offset comes from insn 'imm' field.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 334.6236 cm
q
BT 1 0 0 1 0 26 Tm .171492 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there are two flavors of ) Tj /F5 10 Tf (JA) Tj /F1 10 Tf ( instructions. The ) Tj /F5 10 Tf (JMP) Tj /F1 10 Tf ( class permits a 16-bit jump offset specified by the) Tj T* 0 Tw 1.254353 Tw ('offset' field, whereas the ) Tj /F5 10 Tf (JMP32) Tj /F1 10 Tf ( class permits a 32-bit jump offset specified by the 'imm' field. A > 16-bit) Tj T* 0 Tw (conditional jump may be converted to a < 16-bit conditional jump plus a 32-bit unconditional jump.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 316.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (All ) Tj /F5 10 Tf (CALL) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (JA) Tj /F1 10 Tf ( instructions belong to the base32 conformance group.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 292.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.3.3.1   Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 262.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .858797 Tw (Helper functions are a concept whereby BPF programs can call into a set of function calls exposed by the) Tj T* 0 Tw (underlying platform.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 232.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .098647 Tw (Historically, each helper function was identified by an address encoded in the imm field. The available helper) Tj T* 0 Tw (functions may differ for each program type, but address values are unique across all program types.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 202.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.070686 Tw (Platforms that support the BPF Type Format \(BTF\) support identifying a helper function by a BTF ID encoded) Tj T* 0 Tw (in the imm field, where the BTF ID identifies the helper name and type.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 178.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.3.3.2   Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 136.6236 cm
q
BT 1 0 0 1 0 26 Tm .62389 Tw 12 TL /F1 10 Tf 0 0 0 rg (Program-local functions are functions exposed by the same BPF program as the caller, and are referenced) Tj T* 0 Tw .007064 Tw (by offset from the call instruction, similar to ) Tj /F5 10 Tf (JA) Tj /F1 10 Tf (. The offset is encoded in the imm field of the call instruction. A) Tj T* 0 Tw /F5 10 Tf (EXIT) Tj /F1 10 Tf ( within the program-local function will return to the caller.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 106.6236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.4   Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 88.62362 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For load and store instructions \() Tj /F5 10 Tf (LD) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (LDX) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (ST) Tj /F1 10 Tf (, and ) Tj /F5 10 Tf (STX) Tj /F1 10 Tf (\), the 8-bit 'opcode' field is divided as:) Tj T* ET
Q
Q
 
endstream
endobj
130 0 obj
<<
/Length 9661
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 715.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|mode |sz |class|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 695.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (mode) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 494.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 188 Tm  T* ET
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The mode modifier is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 174 441.2283 -42 re f*
.878431 .878431 .878431 rg
n 0 132 441.2283 -18 re f*
1 1 1 rg
n 0 114 441.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 84 441.2283 -30 re f*
1 1 1 rg
n 0 54 441.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 441.2283 -18 re f*
1 1 1 rg
n 0 18 441.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 11.17547 0 Td (mode) Tj T* -6.389999 0 Td (modifier) Tj T* -4.785471 0 Td ET
Q
Q
q
1 0 0 1 67.02094 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .174796 0 Td (va) Tj T* 1.115 0 Td (lu) Tj T* 1.665 0 Td (e) Tj T* -2.954796 0 Td ET
Q
Q
q
1 0 0 1 90.49053 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 51.54053 0 Td (description) Tj T* -51.54053 0 Td ET
Q
Q
q
1 0 0 1 259.4716 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 65.36837 0 Td (reference) Tj T* -65.36837 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IMM) Tj T* ET
Q
Q
q
1 0 0 1 67.02094 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 90.49053 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 259.4716 117 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ABS) Tj T* ET
Q
Q
q
1 0 0 1 67.02094 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 90.49053 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (legacy BPF packet access) Tj T* (\(absolute\)) Tj T* ET
Q
Q
q
1 0 0 1 259.4716 99 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IND) Tj T* ET
Q
Q
q
1 0 0 1 67.02094 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 90.49053 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (legacy BPF packet access) Tj T* (\(indirect\)) Tj T* ET
Q
Q
q
1 0 0 1 259.4716 69 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (MEM) Tj T* ET
Q
Q
q
1 0 0 1 67.02094 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 90.49053 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 259.4716 39 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (MEMSX) Tj T* ET
Q
Q
q
1 0 0 1 67.02094 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 90.49053 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 259.4716 21 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ATOMIC) Tj T* ET
Q
Q
q
1 0 0 1 67.02094 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 90.49053 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 259.4716 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Atomic operations) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 132 m 441.2283 132 l S
n 0 114 m 441.2283 114 l S
n 0 84 m 441.2283 84 l S
n 0 54 m 441.2283 54 l S
n 0 36 m 441.2283 36 l S
n 0 18 m 441.2283 18 l S
n 61.02094 0 m 61.02094 174 l S
n 84.49053 0 m 84.49053 174 l S
n 253.4716 0 m 253.4716 174 l S
n 0 174 m 441.2283 174 l S
n 0 0 m 441.2283 0 l S
n 0 0 m 0 174 l S
n 441.2283 0 m 441.2283 174 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 478.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (sz \(size\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 343.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 122 Tm  T* ET
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The size modifier is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 90 441.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 441.2283 -18 re f*
1 1 1 rg
n 0 54 441.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 441.2283 -18 re f*
1 1 1 rg
n 0 18 441.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 13.96522 0 Td (size) Tj T* -13.96522 0 Td ET
Q
Q
q
1 0 0 1 64.83045 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 17.98403 0 Td (value) Tj T* -17.98403 0 Td ET
Q
Q
q
1 0 0 1 138.3685 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 121.4799 0 Td (description) Tj T* -121.4799 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (W) Tj T* ET
Q
Q
q
1 0 0 1 64.83045 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 138.3685 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (word \(4 bytes\)) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (H) Tj T* ET
Q
Q
q
1 0 0 1 64.83045 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 138.3685 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (half word \(2 bytes\)) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (B) Tj T* ET
Q
Q
q
1 0 0 1 64.83045 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 138.3685 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (byte) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (DW) Tj T* ET
Q
Q
q
1 0 0 1 64.83045 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 138.3685 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (double word \(8 bytes\)) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 72 m 441.2283 72 l S
n 0 54 m 441.2283 54 l S
n 0 36 m 441.2283 36 l S
n 0 18 m 441.2283 18 l S
n 58.83045 0 m 58.83045 90 l S
n 132.3685 0 m 132.3685 90 l S
n 0 90 m 441.2283 90 l S
n 0 0 m 441.2283 0 l S
n 0 0 m 0 90 l S
n 441.2283 0 m 441.2283 90 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Instructions using ) Tj /F5 10 Tf (DW) Tj /F1 10 Tf ( belong to the base64 conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 327.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (class) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 312.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 285.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.1   Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 255.8236 cm
q
BT 1 0 0 1 0 14 Tm .895785 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (MEM) Tj /F1 10 Tf ( mode modifier is used to encode regular load and store instructions that transfer data between a) Tj T* 0 Tw (register and memory.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 237.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEM,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 204.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(size *\) \(dst + offset\) = src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 184.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEM,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (ST}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 151.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(size *\) \(dst + offset\) = imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 131.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEM,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (LDX}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 98.22362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = *\(unsigned size *\) \(src + offset\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 78.22362 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Where ') Tj (<) Tj (size) Tj (>) Tj (' is one of: ) Tj /F5 10 Tf (B) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (H) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (W) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (DW) Tj /F1 10 Tf (, and 'unsigned size' is one of: u8, u16, u32, or u64.) Tj T* ET
Q
Q
 
endstream
endobj
131 0 obj
<<
/Length 9942
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.2   Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 720.0236 cm
q
BT 1 0 0 1 0 14 Tm 2.030696 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (MEMSX) Tj /F1 10 Tf ( mode modifier is used to encode ) Tj 1 0 0 rg (:term:`sign-extension) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( load instructions that) Tj T* 0 Tw (transfer data between a register and memory.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 702.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEMSX,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (LDX}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 668.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = *\(signed size *\) \(src + offset\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 648.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Where size is one of: ) Tj /F5 10 Tf (B) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (H) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (W) Tj /F1 10 Tf (, and 'signed size' is one of: s8, s16, or s32.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 621.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.3   Atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 591.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .652397 Tw (Atomic operations are operations that operate on memory and can not be interrupted or corrupted by other) Tj T* 0 Tw (access to the same memory region by other BPF programs or means outside of this specification.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 561.8236 cm
q
BT 1 0 0 1 0 14 Tm -0.033853 Tw 12 TL /F1 10 Tf 0 0 0 rg (All atomic operations supported by BPF are encoded as store operations that use the ) Tj /F5 10 Tf (ATOMIC) Tj /F1 10 Tf ( mode modifier) Tj T* 0 Tw (as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 555.8236 cm
Q
q
1 0 0 1 57.02362 555.8236 cm
Q
q
1 0 0 1 57.02362 543.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (W,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( for 32-bit operations, which are part of the "atomic32" conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 537.8236 cm
Q
q
1 0 0 1 57.02362 525.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (DW,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( for 64-bit operations, which are part of the "atomic64" conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 519.8236 cm
Q
q
1 0 0 1 57.02362 507.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8-bit and 16-bit wide atomic operations are not supported.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 507.8236 cm
Q
q
1 0 0 1 57.02362 477.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .738797 Tw (The 'imm' field is used to encode the actual atomic operation. Simple atomic operation use a subset of the) Tj T* 0 Tw (values defined to encode arithmetic operations in the 'imm' field to encode the atomic operation:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 471.8236 cm
Q
q
1 0 0 1 57.02362 381.8236 cm
q
1 1 1 rg
n 0 90 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 481.2283 -18 re f*
1 1 1 rg
n 0 54 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 481.2283 -18 re f*
1 1 1 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 63.92472 0 Td (imm) Tj T* -63.92472 0 Td ET
Q
Q
q
1 0 0 1 166.4094 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 31.34295 0 Td (value) Tj T* -31.34295 0 Td ET
Q
Q
q
1 0 0 1 266.6654 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 77.3315 0 Td (description) Tj T* -77.3315 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ADD) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x00) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic add) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (OR) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x40) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic or) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (AND) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x50) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic and) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (XOR) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xa0) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic xor) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 160.4094 0 m 160.4094 90 l S
n 260.6654 0 m 260.6654 90 l S
n 0 90 m 481.2283 90 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 90 l S
n 481.2283 0 m 481.2283 90 l S
Q
Q
Q
q
1 0 0 1 57.02362 381.8236 cm
Q
q
1 0 0 1 57.02362 363.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (W,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( with 'imm' = ADD means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 330.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(u32 *\)\(dst + offset\) += src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 310.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (DW,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( with 'imm' = ADD means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 277.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(u64 *\)\(dst + offset\) += src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 257.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (In addition to the simple atomic operations, there also is a modifier and two complex atomic operations:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 251.4236 cm
Q
q
1 0 0 1 57.02362 179.4236 cm
q
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 32.734 0 Td (imm) Tj T* -32.734 0 Td ET
Q
Q
q
1 0 0 1 104.028 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 52.50809 0 Td (value) Tj T* -52.50809 0 Td ET
Q
Q
q
1 0 0 1 246.6142 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 87.35709 0 Td (description) Tj T* -87.35709 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (FETCH) Tj T* ET
Q
Q
q
1 0 0 1 104.028 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x01) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (modifier: return old value) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (XCHG) Tj T* ET
Q
Q
q
1 0 0 1 104.028 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xe0 | FETCH) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic exchange) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CMPXCHG) Tj T* ET
Q
Q
q
1 0 0 1 104.028 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xf0 | FETCH) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic compare and exchange) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 98.028 0 m 98.028 72 l S
n 240.6142 0 m 240.6142 72 l S
n 0 72 m 481.2283 72 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 72 l S
n 481.2283 0 m 481.2283 72 l S
Q
Q
Q
q
1 0 0 1 57.02362 179.4236 cm
Q
q
1 0 0 1 57.02362 137.4236 cm
q
BT 1 0 0 1 0 26 Tm 2.812556 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (FETCH) Tj /F1 10 Tf ( modifier is optional for simple atomic operations, and always set for the complex atomic) Tj T* 0 Tw -0.04535 Tw (operations. If the ) Tj /F5 10 Tf (FETCH) Tj /F1 10 Tf ( flag is set, then the operation also overwrites ) Tj /F5 10 Tf (src) Tj /F1 10 Tf ( with the value that was in memory) Tj T* 0 Tw (before it was modified.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 119.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (XCHG) Tj /F1 10 Tf ( operation atomically exchanges ) Tj /F5 10 Tf (src) Tj /F1 10 Tf ( with the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 77.42362 cm
q
BT 1 0 0 1 0 26 Tm -0.065103 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (CMPXCHG) Tj /F1 10 Tf ( operation atomically compares the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( with ) Tj /F5 10 Tf (R0) Tj /F1 10 Tf (. If they match,) Tj T* 0 Tw 2.651019 Tw (the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( is replaced with ) Tj /F5 10 Tf (src) Tj /F1 10 Tf (. In either case, the value that was at) Tj T* 0 Tw /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( before the operation is zero-extended and loaded back to ) Tj /F5 10 Tf (R0) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
 
endstream
endobj
132 0 obj
<<
/Length 10536
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.4   64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 720.0236 cm
q
BT 1 0 0 1 0 14 Tm .73631 Tw 12 TL /F1 10 Tf 0 0 0 rg (Instructions with the ) Tj /F5 10 Tf (IMM) Tj /F1 10 Tf ( 'mode' modifier use the wide instruction encoding defined in ) Tj 0 .4 .6 rg (Instruction encoding) Tj 0 0 0 rg (,) Tj T* 0 Tw (and use the 'src_reg' field of the basic instruction to hold an opcode subtype.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 690.0236 cm
q
BT 1 0 0 1 0 14 Tm .182844 Tw 12 TL /F1 10 Tf 0 0 0 rg (The following table defines a set of ) Tj /F5 10 Tf ({IMM,) Tj ( ) Tj (DW,) Tj ( ) Tj (LD}) Tj /F1 10 Tf ( instructions with opcode subtypes in the 'src_reg' field,) Tj T* 0 Tw (using new terms such as "map" defined further below:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 684.0236 cm
Q
q
1 0 0 1 57.02362 528.0236 cm
q
1 1 1 rg
n 0 156 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 126 481.2283 -18 re f*
1 1 1 rg
n 0 108 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -18 re f*
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.062592 0 Td (src_re) Tj T* 11.955 0 Td (g) Tj T* -14.01759 0 Td ET
Q
Q
q
1 0 0 1 52.14518 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 99.68947 0 Td (pseudocode) Tj T* -99.68947 0 Td ET
Q
Q
q
1 0 0 1 322.4241 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8.30693 0 Td (imm type) Tj T* -8.30693 0 Td ET
Q
Q
q
1 0 0 1 394.938 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 20.97518 0 Td (dst type) Tj T* -20.97518 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 111 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst = \(next_imm <) Tj (< 32\) | imm) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 394.938 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_by_fd\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map fd) Tj T* ET
Q
Q
q
1 0 0 1 394.938 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_val\(map_by_fd\(imm\)\) + next_imm) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map fd) Tj T* ET
Q
Q
q
1 0 0 1 394.938 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data pointer) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = var_addr\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (variable id) Tj T* ET
Q
Q
q
1 0 0 1 394.938 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data pointer) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x4) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = code_addr\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 394.938 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (code pointer) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x5) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_by_idx\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map index) Tj T* ET
Q
Q
q
1 0 0 1 394.938 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x6) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_val\(map_by_idx\(imm\)\) + next_imm) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map index) Tj T* ET
Q
Q
q
1 0 0 1 394.938 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data pointer) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 126 m 481.2283 126 l S
n 0 108 m 481.2283 108 l S
n 0 90 m 481.2283 90 l S
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 46.14518 0 m 46.14518 156 l S
n 316.4241 0 m 316.4241 156 l S
n 388.938 0 m 388.938 156 l S
n 0 156 m 481.2283 156 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 156 l S
n 481.2283 0 m 481.2283 156 l S
Q
Q
Q
q
1 0 0 1 57.02362 528.0236 cm
Q
q
1 0 0 1 57.02362 510.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 504.0236 cm
Q
q
1 0 0 1 57.02362 504.0236 cm
Q
q
1 0 0 1 57.02362 492.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (map_by_fd\(imm\) means to convert a 32-bit file descriptor into an address of a map \(see ) Tj 0 .4 .6 rg (Maps) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 486.0236 cm
Q
q
1 0 0 1 57.02362 474.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map_by_idx\(imm\) means to convert a 32-bit index into an address of a map) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 468.0236 cm
Q
q
1 0 0 1 57.02362 456.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map_val\(map\) gets the address of the first value in a given map) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 450.0236 cm
Q
q
1 0 0 1 57.02362 438.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (var_addr\(imm\) gets the address of a platform variable \(see ) Tj 0 .4 .6 rg (Platform Variables) Tj 0 0 0 rg (\) with a given id) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 432.0236 cm
Q
q
1 0 0 1 57.02362 408.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.054556 Tw (code_addr\(imm\) gets the address of the instruction at a specified relative offset in number of \(64-bit\)) Tj T* 0 Tw (instructions) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 402.0236 cm
Q
q
1 0 0 1 57.02362 390.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the 'imm type' can be used by disassemblers for display) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 384.0236 cm
Q
q
1 0 0 1 57.02362 372.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the 'dst type' can be used for verification and JIT compilation purposes) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 372.0236 cm
Q
q
1 0 0 1 57.02362 348.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.4.4.1   Maps) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 306.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .239897 Tw (Maps are shared memory regions accessible by BPF programs on some platforms. A map can have various) Tj T* 0 Tw .059314 Tw (semantics as defined in a separate document, and may or may not have a single contiguous memory region,) Tj T* 0 Tw (but the 'map_val\(map\)' is currently only defined for maps that do have a single contiguous memory region.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 252.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .326373 Tw (Each map can have a file descriptor \(fd\) if supported by the platform, where 'map_by_fd\(imm\)' means to get) Tj T* 0 Tw 1.603071 Tw (the map with the specified file descriptor. Each BPF program can also be defined to use a set of maps) Tj T* 0 Tw .195197 Tw (associated with the program at load time, and 'map_by_idx\(imm\)' means to get the map with the given index) Tj T* 0 Tw (in the set associated with the BPF program containing the instruction.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 228.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.4.4.2   Platform Variables) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 186.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .66189 Tw (Platform variables are memory regions, identified by integer ids, exposed by the runtime and accessible by) Tj T* 0 Tw .704556 Tw (BPF programs on some platforms. The 'var_addr\(imm\)' operation means to get the address of the memory) Tj T* 0 Tw (region identified by the given id.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 159.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.5   Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 93.02362 cm
q
BT 1 0 0 1 0 50 Tm .55189 Tw 12 TL /F1 10 Tf 0 0 0 rg (BPF previously introduced special instructions for access to packet data that were carried over from classic) Tj T* 0 Tw .208016 Tw (BPF. These instructions used an instruction class of ) Tj /F5 10 Tf (LD) Tj /F1 10 Tf (, a size modifier of ) Tj /F5 10 Tf (W) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (H) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (B) Tj /F1 10 Tf (, and a mode modifier of) Tj T* 0 Tw .112417 Tw /F5 10 Tf (ABS) Tj /F1 10 Tf ( or ) Tj /F5 10 Tf (IND) Tj /F1 10 Tf (. The 'dst_reg' and 'offset' fields were set to zero, and 'src_reg' was set to zero for ) Tj /F5 10 Tf (ABS) Tj /F1 10 Tf (. However,) Tj T* 0 Tw -0.119444 Tw (these instructions are deprecated and should no longer be used. All legacy packet access instructions belong) Tj T* 0 Tw (to the "packet" conformance group.) Tj T* ET
Q
Q
 
endstream
endobj
133 0 obj
<<
/Nums [ 0 134 0 R 1 135 0 R 2 136 0 R 3 137 0 R 4 138 0 R 
  5 139 0 R 6 140 0 R 7 141 0 R 8 142 0 R 9 143 0 R 
  10 144 0 R 11 145 0 R ]
>>
endobj
134 0 obj
<<
/S /D /St 1
>>
endobj
135 0 obj
<<
/S /D /St 2
>>
endobj
136 0 obj
<<
/S /D /St 3
>>
endobj
137 0 obj
<<
/S /D /St 4
>>
endobj
138 0 obj
<<
/S /D /St 5
>>
endobj
139 0 obj
<<
/S /D /St 6
>>
endobj
140 0 obj
<<
/S /D /St 7
>>
endobj
141 0 obj
<<
/S /D /St 8
>>
endobj
142 0 obj
<<
/S /D /St 9
>>
endobj
143 0 obj
<<
/S /D /St 10
>>
endobj
144 0 obj
<<
/S /D /St 11
>>
endobj
145 0 obj
<<
/S /D /St 12
>>
endobj
xref
0 146
0000000000 65535 f 
0000000073 00000 n 
0000000146 00000 n 
0000000253 00000 n 
0000000362 00000 n 
0000000474 00000 n 
0000000642 00000 n 
0000000808 00000 n 
0000000976 00000 n 
0000001142 00000 n 
0000001310 00000 n 
0000001477 00000 n 
0000001646 00000 n 
0000001813 00000 n 
0000001982 00000 n 
0000002149 00000 n 
0000002318 00000 n 
0000002485 00000 n 
0000002654 00000 n 
0000002821 00000 n 
0000002990 00000 n 
0000003157 00000 n 
0000003326 00000 n 
0000003493 00000 n 
0000003662 00000 n 
0000003829 00000 n 
0000003998 00000 n 
0000004165 00000 n 
0000004334 00000 n 
0000004501 00000 n 
0000004670 00000 n 
0000004837 00000 n 
0000005006 00000 n 
0000005173 00000 n 
0000005342 00000 n 
0000005509 00000 n 
0000005678 00000 n 
0000005845 00000 n 
0000006014 00000 n 
0000006181 00000 n 
0000006350 00000 n 
0000006515 00000 n 
0000006684 00000 n 
0000006849 00000 n 
0000007018 00000 n 
0000007183 00000 n 
0000007352 00000 n 
0000007517 00000 n 
0000007686 00000 n 
0000007851 00000 n 
0000008020 00000 n 
0000008185 00000 n 
0000008354 00000 n 
0000008519 00000 n 
0000008635 00000 n 
0000009198 00000 n 
0000009304 00000 n 
0000009512 00000 n 
0000009681 00000 n 
0000009850 00000 n 
0000010084 00000 n 
0000010252 00000 n 
0000010479 00000 n 
0000010648 00000 n 
0000010817 00000 n 
0000010986 00000 n 
0000011155 00000 n 
0000011324 00000 n 
0000011493 00000 n 
0000011662 00000 n 
0000011831 00000 n 
0000012000 00000 n 
0000012283 00000 n 
0000012450 00000 n 
0000012677 00000 n 
0000012885 00000 n 
0000013054 00000 n 
0000013281 00000 n 
0000013450 00000 n 
0000013619 00000 n 
0000013853 00000 n 
0000014022 00000 n 
0000014191 00000 n 
0000014360 00000 n 
0000014529 00000 n 
0000014698 00000 n 
0000014867 00000 n 
0000015036 00000 n 
0000015305 00000 n 
0000015513 00000 n 
0000015681 00000 n 
0000015850 00000 n 
0000016019 00000 n 
0000016260 00000 n 
0000016368 00000 n 
0000016626 00000 n 
0000016701 00000 n 
0000017057 00000 n 
0000017372 00000 n 
0000017556 00000 n 
0000017774 00000 n 
0000018003 00000 n 
0000018254 00000 n 
0000018559 00000 n 
0000018851 00000 n 
0000019152 00000 n 
0000019409 00000 n 
0000019775 00000 n 
0000020052 00000 n 
0000020338 00000 n 
0000020626 00000 n 
0000020878 00000 n 
0000021165 00000 n 
0000021492 00000 n 
0000021819 00000 n 
0000022145 00000 n 
0000022406 00000 n 
0000022768 00000 n 
0000022960 00000 n 
0000023222 00000 n 
0000023569 00000 n 
0000023712 00000 n 
0000032431 00000 n 
0000040241 00000 n 
0000047881 00000 n 
0000053246 00000 n 
0000063279 00000 n 
0000074185 00000 n 
0000082888 00000 n 
0000091841 00000 n 
0000100507 00000 n 
0000110221 00000 n 
0000120216 00000 n 
0000130806 00000 n 
0000130967 00000 n 
0000131002 00000 n 
0000131037 00000 n 
0000131072 00000 n 
0000131107 00000 n 
0000131142 00000 n 
0000131177 00000 n 
0000131212 00000 n 
0000131247 00000 n 
0000131282 00000 n 
0000131318 00000 n 
0000131354 00000 n 
trailer
<<
/ID 
[<9f1296e2ddd703e36b0aff66c9f9855a><9f1296e2ddd703e36b0aff66c9f9855a>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 94 0 R
/Root 93 0 R
/Size 146
>>
startxref
131390
%%EOF
