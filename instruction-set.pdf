%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 56 0 R /F5 57 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Times-Roman /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 337.2236 0 ] /Rect [ 57.02362 724.8236 222.3316 735.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 337.2236 0 ] /Rect [ 533.526 725.4611 538.252 735.6611 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 208.2236 0 ] /Rect [ 77.02362 708.6236 200.8091 718.8236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 208.2236 0 ] /Rect [ 533.526 709.2611 538.252 719.4611 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 692.4236 146.1621 702.6236 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 533.526 693.0611 538.252 703.2611 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 444.0236 0 ] /Rect [ 97.02362 676.2236 159.8641 686.4236 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 444.0236 0 ] /Rect [ 533.526 676.8611 538.252 687.0611 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 117.0236 0 ] /Rect [ 97.02362 660.0236 162.6946 670.2236 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 59 0 R /XYZ 57.02362 117.0236 0 ] /Rect [ 533.526 660.6611 538.252 670.8611 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 630.8236 0 ] /Rect [ 97.02362 643.8236 202.3811 654.0236 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 630.8236 0 ] /Rect [ 533.526 644.4611 538.252 654.6611 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 333.8236 0 ] /Rect [ 77.02362 627.6236 171.9941 637.8236 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 333.8236 0 ] /Rect [ 533.526 628.2611 538.252 638.4611 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 237.8236 0 ] /Rect [ 97.02362 611.4236 221.7526 621.6236 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 237.8236 0 ] /Rect [ 533.526 612.0611 538.252 622.2611 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 142.2236 0 ] /Rect [ 97.02362 595.2236 220.3331 605.4236 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 142.2236 0 ] /Rect [ 533.526 595.8611 538.252 606.0611 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 441.8236 0 ] /Rect [ 97.02362 579.0236 192.9291 589.2236 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 441.8236 0 ] /Rect [ 533.526 579.6611 538.252 589.8611 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 150.8236 0 ] /Rect [ 77.02362 562.8236 216.3811 573.0236 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 150.8236 0 ] /Rect [ 533.526 563.4611 538.252 573.6611 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 57.02362 516.8236 0 ] /Rect [ 97.02362 546.6236 206.1466 556.8236 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 57.02362 516.8236 0 ] /Rect [ 533.526 547.2611 538.252 557.4611 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 78 0 R /XYZ 57.02362 509.4236 0 ] /Rect [ 97.02362 530.4236 207.5746 540.6236 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 78 0 R /XYZ 57.02362 509.4236 0 ] /Rect [ 533.526 531.0611 538.252 541.2611 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 57.02362 683.8236 0 ] /Rect [ 97.02362 514.2236 189.1466 524.4236 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 57.02362 683.8236 0 ] /Rect [ 533.526 514.8611 538.252 525.0611 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 407.4236 0 ] /Rect [ 117.0236 498.0236 211.5181 508.2236 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 407.4236 0 ] /Rect [ 528.8 498.6611 538.252 508.8611 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 245.4236 0 ] /Rect [ 117.0236 481.8236 239.3811 492.0236 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 245.4236 0 ] /Rect [ 528.8 482.4611 538.252 492.6611 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 179.4236 0 ] /Rect [ 77.02362 465.6236 197.9786 475.8236 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 179.4236 0 ] /Rect [ 528.8 466.2611 538.252 476.4611 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 57.02362 346.0236 0 ] /Rect [ 97.02362 449.4236 251.0521 459.6236 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 57.02362 346.0236 0 ] /Rect [ 528.8 450.0611 538.252 460.2611 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 57.02362 111.4236 0 ] /Rect [ 97.02362 433.2236 239.7131 443.4236 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 57.02362 111.4236 0 ] /Rect [ 528.8 433.8611 538.252 444.0611 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 687.8236 0 ] /Rect [ 97.02362 417.0236 191.0421 427.2236 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 687.8236 0 ] /Rect [ 528.8 417.6611 538.252 427.8611 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 400.8236 231.1876 411.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 528.8 401.4611 538.252 411.6611 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 330.0236 0 ] /Rect [ 117.0236 384.6236 170.8881 394.8236 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 330.0236 0 ] /Rect [ 528.8 385.2611 538.252 395.4611 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 210.0236 0 ] /Rect [ 117.0236 368.4236 219.5421 378.6236 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 210.0236 0 ] /Rect [ 528.8 369.0611 538.252 379.2611 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 144.0236 0 ] /Rect [ 97.02362 352.2236 271.8261 362.4236 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 144.0236 0 ] /Rect [ 528.8 352.8611 538.252 363.0611 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.rfc-editor.org/info/rfc2119)
>> /Border [ 0 0 0 ] /Rect [ 214.8736 148.2236 538.252 160.2236 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.rfc-editor.org/info/rfc8174)
>> /Border [ 0 0 0 ] /Rect [ 57.02362 136.2236 223.1936 148.2236 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 
  15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 
  25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 
  35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 
  45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R ] /Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
56 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
57 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
58 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.rfc-editor.org/ien/ien137.txt)
>> /Border [ 0 0 0 ] /Rect [ 83.35362 366.0236 116.7036 378.0236 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Annots [ 58 0 R ] /Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
60 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 690.3236 0 ] /Rect [ 345.6836 414.8236 425.7136 426.8236 ] /Subtype /Link /Type /Annot
>>
endobj
61 0 obj
<<
/Annots [ 60 0 R ] /Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
62 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 444.3236 0 ] /Rect [ 213.1736 642.8236 295.4236 654.8236 ] /Subtype /Link /Type /Annot
>>
endobj
63 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 767.5236 0 ] /Rect [ 404.9136 432.4236 538.252 444.4236 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/Annots [ 62 0 R 63 0 R ] /Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
65 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 182.4236 0 ] /Rect [ 322.6337 328.5736 442.6937 340.5736 ] /Subtype /Link /Type /Annot
>>
endobj
66 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 182.4236 0 ] /Rect [ 322.6337 310.5736 442.6937 322.5736 ] /Subtype /Link /Type /Annot
>>
endobj
67 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 182.4236 0 ] /Rect [ 322.6337 292.5736 442.6937 304.5736 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 182.4236 0 ] /Rect [ 322.6337 274.5736 442.6937 286.5736 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 153.8236 0 ] /Rect [ 322.6337 256.5736 464.3437 268.5736 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 153.8236 0 ] /Rect [ 322.6337 238.5736 464.3437 250.5736 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 153.8236 0 ] /Rect [ 322.6337 208.5736 464.3437 220.5736 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 153.8236 0 ] /Rect [ 322.6337 178.5736 464.3437 190.5736 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/Annots [ 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R 72 0 R ] /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
74 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 444.3236 0 ] /Rect [ 189.8436 528.8236 272.0936 540.8236 ] /Subtype /Link /Type /Annot
>>
endobj
75 0 obj
<<
/Annots [ 74 0 R ] /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
76 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 78 0 R /XYZ 57.02362 511.9236 0 ] /Rect [ 291.602 600.0236 391.082 612.0236 ] /Subtype /Link /Type /Annot
>>
endobj
77 0 obj
<<
/Annots [ 76 0 R ] /Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
78 0 obj
<<
/Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
79 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 409.4236 0 ] /Rect [ 423.325 263.8236 495.575 275.8236 ] /Subtype /Link /Type /Annot
>>
endobj
80 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 247.4236 0 ] /Rect [ 423.325 233.8236 528.355 245.8236 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 57.02362 409.4236 0 ] /Rect [ 423.325 203.8236 495.575 215.8236 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/Annots [ 79 0 R 80 0 R 81 0 R ] /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
83 0 obj
<<
/Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
84 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 767.5236 0 ] /Rect [ 347.9846 657.7736 475.2446 669.7736 ] /Subtype /Link /Type /Annot
>>
endobj
85 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 146.5236 0 ] /Rect [ 347.9846 639.7736 523.0546 651.7736 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 146.5236 0 ] /Rect [ 347.9846 621.7736 523.0546 633.7736 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 57.02362 348.5236 0 ] /Rect [ 347.9846 603.7736 498.6146 615.7736 ] /Subtype /Link /Type /Annot
>>
endobj
88 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 57.02362 113.9236 0 ] /Rect [ 347.9846 585.7736 485.2746 597.7736 ] /Subtype /Link /Type /Annot
>>
endobj
89 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 57.02362 690.3236 0 ] /Rect [ 347.9846 567.7736 428.0146 579.7736 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 57.02362 444.3236 0 ] /Rect [ 193.1736 358.0236 275.4236 370.0236 ] /Subtype /Link /Type /Annot
>>
endobj
91 0 obj
<<
/Annots [ 84 0 R 85 0 R 86 0 R 87 0 R 88 0 R 89 0 R 90 0 R ] /Contents 135 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
92 0 obj
<<
/Contents 136 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
93 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 61 0 R /XYZ 57.02362 336.8236 0 ] /Rect [ 435.6736 732.0236 535.472 744.0236 ] /Subtype /Link /Type /Annot
>>
endobj
94 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 332.0236 0 ] /Rect [ 470.7336 459.0236 495.1836 471.0236 ] /Subtype /Link /Type /Annot
>>
endobj
95 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 96 0 R /XYZ 57.02362 212.0236 0 ] /Rect [ 342.8936 405.0236 424.5836 417.0236 ] /Subtype /Link /Type /Annot
>>
endobj
96 0 obj
<<
/Annots [ 93 0 R 94 0 R 95 0 R ] /Contents 137 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
97 0 obj
<<
/Outlines 99 0 R /PageLabels 138 0 R /PageMode /UseNone /Pages 124 0 R /Type /Catalog
>>
endobj
98 0 obj
<<
/Author () /CreationDate (D:20240625140704+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20240625140704+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
99 0 obj
<<
/Count 31 /First 100 0 R /Last 100 0 R /Type /Outlines
>>
endobj
100 0 obj
<<
/Count 23 /Dest [ 55 0 R /XYZ 57.02362 337.2236 0 ] /First 101 0 R /Last 116 0 R /Parent 99 0 R /Title (\376\377\0001\000\240\000\240\000\240\000B\000P\000F\000 \000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000S\000e\000t\000 \000A\000r\000c\000h\000i\000t\000e\000c\000t\000u\000r\000e\000 \000\(\000I\000S\000A\000\))
>>
endobj
101 0 obj
<<
/Count 4 /Dest [ 55 0 R /XYZ 57.02362 208.2236 0 ] /First 102 0 R /Last 105 0 R /Next 106 0 R /Parent 100 0 R 
  /Title (\376\377\0001\000.\0001\000\240\000\240\000\240\000D\000o\000c\000u\000m\000e\000n\000t\000a\000t\000i\000o\000n\000 \000c\000o\000n\000v\000e\000n\000t\000i\000o\000n\000s)
>>
endobj
102 0 obj
<<
/Dest [ 59 0 R /XYZ 57.02362 765.0236 0 ] /Next 103 0 R /Parent 101 0 R /Title (\376\377\0001\000.\0001\000.\0001\000\240\000\240\000\240\000T\000y\000p\000e\000s)
>>
endobj
103 0 obj
<<
/Dest [ 59 0 R /XYZ 57.02362 444.0236 0 ] /Next 104 0 R /Parent 101 0 R /Prev 102 0 R /Title (\376\377\0001\000.\0001\000.\0002\000\240\000\240\000\240\000F\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
104 0 obj
<<
/Dest [ 59 0 R /XYZ 57.02362 117.0236 0 ] /Next 105 0 R /Parent 101 0 R /Prev 103 0 R /Title (\376\377\0001\000.\0001\000.\0003\000\240\000\240\000\240\000D\000e\000f\000i\000n\000i\000t\000i\000o\000n\000s)
>>
endobj
105 0 obj
<<
/Dest [ 61 0 R /XYZ 57.02362 630.8236 0 ] /Parent 101 0 R /Prev 104 0 R /Title (\376\377\0001\000.\0001\000.\0004\000\240\000\240\000\240\000C\000o\000n\000f\000o\000r\000m\000a\000n\000c\000e\000 \000g\000r\000o\000u\000p\000s)
>>
endobj
106 0 obj
<<
/Count 3 /Dest [ 61 0 R /XYZ 57.02362 333.8236 0 ] /First 107 0 R /Last 109 0 R /Next 110 0 R /Parent 100 0 R 
  /Prev 101 0 R /Title (\376\377\0001\000.\0002\000\240\000\240\000\240\000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
107 0 obj
<<
/Dest [ 61 0 R /XYZ 57.02362 237.8236 0 ] /Next 108 0 R /Parent 106 0 R /Title (\376\377\0001\000.\0002\000.\0001\000\240\000\240\000\240\000B\000a\000s\000i\000c\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
108 0 obj
<<
/Dest [ 64 0 R /XYZ 57.02362 142.2236 0 ] /Next 109 0 R /Parent 106 0 R /Prev 107 0 R /Title (\376\377\0001\000.\0002\000.\0002\000\240\000\240\000\240\000W\000i\000d\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
109 0 obj
<<
/Dest [ 73 0 R /XYZ 57.02362 441.8236 0 ] /Parent 106 0 R /Prev 108 0 R /Title (\376\377\0001\000.\0002\000.\0003\000\240\000\240\000\240\000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000c\000l\000a\000s\000s\000e\000s)
>>
endobj
110 0 obj
<<
/Count 5 /Dest [ 73 0 R /XYZ 57.02362 150.8236 0 ] /First 111 0 R /Last 113 0 R /Next 116 0 R /Parent 100 0 R 
  /Prev 106 0 R /Title (\376\377\0001\000.\0003\000\240\000\240\000\240\000A\000r\000i\000t\000h\000m\000e\000t\000i\000c\000 \000a\000n\000d\000 \000j\000u\000m\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
111 0 obj
<<
/Dest [ 75 0 R /XYZ 57.02362 516.8236 0 ] /Next 112 0 R /Parent 110 0 R /Title (\376\377\0001\000.\0003\000.\0001\000\240\000\240\000\240\000A\000r\000i\000t\000h\000m\000e\000t\000i\000c\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
112 0 obj
<<
/Dest [ 78 0 R /XYZ 57.02362 509.4236 0 ] /Next 113 0 R /Parent 110 0 R /Prev 111 0 R /Title (\376\377\0001\000.\0003\000.\0002\000\240\000\240\000\240\000B\000y\000t\000e\000 \000s\000w\000a\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
113 0 obj
<<
/Count 2 /Dest [ 82 0 R /XYZ 57.02362 683.8236 0 ] /First 114 0 R /Last 115 0 R /Parent 110 0 R /Prev 112 0 R 
  /Title (\376\377\0001\000.\0003\000.\0003\000\240\000\240\000\240\000J\000u\000m\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
114 0 obj
<<
/Dest [ 83 0 R /XYZ 57.02362 407.4236 0 ] /Next 115 0 R /Parent 113 0 R /Title (\376\377\0001\000.\0003\000.\0003\000.\0001\000\240\000\240\000\240\000H\000e\000l\000p\000e\000r\000 \000f\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
115 0 obj
<<
/Dest [ 83 0 R /XYZ 57.02362 245.4236 0 ] /Parent 113 0 R /Prev 114 0 R /Title (\376\377\0001\000.\0003\000.\0003\000.\0002\000\240\000\240\000\240\000P\000r\000o\000g\000r\000a\000m\000-\000l\000o\000c\000a\000l\000 \000f\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
116 0 obj
<<
/Count 7 /Dest [ 83 0 R /XYZ 57.02362 179.4236 0 ] /First 117 0 R /Last 123 0 R /Parent 100 0 R /Prev 110 0 R 
  /Title (\376\377\0001\000.\0004\000\240\000\240\000\240\000L\000o\000a\000d\000 \000a\000n\000d\000 \000s\000t\000o\000r\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
117 0 obj
<<
/Dest [ 91 0 R /XYZ 57.02362 346.0236 0 ] /Next 118 0 R /Parent 116 0 R /Title (\376\377\0001\000.\0004\000.\0001\000\240\000\240\000\240\000R\000e\000g\000u\000l\000a\000r\000 \000l\000o\000a\000d\000 \000a\000n\000d\000 \000s\000t\000o\000r\000e\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
118 0 obj
<<
/Dest [ 91 0 R /XYZ 57.02362 111.4236 0 ] /Next 119 0 R /Parent 116 0 R /Prev 117 0 R /Title (\376\377\0001\000.\0004\000.\0002\000\240\000\240\000\240\000S\000i\000g\000n\000-\000e\000x\000t\000e\000n\000s\000i\000o\000n\000 \000l\000o\000a\000d\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
119 0 obj
<<
/Dest [ 92 0 R /XYZ 57.02362 687.8236 0 ] /Next 120 0 R /Parent 116 0 R /Prev 118 0 R /Title (\376\377\0001\000.\0004\000.\0003\000\240\000\240\000\240\000A\000t\000o\000m\000i\000c\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
120 0 obj
<<
/Count 2 /Dest [ 96 0 R /XYZ 57.02362 765.0236 0 ] /First 121 0 R /Last 122 0 R /Next 123 0 R /Parent 116 0 R 
  /Prev 119 0 R /Title (\376\377\0001\000.\0004\000.\0004\000\240\000\240\000\240\0006\0004\000-\000b\000i\000t\000 \000i\000m\000m\000e\000d\000i\000a\000t\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
121 0 obj
<<
/Dest [ 96 0 R /XYZ 57.02362 330.0236 0 ] /Next 122 0 R /Parent 120 0 R /Title (\376\377\0001\000.\0004\000.\0004\000.\0001\000\240\000\240\000\240\000M\000a\000p\000s)
>>
endobj
122 0 obj
<<
/Dest [ 96 0 R /XYZ 57.02362 210.0236 0 ] /Parent 120 0 R /Prev 121 0 R /Title (\376\377\0001\000.\0004\000.\0004\000.\0002\000\240\000\240\000\240\000P\000l\000a\000t\000f\000o\000r\000m\000 \000V\000a\000r\000i\000a\000b\000l\000e\000s)
>>
endobj
123 0 obj
<<
/Dest [ 96 0 R /XYZ 57.02362 144.0236 0 ] /Parent 116 0 R /Prev 120 0 R /Title (\376\377\0001\000.\0004\000.\0005\000\240\000\240\000\240\000L\000e\000g\000a\000c\000y\000 \000B\000P\000F\000 \000P\000a\000c\000k\000e\000t\000 \000a\000c\000c\000e\000s\000s\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
124 0 obj
<<
/Count 13 /Kids [ 55 0 R 59 0 R 61 0 R 64 0 R 73 0 R 75 0 R 77 0 R 78 0 R 82 0 R 83 0 R 
  91 0 R 92 0 R 96 0 R ] /Type /Pages
>>
endobj
125 0 obj
<<
/Length 8281
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 349.2236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 375.6 cm
q
BT 1 0 0 1 0 1.7 Tm 10.2 TL /F3 8.5 Tf 0 .4 .6 rg (1   BPF Instruction Set Architecture \(ISA\)) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 375.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F3 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 359.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1   Documentation conventions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 359.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 343.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.1   Types) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 343.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.2   Functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.3   Definitions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.4   Conformance groups) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2   Instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.1   Basic instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.2   Wide instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (4) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.3   Instruction classes) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3   Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.1   Arithmetic instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (6) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.2   Byte swap instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (8) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3   Jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3.1   Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3.2   Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4   Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.1   Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.2   Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.3   Atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4   64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4.1   Maps) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4.2   Platform Variables) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.5   Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (13) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 316.2236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (1   BPF Instruction Set Architecture \(ISA\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 274.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.940464 Tw (eBPF, also commonly referred to as BPF, is a technology with origins in the Linux kernel that can run) Tj T* 0 Tw .364556 Tw (untrusted programs in a privileged context such as an operating system kernel. This document specifies the) Tj T* 0 Tw (BPF instruction set architecture \(ISA\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 220.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL -0.060083 Tw (As a historical note, BPF originally stood for Berkeley Packet Filter, but now that it can do so much more than) Tj T* 0 Tw -0.071862 Tw (packet filtering, the acronym no longer makes sense. BPF is now considered a standalone term that does not) Tj T* 0 Tw .058797 Tw (stand for anything. The original BPF is sometimes referred to as cBPF \(classic BPF\) to distinguish it from the) Tj T* 0 Tw (now widely deployed eBPF \(extended BPF\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 190.2236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.1   Documentation conventions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 136.2236 cm
q
BT 1 0 0 1 0 38 Tm -0.018471 Tw 12 TL /F1 10 Tf 0 0 0 rg (The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",) Tj T* 0 Tw 3.783486 Tw ("RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be) Tj T* 0 Tw 26.20139 Tw (interpreted as described in BCP 14 ) Tj 0 .4 .6 rg (https://www.rfc-editor.org/info/rfc2119) Tj 0 0 0 rg  T* 0 Tw 0 .4 .6 rg (https://www.rfc-editor.org/info/rfc8174) Tj 0 0 0 rg ( when, and only when, they appear in all capitals, as shown here.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 94.22362 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .288726 Tw (For brevity and consistency, this document refers to families of types using a shorthand syntax and refers to) Tj T* 0 Tw 1.276796 Tw (several expository, mnemonic functions when describing the semantics of instructions. The range of valid) Tj T* 0 Tw (values for those types and the semantics of those functions are defined in the following subsections.) Tj T* ET
Q
Q
 
endstream
endobj
126 0 obj
<<
/Length 8609
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.1   Types) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 720.0236 cm
q
BT 1 0 0 1 0 14 Tm .752686 Tw 12 TL /F1 10 Tf 0 0 0 rg (This document refers to integer types with the notation ) Tj /F4 10 Tf (SN) Tj /F1 10 Tf ( to specify a type's signedness \() Tj /F4 10 Tf (S) Tj /F1 10 Tf (\) and bit width) Tj T* 0 Tw (\() Tj /F4 10 Tf (N) Tj /F1 10 Tf (\), respectively.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 714.0236 cm
Q
q
1 0 0 1 57.02362 690.0236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 176.8692 0 Td (Meaning of signedness notation) Tj T* -176.8692 0 Td ET
Q
Q
q
1 0 0 1 57.02362 630.0236 cm
q
1 1 1 rg
n 0 54 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 481.2283 -18 re f*
1 1 1 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 64.70013 0 Td (S) Tj T* -64.70013 0 Td ET
Q
Q
q
1 0 0 1 154.0703 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 140.299 0 Td (Meaning) Tj T* -140.299 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (u) Tj T* ET
Q
Q
q
1 0 0 1 154.0703 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (s) Tj T* ET
Q
Q
q
1 0 0 1 154.0703 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 148.0703 0 m 148.0703 54 l S
n 0 54 m 481.2283 54 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 54 l S
n 481.2283 0 m 481.2283 54 l S
Q
Q
Q
q
1 0 0 1 57.02362 630.0236 cm
Q
q
1 0 0 1 57.02362 624.0236 cm
Q
q
1 0 0 1 57.02362 600.0236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 180.1992 0 Td (Meaning of bit-width notation) Tj T* -180.1992 0 Td ET
Q
Q
q
1 0 0 1 57.02362 486.0236 cm
q
1 1 1 rg
n 0 108 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -18 re f*
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 76.32363 0 Td (N) Tj T* -76.32363 0 Td ET
Q
Q
q
1 0 0 1 177.8673 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 127.5705 0 Td (Bit width) Tj T* -127.5705 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (128) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (128 bits) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 90 m 481.2283 90 l S
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 171.8673 0 m 171.8673 108 l S
n 0 108 m 481.2283 108 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 108 l S
n 481.2283 0 m 481.2283 108 l S
Q
Q
Q
q
1 0 0 1 57.02362 486.0236 cm
Q
q
1 0 0 1 57.02362 456.0236 cm
q
BT 1 0 0 1 0 14 Tm .355917 Tw 12 TL /F1 10 Tf 0 0 0 rg (For example, ) Tj /F4 10 Tf (u32) Tj /F1 10 Tf ( is a type whose valid values are all the 32-bit unsigned numbers and ) Tj /F4 10 Tf (s16) Tj /F1 10 Tf ( is a type whose) Tj T* 0 Tw (valid values are all the 16-bit signed numbers.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 429.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.2   Functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 399.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .364556 Tw (The following byteswap functions are direction-agnostic. That is, the same function is used for conversion in) Tj T* 0 Tw (either direction discussed below.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 393.0236 cm
Q
q
1 0 0 1 57.02362 393.0236 cm
Q
q
1 0 0 1 57.02362 369.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.47631 Tw 12 TL /F1 10 Tf 0 0 0 rg (be16: Takes an unsigned 16-bit number and converts it between host byte order and big-endian) Tj T* 0 Tw (\() Tj 0 .4 .6 rg (IEN137) Tj 0 0 0 rg (\) byte order.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 363.0236 cm
Q
q
1 0 0 1 57.02362 339.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .86589 Tw (be32: Takes an unsigned 32-bit number and converts it between host byte order and big-endian byte) Tj T* 0 Tw (order.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 333.0236 cm
Q
q
1 0 0 1 57.02362 309.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .86589 Tw (be64: Takes an unsigned 64-bit number and converts it between host byte order and big-endian byte) Tj T* 0 Tw (order.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 303.0236 cm
Q
q
1 0 0 1 57.02362 279.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.79631 Tw (bswap16: Takes an unsigned 16-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 273.0236 cm
Q
q
1 0 0 1 57.02362 249.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.79631 Tw (bswap32: Takes an unsigned 32-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 243.0236 cm
Q
q
1 0 0 1 57.02362 219.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.79631 Tw (bswap64: Takes an unsigned 64-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 213.0236 cm
Q
q
1 0 0 1 57.02362 189.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .792556 Tw (le16: Takes an unsigned 16-bit number and converts it between host byte order and little-endian byte) Tj T* 0 Tw (order.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 183.0236 cm
Q
q
1 0 0 1 57.02362 159.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .792556 Tw (le32: Takes an unsigned 32-bit number and converts it between host byte order and little-endian byte) Tj T* 0 Tw (order.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 153.0236 cm
Q
q
1 0 0 1 57.02362 129.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .792556 Tw (le64: Takes an unsigned 64-bit number and converts it between host byte order and little-endian byte) Tj T* 0 Tw (order.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 129.0236 cm
Q
q
1 0 0 1 57.02362 102.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.3   Definitions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 84.02362 cm
Q
 
endstream
endobj
127 0 obj
<<
/Length 7497
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 648.8236 cm
q
1 .972549 .862745 rg
n 0 116.2 481.2283 -116.2 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 90.2 Tm  T* ET
q
1 0 0 1 16 85.2 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2.5 Tm /F2 12.5 Tf 15 TL (Example) Tj T* ET
Q
Q
q
1 0 0 1 16 61.2 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sign extend an 8-bit number ) Tj /F5 10 Tf (A) Tj /F1 10 Tf ( to a 16-bit number ) Tj /F5 10 Tf (B) Tj /F1 10 Tf ( on a big-endian platform:) Tj T* ET
Q
Q
q
1 0 0 1 16 16 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 448.0283 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F5 10 Tf 12 TL (A:          10000110) Tj T* (B: 11111111 10000110) Tj T* ET
Q
Q
Q
Q
Q
q
1 J
1 j
.662745 .662745 .662745 RG
.5 w
n 0 116.2 m 481.2283 116.2 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 116.2 l S
n 481.2283 0 m 481.2283 116.2 l S
Q
Q
Q
q
1 0 0 1 57.02362 642.8236 cm
Q
q
1 0 0 1 57.02362 615.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.4   Conformance groups) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 561.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.619168 Tw (An implementation does not need to support all instructions specified in this document \(e.g., deprecated) Tj T* 0 Tw .335257 Tw (instructions\). Instead, a number of conformance groups are specified. An implementation MUST support the) Tj T* 0 Tw 4.486213 Tw (base32 conformance group and MAY support additional conformance groups, where supporting a) Tj T* 0 Tw (conformance group means it MUST support all instructions in that conformance group.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 519.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 4.483196 Tw (The use of named conformance groups enables interoperability between a runtime that executes) Tj T* 0 Tw -0.045118 Tw (instructions, and tools such as compilers that generate instructions for the runtime. Thus, capability discovery) Tj T* 0 Tw (in terms of conformance groups might be done manually by users or automatically by tools.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 489.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .973022 Tw (Each conformance group has a short ASCII label \(e.g., "base32"\) that corresponds to a set of instructions) Tj T* 0 Tw (that are mandatory. That is, each instruction has one or more conformance groups of which it is a member.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 471.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This document defines the following conformance groups:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 465.8236 cm
Q
q
1 0 0 1 57.02362 465.8236 cm
Q
q
1 0 0 1 57.02362 453.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (base32: includes all instructions defined in this specification unless otherwise noted.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 447.8236 cm
Q
q
1 0 0 1 57.02362 435.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (base64: includes base32, plus instructions explicitly noted as being in the base64 conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 429.8236 cm
Q
q
1 0 0 1 57.02362 417.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (atomic32: includes 32-bit atomic operation instructions \(see ) Tj 0 .4 .6 rg (Atomic operations) Tj 0 0 0 rg (\).) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 411.8236 cm
Q
q
1 0 0 1 57.02362 399.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic64: includes atomic32, plus 64-bit atomic operation instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 393.8236 cm
Q
q
1 0 0 1 57.02362 381.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (divmul32: includes 32-bit division, multiplication, and modulo instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 375.8236 cm
Q
q
1 0 0 1 57.02362 363.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (divmul64: includes divmul32, plus 64-bit division, multiplication, and modulo instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 357.8236 cm
Q
q
1 0 0 1 57.02362 345.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (packet: deprecated packet access instructions.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 345.8236 cm
Q
q
1 0 0 1 57.02362 315.8236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.2   Instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 297.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF has two instruction encodings:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 291.8236 cm
Q
q
1 0 0 1 57.02362 291.8236 cm
Q
q
1 0 0 1 57.02362 279.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the basic instruction encoding, which uses 64 bits to encode an instruction) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 273.8236 cm
Q
q
1 0 0 1 57.02362 249.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .699314 Tw (the wide instruction encoding, which appends a second 64 bits after the basic instruction for a total of) Tj T* 0 Tw (128 bits.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 249.8236 cm
Q
q
1 0 0 1 57.02362 222.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.1   Basic instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 204.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A basic instruction is encoded as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 123.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|    opcode     |     regs      |            offset             |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                              imm                              |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 103.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (opcode) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 88.62362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (operation to perform, encoded as follows:) Tj T* ET
Q
Q
q
Q
Q
Q
 
endstream
endobj
128 0 obj
<<
/Length 5469
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 642.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 109.2 Tm  T* ET
q
1 0 0 1 20 70 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 454.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|specific |class|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 20 46 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (specific) Tj T* ET
Q
Q
q
1 0 0 1 20 31 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of these bits varies by instruction class) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (class) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 626.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (regs) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 377.4236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 236.4 Tm  T* ET
q
1 0 0 1 20 234.4 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The source and destination register numbers, encoded as follows on a little-endian host:) Tj T* ET
Q
Q
q
1 0 0 1 20 177.2 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 460.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|src_reg|dst_reg|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 20 151.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and as follows on a big-endian host:) Tj T* ET
Q
Q
q
1 0 0 1 20 94 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 460.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|dst_reg|src_reg|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 20 70 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (src_reg) Tj T* ET
Q
Q
q
1 0 0 1 20 43 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm .552577 Tw 12 TL /F1 10 Tf 0 0 0 rg (the source register number \(0-10\), except where otherwise specified \() Tj 0 .4 .6 rg (64-bit immediate instructions) Tj 0 0 0 rg  T* 0 Tw (reuse this field for other purposes\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (dst_reg) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .905304 Tw (destination register number \(0-10\), unless otherwise specified \(future instructions might reuse this) Tj T* 0 Tw (field for other purposes\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 361.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (offset) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 334.4236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.430696 Tw (signed integer offset used with pointer arithmetic, except where otherwise specified \(some arithmetic) Tj T* 0 Tw (instructions reuse this field for other purposes\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 318.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 303.4236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 273.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.148647 Tw (Note that the contents of multi-byte fields \('offset' and 'imm'\) are stored using big-endian byte ordering on) Tj T* 0 Tw (big-endian hosts and little-endian byte ordering on little-endian hosts.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 255.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For example:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 174.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F5 10 Tf 12 TL (opcode                  offset imm          assembly) Tj T* (       src_reg dst_reg) Tj T* (07     0       1        00 00  44 33 22 11  r1 += 0x11223344 // little) Tj T* (       dst_reg src_reg) Tj T* (07     1       0        00 00  11 22 33 44  r1 += 0x11223344 // big) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 154.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Note that most instructions do not use all of the fields. Unused fields SHALL be cleared to zero.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 127.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.2   Wide instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 85.22362 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .179223 Tw (Some instructions are defined to use the wide instruction encoding, which uses two 32-bit immediate values.) Tj T* 0 Tw 2.503453 Tw (The 64 bits following the basic instruction format contain a pseudo instruction with 'opcode', 'dst_reg',) Tj T* 0 Tw ('src_reg', and 'offset' all set to zero.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 67.22362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This is depicted in the following figure:) Tj T* ET
Q
Q
 
endstream
endobj
129 0 obj
<<
/Length 8619
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 643.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 98 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|    opcode     |     regs      |            offset             |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                              imm                              |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                           reserved                            |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* (|                           next_imm                            |) Tj T* (+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 623.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (opcode) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 608.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (operation to perform, encoded as explained above) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 592.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (regs) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 577.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The source and destination register numbers \(unless otherwise specified\), encoded as explained above) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 561.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (offset) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 546.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer offset used with pointer arithmetic, unless otherwise specified) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 530.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 515.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 499.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (reserved) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 484.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unused, set to zero) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 468.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (next_imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 453.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (second signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 426.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.3   Instruction classes) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 408.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The three least significant bits of the 'opcode' field store the instruction class:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 402.8236 cm
Q
q
1 0 0 1 57.02362 378.8236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 207.9792 0 Td (Instruction class) Tj T* -207.9792 0 Td ET
Q
Q
q
1 0 0 1 57.02362 162.8236 cm
q
1 1 1 rg
n 0 210 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 180 481.2283 -18 re f*
1 1 1 rg
n 0 162 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 144 481.2283 -18 re f*
1 1 1 rg
n 0 126 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 108 481.2283 -18 re f*
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL .09988 0 Td (clas) Tj T* 6.95 0 Td (s) Tj T* -7.04988 0 Td ET
Q
Q
q
1 0 0 1 37.65976 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.87988 0 Td (val) Tj T* 1.115 0 Td (ue) Tj T* -3.99488 0 Td ET
Q
Q
q
1 0 0 1 69.31952 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 65.19525 0 Td (description) Tj T* -65.19525 0 Td ET
Q
Q
q
1 0 0 1 265.61 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 82.29916 0 Td (reference) Tj T* -82.29916 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LD) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (non-standard load operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LDX) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (load into register operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 147 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ST) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (store from immediate operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 129 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (STX) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (store from register operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 111 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ALU) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x4) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32-bit arithmetic operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 93 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JM) Tj T* (P) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x5) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit jump operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 75 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JM) Tj T* (P32) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x6) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32-bit jump operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 45 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (ALU) Tj T* (64) Tj T* ET
Q
Q
q
1 0 0 1 37.65976 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x7) Tj T* ET
Q
Q
q
1 0 0 1 69.31952 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit arithmetic operations) Tj T* ET
Q
Q
q
1 0 0 1 265.61 15 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 180 m 481.2283 180 l S
n 0 162 m 481.2283 162 l S
n 0 144 m 481.2283 144 l S
n 0 126 m 481.2283 126 l S
n 0 108 m 481.2283 108 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 31.65976 0 m 31.65976 210 l S
n 63.31952 0 m 63.31952 210 l S
n 259.61 0 m 259.61 210 l S
n 0 210 m 481.2283 210 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 210 l S
n 481.2283 0 m 481.2283 210 l S
Q
Q
Q
q
1 0 0 1 57.02362 162.8236 cm
Q
q
1 0 0 1 57.02362 132.8236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.3   Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 102.8236 cm
q
BT 1 0 0 1 0 14 Tm 1.154897 Tw 12 TL /F1 10 Tf 0 0 0 rg (For arithmetic and jump instructions \() Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (JMP) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (JMP32) Tj /F1 10 Tf (\), the 8-bit 'opcode' field is divided into) Tj T* 0 Tw (three parts:) Tj T* ET
Q
Q
 
endstream
endobj
130 0 obj
<<
/Length 9700
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 715.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|  code |s|class|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 695.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (code) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 680.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the operation code, whose meaning varies by instruction class) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 664.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (s \(source\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 559.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the source operand location, which unless otherwise specified is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 60 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 182.0142 0 Td (Source operand location) Tj T* -182.0142 0 Td ET
Q
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 54 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 461.2283 -18 re f*
1 1 1 rg
n 0 18 461.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.880176 0 Td (source) Tj T* -1.880176 0 Td ET
Q
Q
q
1 0 0 1 54.55035 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.444313 0 Td (value) Tj T* -1.444313 0 Td ET
Q
Q
q
1 0 0 1 95.00898 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 153.1597 0 Td (description) Tj T* -153.1597 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (K) Tj T* ET
Q
Q
q
1 0 0 1 54.55035 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 95.00898 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use 32-bit 'imm' value as source operand) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (X) Tj T* ET
Q
Q
q
1 0 0 1 54.55035 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 95.00898 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use 'src_reg' register value as source operand) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 461.2283 36 l S
n 0 18 m 461.2283 18 l S
n 48.55035 0 m 48.55035 54 l S
n 89.00898 0 m 89.00898 54 l S
n 0 54 m 461.2283 54 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 54 l S
n 461.2283 0 m 461.2283 54 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 543.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (instruction class) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 528.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 501.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.1   Arithmetic instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 447.8236 cm
q
BT 1 0 0 1 0 38 Tm 1.01131 Tw 12 TL /F5 10 Tf 0 0 0 rg (ALU) Tj /F1 10 Tf ( uses 32-bit wide operands while ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( uses 64-bit wide operands for otherwise identical operations.) Tj T* 0 Tw 2.73295 Tw /F5 10 Tf (ALU64) Tj /F1 10 Tf ( instructions belong to the base64 conformance group unless noted otherwise. The 'code' field) Tj T* 0 Tw .468334 Tw (encodes the operation as below, where 'src' refers to the the source operand and 'dst' refers to the value of) Tj T* 0 Tw (the destination register.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 441.8236 cm
Q
q
1 0 0 1 57.02362 417.8236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 194.3642 0 Td (Arithmetic instructions) Tj T* -194.3642 0 Td ET
Q
Q
q
1 0 0 1 57.02362 87.82362 cm
q
1 1 1 rg
n 0 324 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 294 481.2283 -30 re f*
1 1 1 rg
n 0 264 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 234 481.2283 -30 re f*
1 1 1 rg
n 0 204 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 186 481.2283 -30 re f*
1 1 1 rg
n 0 156 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 138 481.2283 -30 re f*
1 1 1 rg
n 0 108 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -30 re f*
1 1 1 rg
n 0 60 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 4.205945 0 Td (na) Tj T* -1.39 0 Td (me) Tj T* -2.815945 0 Td ET
Q
Q
q
1 0 0 1 38.08189 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 1.150945 0 Td (cod) Tj T* 6.11 0 Td (e) Tj T* -7.260945 0 Td ET
Q
Q
q
1 0 0 1 70.16378 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 2.847323 0 Td (offset) Tj T* -2.847323 0 Td ET
Q
Q
q
1 0 0 1 115.0784 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 153.125 0 Td (description) Tj T* -153.125 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (AD) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst += src) Tj T* ET
Q
Q
q
1 0 0 1 6 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (SU) Tj T* (B) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst -= src) Tj T* ET
Q
Q
q
1 0 0 1 6 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MU) Tj T* (L) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst *= src) Tj T* ET
Q
Q
q
1 0 0 1 6 189 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (DIV) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 189 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 189 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 189 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst / src\) : 0) Tj T* ET
Q
Q
q
1 0 0 1 6 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (SDI) Tj T* (V) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst s/ src\) : 0) Tj T* ET
Q
Q
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (OR) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x4) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst |= src) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (AN) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x5) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 123 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst &) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LSH) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x6) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 93 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst <) Tj (<) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (RS) Tj T* (H) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x7) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 75 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst >) Tj (>) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (NE) Tj T* (G) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x8) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = -dst) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MO) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x9) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst % src\) : dst) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 0 m 481.2283 0 l S
n 0 294 m 481.2283 294 l S
n 0 264 m 481.2283 264 l S
n 0 234 m 481.2283 234 l S
n 0 204 m 481.2283 204 l S
n 0 186 m 481.2283 186 l S
n 0 156 m 481.2283 156 l S
n 0 138 m 481.2283 138 l S
n 0 108 m 481.2283 108 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 32.08189 0 m 32.08189 324 l S
n 64.16378 0 m 64.16378 324 l S
n 109.0784 0 m 109.0784 324 l S
n 0 324 m 481.2283 324 l S
n 0 0 m 0 324 l S
n 481.2283 0 m 481.2283 324 l S
Q
Q
Q
 
endstream
endobj
131 0 obj
<<
/Length 8415
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 597.0236 cm
q
1 1 1 rg
n 0 168 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 138 481.2283 -30 re f*
1 1 1 rg
n 0 108 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 78 481.2283 -30 re f*
1 1 1 rg
n 0 48 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (SM) Tj T* (OD) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x9) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst s% src\) : dst) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (XO) Tj T* (R) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xa) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst ^= src) Tj T* ET
Q
Q
q
1 0 0 1 6 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MO) Tj T* (V) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xb) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = src) Tj T* ET
Q
Q
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (MO) Tj T* (VSX) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xb) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (8/16/3) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(s8,s16,s32\)src) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (AR) Tj T* (SH) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xc) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 33 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (:term:`sign extending) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( dst >) Tj (>) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (END) Tj T* ET
Q
Q
q
1 0 0 1 38.08189 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xd) Tj T* ET
Q
Q
q
1 0 0 1 70.16378 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 115.0784 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (byte swap operations \(see ) Tj 0 .4 .6 rg (Byte swap instructions) Tj 0 0 0 rg ( below\)) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 168 m 481.2283 168 l S
n 0 138 m 481.2283 138 l S
n 0 108 m 481.2283 108 l S
n 0 78 m 481.2283 78 l S
n 0 48 m 481.2283 48 l S
n 0 18 m 481.2283 18 l S
n 32.08189 0 m 32.08189 168 l S
n 64.16378 0 m 64.16378 168 l S
n 109.0784 0 m 109.0784 168 l S
n 0 0 m 0 168 l S
n 481.2283 0 m 481.2283 168 l S
n 0 0 m 481.2283 0 l S
Q
Q
Q
q
1 0 0 1 57.02362 597.0236 cm
Q
q
1 0 0 1 57.02362 543.0236 cm
q
BT 1 0 0 1 0 38 Tm -0.115444 Tw 12 TL /F1 10 Tf 0 0 0 rg (Underflow and overflow are allowed during arithmetic operations, meaning the 64-bit or 32-bit value will wrap.) Tj T* 0 Tw .95213 Tw (If BPF program execution would result in division by zero, the destination register is instead set to zero. If) Tj T* 0 Tw 1.869272 Tw (execution would result in modulo by zero, for ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( the value of the destination register is unchanged) Tj T* 0 Tw (whereas for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf ( the upper 32 bits of the destination register are zeroed.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 525.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ADD,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf (, where 'code' = ) Tj /F5 10 Tf (ADD) Tj /F1 10 Tf (, 'source' = ) Tj /F5 10 Tf (X) Tj /F1 10 Tf (, and 'class' = ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 491.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\) \(\(u32\) dst + \(u32\) src\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 471.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where '\(u32\)' indicates that the upper 32 bits are zeroed.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 453.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ADD,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 420.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = dst + src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 400.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({XOR,) Tj ( ) Tj (K,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 367.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\) dst ^ \(u32\) imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 347.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({XOR,) Tj ( ) Tj (K,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 314.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = dst ^ imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 282.2236 cm
q
BT 1 0 0 1 0 14 Tm 1.468556 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that most arithmetic instructions have 'offset' set to 0. Only three instructions \() Tj /F5 10 Tf (SDIV) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (SMOD) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (MOVSX) Tj /F1 10 Tf (\)) Tj T* 0 Tw (have a non-zero 'offset'.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 240.2236 cm
q
BT 1 0 0 1 0 26 Tm 1.019168 Tw 12 TL /F1 10 Tf 0 0 0 rg (Division, multiplication, and modulo operations for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf ( are part of the "divmul32" conformance group, and) Tj T* 0 Tw .24131 Tw (division, multiplication, and modulo operations for ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( are part of the "divmul64" conformance group. The) Tj T* 0 Tw (division and modulo operations support both unsigned and signed flavors.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 198.2236 cm
q
BT 1 0 0 1 0 26 Tm .190491 Tw 12 TL /F1 10 Tf 0 0 0 rg (For unsigned operations \() Tj /F5 10 Tf (DIV) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (MOD) Tj /F1 10 Tf (\), for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, 'imm' is interpreted as a 32-bit unsigned value. For ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (,) Tj T* 0 Tw -0.067744 Tw ('imm' is first ) Tj 1 0 0 rg (:term:`sign extended) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( from 32 to 64 bits, and then interpreted as a 64-bit unsigned) Tj T* 0 Tw (value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 156.2236 cm
q
BT 1 0 0 1 0 26 Tm .792844 Tw 12 TL /F1 10 Tf 0 0 0 rg (For signed operations \() Tj /F5 10 Tf (SDIV) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (SMOD) Tj /F1 10 Tf (\), for ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, 'imm' is interpreted as a 32-bit signed value. For ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (,) Tj T* 0 Tw .586373 Tw ('imm' is first ) Tj 1 0 0 rg (:term:`sign extended) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( from 32 to 64 bits, and then interpreted as a 64-bit signed) Tj T* 0 Tw (value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 102.2236 cm
q
BT 1 0 0 1 0 38 Tm 1.938022 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there are varying definitions of the signed modulo operation when the dividend or divisor are) Tj T* 0 Tw 1.58589 Tw (negative, where implementations often vary by language such that Python, Ruby, etc. differ from C, Go,) Tj T* 0 Tw .126373 Tw (Java, etc. This specification requires that signed modulo MUST use truncated division \(where -13 % 3 == -1\)) Tj T* 0 Tw (as implemented in C, Go, etc.:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 69.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (a % n = a - n * trunc\(a / n\)) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
132 0 obj
<<
/Length 7518
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 717.0236 cm
q
BT 1 0 0 1 0 38 Tm 3.50295 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (MOVSX) Tj /F1 10 Tf ( instruction does a move operation with sign extension. ) Tj /F5 10 Tf ({MOVSX,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( ) Tj 1 0 0 rg (:term:`sign) Tj T* 0 Tw .823453 Tw (extends) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( 8-bit and 16-bit operands into 32-bit operands, and zeroes the remaining upper 32) Tj T* 0 Tw .567565 Tw (bits. ) Tj /F5 10 Tf ({MOVSX,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( ) Tj 1 0 0 rg (:term:`sign extends) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( 8-bit, 16-bit, and 32-bit operands into 64-bit) Tj T* 0 Tw (operands. Unlike other arithmetic instructions, ) Tj /F5 10 Tf (MOVSX) Tj /F1 10 Tf ( is only defined for register source operands \() Tj /F5 10 Tf (X) Tj /F1 10 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 699.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MOV,) Tj ( ) Tj (K,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 665.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(s64\)imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 645.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MOV,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 612.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\)src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 592.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MOVSX,) Tj ( ) Tj (X,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( with 'offset' 8 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 559.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\)\(s32\)\(s8\)src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 539.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (NEG) Tj /F1 10 Tf ( instruction is only defined when the source bit is clear \() Tj /F5 10 Tf (K) Tj /F1 10 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 521.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Shift operations use a mask of 0x3F \(63\) for 64-bit operations and 0x1F \(31\) for 32-bit operations.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 494.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.2   Byte swap instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 476.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The byte swap instructions use instruction classes of ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf ( and a 4-bit 'code' field of ) Tj /F5 10 Tf (END) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 446.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.040097 Tw (The byte swap instructions operate on the destination register only and do not use a separate source register) Tj T* 0 Tw (or immediate value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 416.4236 cm
q
BT 1 0 0 1 0 14 Tm -0.017982 Tw 12 TL /F1 10 Tf 0 0 0 rg (For ) Tj /F5 10 Tf (ALU) Tj /F1 10 Tf (, the 1-bit source operand field in the opcode is used to select what byte order the operation converts) Tj T* 0 Tw (from or to. For ) Tj /F5 10 Tf (ALU64) Tj /F1 10 Tf (, the 1-bit source operand field in the opcode is reserved and MUST be set to 0.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 410.4236 cm
Q
q
1 0 0 1 57.02362 386.4236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 195.0592 0 Td (Byte swap instructions) Tj T* -195.0592 0 Td ET
Q
Q
q
1 0 0 1 57.02362 284.4236 cm
q
1 1 1 rg
n 0 96 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 66 481.2283 -18 re f*
1 1 1 rg
n 0 48 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.226282 0 Td (clas) Tj T* 6.95 0 Td (s) Tj T* -9.176282 0 Td ET
Q
Q
q
1 0 0 1 41.91256 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 6.335051 0 Td (source) Tj T* -6.335051 0 Td ET
Q
Q
q
1 0 0 1 99.37266 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 1.951282 0 Td (valu) Tj T* 7.225 0 Td (e) Tj T* -9.176282 0 Td ET
Q
Q
q
1 0 0 1 135.2852 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 143.0216 0 Td (description) Tj T* -143.0216 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ALU) Tj T* ET
Q
Q
q
1 0 0 1 41.91256 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (LE) Tj T* ET
Q
Q
q
1 0 0 1 99.37266 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 135.2852 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (convert between host byte order and little endian) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ALU) Tj T* ET
Q
Q
q
1 0 0 1 41.91256 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BE) Tj T* ET
Q
Q
q
1 0 0 1 99.37266 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 135.2852 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (convert between host byte order and big endian) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (ALU) Tj T* (64) Tj T* ET
Q
Q
q
1 0 0 1 41.91256 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Reserved) Tj T* ET
Q
Q
q
1 0 0 1 99.37266 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 135.2852 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (do byte swap unconditionally) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 66 m 481.2283 66 l S
n 0 48 m 481.2283 48 l S
n 0 30 m 481.2283 30 l S
n 35.91256 0 m 35.91256 96 l S
n 93.37266 0 m 93.37266 96 l S
n 129.2852 0 m 129.2852 96 l S
n 0 96 m 481.2283 96 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 96 l S
n 481.2283 0 m 481.2283 96 l S
Q
Q
Q
q
1 0 0 1 57.02362 284.4236 cm
Q
q
1 0 0 1 57.02362 242.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .058797 Tw (The 'imm' field encodes the width of the swap operations. The following widths are supported: 16, 32 and 64.) Tj T* 0 Tw 1.731223 Tw (Width 64 operations belong to the base64 conformance group and other swap operations belong to the) Tj T* 0 Tw (base32 conformance group.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 224.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Examples:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 206.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({END,) Tj ( ) Tj (LE,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( with 'imm' = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 149.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = le16\(dst\)) Tj T* (dst = le32\(dst\)) Tj T* (dst = le64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 129.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({END,) Tj ( ) Tj (BE,) Tj ( ) Tj (ALU}) Tj /F1 10 Tf ( with 'imm' = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 72.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = be16\(dst\)) Tj T* (dst = be32\(dst\)) Tj T* (dst = be64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
133 0 obj
<<
/Length 11080
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 753.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({END,) Tj ( ) Tj (TO,) Tj ( ) Tj (ALU64}) Tj /F1 10 Tf ( with 'imm' = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 695.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = bswap16\(dst\)) Tj T* (dst = bswap32\(dst\)) Tj T* (dst = bswap64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 668.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.3   Jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 626.8236 cm
q
BT 1 0 0 1 0 26 Tm .312556 Tw 12 TL /F5 10 Tf 0 0 0 rg (JMP32) Tj /F1 10 Tf ( uses 32-bit wide operands and indicates the base32 conformance group, while ) Tj /F5 10 Tf (JMP) Tj /F1 10 Tf ( uses 64-bit wide) Tj T* 0 Tw .639029 Tw (operands for otherwise identical operations, and indicates the base64 conformance group unless otherwise) Tj T* 0 Tw (specified. The 'code' field encodes the operation as below:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 620.8236 cm
Q
q
1 0 0 1 57.02362 596.8236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 205.1942 0 Td (Jump instructions) Tj T* -205.1942 0 Td ET
Q
Q
q
1 0 0 1 57.02362 68.82362 cm
q
1 1 1 rg
n 0 522 481.2283 -42 re f*
.878431 .878431 .878431 rg
n 0 480 481.2283 -30 re f*
1 1 1 rg
n 0 450 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 420 481.2283 -30 re f*
1 1 1 rg
n 0 390 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 360 481.2283 -30 re f*
1 1 1 rg
n 0 330 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 300 481.2283 -30 re f*
1 1 1 rg
n 0 270 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 240 481.2283 -30 re f*
1 1 1 rg
n 0 210 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 180 481.2283 -30 re f*
1 1 1 rg
n 0 150 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 120 481.2283 -30 re f*
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL .838783 0 Td (code) Tj T* -0.838783 0 Td ET
Q
Q
q
1 0 0 1 43.01757 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .007989 0 Td (va) Tj T* 1.115 0 Td (lu) Tj T* 1.665 0 Td (e) Tj T* -2.787989 0 Td ET
Q
Q
q
1 0 0 1 66.15354 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL 2.690185 0 Td (src) Tj T* -0 0 Td (_re) Tj T* 4.45 0 Td (g) Tj T* -7.140185 0 Td ET
Q
Q
q
1 0 0 1 98.54391 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 43.39873 0 Td (description) Tj T* -43.39873 0 Td ET
Q
Q
q
1 0 0 1 251.2414 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 98.65849 0 Td (notes) Tj T* -98.65849 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JA) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 453 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ({JA, K, JMP} only) Tj T* ET
Q
Q
q
1 0 0 1 6 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JA) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 423 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += imm) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ({JA, K, JMP32} only) Tj T* ET
Q
Q
q
1 0 0 1 6 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JEQ) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 393 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (1) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset if dst == src) Tj T* ET
Q
Q
q
1 0 0 1 6 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JGT) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 375 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst > src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JGE) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (3) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 345 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst >) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSET) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (4) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 315 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst & src) Tj T* ET
Q
Q
q
1 0 0 1 6 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JNE) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (5) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset if dst != src) Tj T* ET
Q
Q
q
1 0 0 1 6 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JSG) Tj T* (T) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (6) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst > src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (JSG) Tj T* (E) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (7) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 225 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst >) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CALL) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call helper function by static ID) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 195 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ({CALL, K, JMP} only, see ) Tj 0 .4 .6 rg (Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CALL) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call PC += imm) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 165 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ({CALL, K, JMP} only, see ) Tj 0 .4 .6 rg (Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 6 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CALL) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call helper function by BTF ID) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 135 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ({CALL, K, JMP} only, see ) Tj 0 .4 .6 rg (Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 6 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (EXIT) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (9) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (return) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ({CALL, K, JMP} only) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JLT) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (a) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 75 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst < src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JLE) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (b) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 45 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst <) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSLT) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (c) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst < src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 0 m 481.2283 0 l S
n 0 480 m 481.2283 480 l S
n 0 450 m 481.2283 450 l S
n 0 420 m 481.2283 420 l S
n 0 390 m 481.2283 390 l S
n 0 360 m 481.2283 360 l S
n 0 330 m 481.2283 330 l S
n 0 300 m 481.2283 300 l S
n 0 270 m 481.2283 270 l S
n 0 240 m 481.2283 240 l S
n 0 210 m 481.2283 210 l S
n 0 180 m 481.2283 180 l S
n 0 150 m 481.2283 150 l S
n 0 120 m 481.2283 120 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 37.01757 0 m 37.01757 522 l S
n 60.15354 0 m 60.15354 522 l S
n 92.54391 0 m 92.54391 522 l S
n 245.2414 0 m 245.2414 522 l S
n 0 522 m 481.2283 522 l S
n 0 0 m 0 522 l S
n 481.2283 0 m 481.2283 522 l S
Q
Q
Q
 
endstream
endobj
134 0 obj
<<
/Length 6831
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 735.0236 cm
q
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (JSLE) Tj T* ET
Q
Q
q
1 0 0 1 43.01757 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (d) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (any) Tj T* ET
Q
Q
q
1 0 0 1 98.54391 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst <) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 251.2414 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 30 m 481.2283 30 l S
n 37.01757 0 m 37.01757 30 l S
n 60.15354 0 m 60.15354 30 l S
n 92.54391 0 m 92.54391 30 l S
n 245.2414 0 m 245.2414 30 l S
n 0 0 m 0 30 l S
n 481.2283 0 m 481.2283 30 l S
n 0 0 m 481.2283 0 l S
Q
Q
Q
q
1 0 0 1 57.02362 735.0236 cm
Q
q
1 0 0 1 57.02362 693.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.665197 Tw (where 'PC' denotes the program counter, and the offset to increment by is in units of 64-bit instructions) Tj T* 0 Tw .096373 Tw (relative to the instruction following the jump instruction. Thus 'PC += 1' skips execution of the next instruction) Tj T* 0 Tw (if it's a basic instruction or results in undefined behavior if the next instruction is a 128-bit wide instruction.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Example:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 657.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({JSGE,) Tj ( ) Tj (X,) Tj ( ) Tj (JMP32}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 623.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (if \(s32\)dst s) Tj (>) Tj (= \(s32\)src goto +offset) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 603.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (where 's) Tj (>) Tj (=' indicates a signed ') Tj (>) Tj (=' comparison.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 585.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({JLE,) Tj ( ) Tj (K,) Tj ( ) Tj (JMP}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 552.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (if dst ) Tj (<) Tj (= \(u64\)\(s64\)imm goto +offset) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 532.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({JA,) Tj ( ) Tj (K,) Tj ( ) Tj (JMP32}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 499.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (gotol +imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 479.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where 'imm' means the branch offset comes from the 'imm' field.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 437.4236 cm
q
BT 1 0 0 1 0 26 Tm .171492 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there are two flavors of ) Tj /F5 10 Tf (JA) Tj /F1 10 Tf ( instructions. The ) Tj /F5 10 Tf (JMP) Tj /F1 10 Tf ( class permits a 16-bit jump offset specified by the) Tj T* 0 Tw 1.254353 Tw ('offset' field, whereas the ) Tj /F5 10 Tf (JMP32) Tj /F1 10 Tf ( class permits a 32-bit jump offset specified by the 'imm' field. A > 16-bit) Tj T* 0 Tw (conditional jump may be converted to a < 16-bit conditional jump plus a 32-bit unconditional jump.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 419.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (All ) Tj /F5 10 Tf (CALL) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (JA) Tj /F1 10 Tf ( instructions belong to the base32 conformance group.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 395.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.3.3.1   Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 365.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .858797 Tw (Helper functions are a concept whereby BPF programs can call into a set of function calls exposed by the) Tj T* 0 Tw (underlying platform.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 311.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 4.038556 Tw (Historically, each helper function was identified by a static ID encoded in the 'imm' field. Further) Tj T* 0 Tw .304272 Tw (documentation of helper functions is outside the scope of this document and standardization is left for future) Tj T* 0 Tw -0.00611 Tw (work, but use is widely deployed and more information can be found in platform-specific documentation \(e.g.,) Tj T* 0 Tw (Linux kernel documentation\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 257.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL -0.070686 Tw (Platforms that support the BPF Type Format \(BTF\) support identifying a helper function by a BTF ID encoded) Tj T* 0 Tw 1.048797 Tw (in the 'imm' field, where the BTF ID identifies the helper name and type. Further documentation of BTF is) Tj T* 0 Tw .116575 Tw (outside the scope of this document and standardization is left for future work, but use is widely deployed and) Tj T* 0 Tw (more information can be found in platform-specific documentation \(e.g., Linux kernel documentation\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 233.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.3.3.2   Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 191.4236 cm
q
BT 1 0 0 1 0 26 Tm .62389 Tw 12 TL /F1 10 Tf 0 0 0 rg (Program-local functions are functions exposed by the same BPF program as the caller, and are referenced) Tj T* 0 Tw .938797 Tw (by offset from the instruction following the call instruction, similar to ) Tj /F5 10 Tf (JA) Tj /F1 10 Tf (. The offset is encoded in the 'imm') Tj T* 0 Tw (field of the call instruction. An ) Tj /F5 10 Tf (EXIT) Tj /F1 10 Tf ( within the program-local function will return to the caller.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 161.4236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.4   Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 143.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For load and store instructions \() Tj /F5 10 Tf (LD) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (LDX) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (ST) Tj /F1 10 Tf (, and ) Tj /F5 10 Tf (STX) Tj /F1 10 Tf (\), the 8-bit 'opcode' field is divided as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 86.22362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (+-+-+-+-+-+-+-+-+) Tj T* (|mode |sz |class|) Tj T* (+-+-+-+-+-+-+-+-+) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 66.22362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (mode) Tj T* ET
Q
Q
 
endstream
endobj
135 0 obj
<<
/Length 9761
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 564.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 188 Tm  T* ET
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The mode modifier is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 156 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 200.4792 0 Td (Mode modifier) Tj T* -200.4792 0 Td ET
Q
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 150 461.2283 -42 re f*
.878431 .878431 .878431 rg
n 0 108 461.2283 -18 re f*
1 1 1 rg
n 0 90 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 461.2283 -18 re f*
1 1 1 rg
n 0 54 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 461.2283 -18 re f*
1 1 1 rg
n 0 18 461.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 12.55845 0 Td (mode) Tj T* -6.390001 0 Td (modifier) Tj T* -6.168449 0 Td ET
Q
Q
q
1 0 0 1 69.7869 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .706711 0 Td (va) Tj T* 1.115 0 Td (lu) Tj T* 1.665 0 Td (e) Tj T* -3.486711 0 Td ET
Q
Q
q
1 0 0 1 94.32032 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 55.37032 0 Td (description) Tj T* -55.37032 0 Td ET
Q
Q
q
1 0 0 1 270.961 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 69.62369 0 Td (reference) Tj T* -69.62369 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IMM) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 270.961 93 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ABS) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legacy BPF packet access \(absolute\)) Tj T* ET
Q
Q
q
1 0 0 1 270.961 75 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IND) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legacy BPF packet access \(indirect\)) Tj T* ET
Q
Q
q
1 0 0 1 270.961 57 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (MEM) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 270.961 39 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (MEMSX) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 270.961 21 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ATOMIC) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 270.961 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Atomic operations) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 108 m 461.2283 108 l S
n 0 90 m 461.2283 90 l S
n 0 72 m 461.2283 72 l S
n 0 54 m 461.2283 54 l S
n 0 36 m 461.2283 36 l S
n 0 18 m 461.2283 18 l S
n 63.7869 0 m 63.7869 150 l S
n 88.32032 0 m 88.32032 150 l S
n 264.961 0 m 264.961 150 l S
n 0 150 m 461.2283 150 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 150 l S
n 461.2283 0 m 461.2283 150 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 548.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (sz \(size\)) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 389.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 146 Tm  T* ET
q
1 0 0 1 20 144 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The size modifier is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 114 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 203.5342 0 Td (Size modifier) Tj T* -203.5342 0 Td ET
Q
Q
q
1 0 0 1 20 18 cm
q
1 1 1 rg
n 0 90 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 461.2283 -18 re f*
1 1 1 rg
n 0 54 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 461.2283 -18 re f*
1 1 1 rg
n 0 18 461.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 15.29856 0 Td (size) Tj T* -15.29856 0 Td ET
Q
Q
q
1 0 0 1 67.49711 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 19.6507 0 Td (value) Tj T* -19.6507 0 Td ET
Q
Q
q
1 0 0 1 144.3685 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 128.4799 0 Td (description) Tj T* -128.4799 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (W) Tj T* ET
Q
Q
q
1 0 0 1 67.49711 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 144.3685 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (word \(4 bytes\)) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (H) Tj T* ET
Q
Q
q
1 0 0 1 67.49711 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 144.3685 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (half word \(2 bytes\)) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (B) Tj T* ET
Q
Q
q
1 0 0 1 67.49711 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 144.3685 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (byte) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (DW) Tj T* ET
Q
Q
q
1 0 0 1 67.49711 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 144.3685 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (double word \(8 bytes\)) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 72 m 461.2283 72 l S
n 0 54 m 461.2283 54 l S
n 0 36 m 461.2283 36 l S
n 0 18 m 461.2283 18 l S
n 61.49711 0 m 61.49711 90 l S
n 138.3685 0 m 138.3685 90 l S
n 0 90 m 461.2283 90 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 90 l S
n 461.2283 0 m 461.2283 90 l S
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Instructions using ) Tj /F5 10 Tf (DW) Tj /F1 10 Tf ( belong to the base64 conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 373.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (class) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 358.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 331.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.1   Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 301.0236 cm
q
BT 1 0 0 1 0 14 Tm .895785 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (MEM) Tj /F1 10 Tf ( mode modifier is used to encode regular load and store instructions that transfer data between a) Tj T* 0 Tw (register and memory.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 283.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEM,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 249.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(size *\) \(dst + offset\) = src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 229.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEM,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (ST}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 196.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(size *\) \(dst + offset\) = imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 176.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEM,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (LDX}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 143.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = *\(unsigned size *\) \(src + offset\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 123.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Where ') Tj (<) Tj (size) Tj (>) Tj (' is one of: ) Tj /F5 10 Tf (B) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (H) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (W) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (DW) Tj /F1 10 Tf (, and 'unsigned size' is one of: u8, u16, u32, or u64.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 96.42362 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.2   Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 66.42362 cm
q
BT 1 0 0 1 0 14 Tm 2.030696 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (MEMSX) Tj /F1 10 Tf ( mode modifier is used to encode ) Tj 1 0 0 rg (:term:`sign-extension) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( load instructions that) Tj T* 0 Tw (transfer data between a register and memory.) Tj T* ET
Q
Q
 
endstream
endobj
136 0 obj
<<
/Length 9796
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 753.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({MEMSX,) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (,) Tj ( ) Tj (LDX}) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 719.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = *\(signed size *\) \(src + offset\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 699.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Where ') Tj (<) Tj (size) Tj (>) Tj (' is one of: ) Tj /F5 10 Tf (B) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (H) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (W) Tj /F1 10 Tf (, and 'signed size' is one of: s8, s16, or s32.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 672.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.3   Atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 642.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .652397 Tw (Atomic operations are operations that operate on memory and can not be interrupted or corrupted by other) Tj T* 0 Tw (access to the same memory region by other BPF programs or means outside of this specification.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 612.8236 cm
q
BT 1 0 0 1 0 14 Tm -0.033853 Tw 12 TL /F1 10 Tf 0 0 0 rg (All atomic operations supported by BPF are encoded as store operations that use the ) Tj /F5 10 Tf (ATOMIC) Tj /F1 10 Tf ( mode modifier) Tj T* 0 Tw (as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 606.8236 cm
Q
q
1 0 0 1 57.02362 606.8236 cm
Q
q
1 0 0 1 57.02362 594.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (W,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( for 32-bit operations, which are part of the "atomic32" conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 588.8236 cm
Q
q
1 0 0 1 57.02362 576.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (DW,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( for 64-bit operations, which are part of the "atomic64" conformance group.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 570.8236 cm
Q
q
1 0 0 1 57.02362 558.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8-bit and 16-bit wide atomic operations are not supported.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 558.8236 cm
Q
q
1 0 0 1 57.02362 528.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .738797 Tw (The 'imm' field is used to encode the actual atomic operation. Simple atomic operation use a subset of the) Tj T* 0 Tw (values defined to encode arithmetic operations in the 'imm' field to encode the atomic operation:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 522.8236 cm
Q
q
1 0 0 1 57.02362 498.8236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 189.5042 0 Td (Simple atomic operations) Tj T* -189.5042 0 Td ET
Q
Q
q
1 0 0 1 57.02362 402.8236 cm
q
1 1 1 rg
n 0 90 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 481.2283 -18 re f*
1 1 1 rg
n 0 54 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 481.2283 -18 re f*
1 1 1 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 63.92472 0 Td (imm) Tj T* -63.92472 0 Td ET
Q
Q
q
1 0 0 1 166.4094 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 31.34295 0 Td (value) Tj T* -31.34295 0 Td ET
Q
Q
q
1 0 0 1 266.6654 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 77.3315 0 Td (description) Tj T* -77.3315 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ADD) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x00) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic add) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (OR) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x40) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic or) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (AND) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x50) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic and) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (XOR) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xa0) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic xor) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 160.4094 0 m 160.4094 90 l S
n 260.6654 0 m 260.6654 90 l S
n 0 90 m 481.2283 90 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 90 l S
n 481.2283 0 m 481.2283 90 l S
Q
Q
Q
q
1 0 0 1 57.02362 402.8236 cm
Q
q
1 0 0 1 57.02362 384.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (W,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( with 'imm' = ADD means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 351.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(u32 *\)\(dst + offset\) += src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 331.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg ({ATOMIC,) Tj ( ) Tj (DW,) Tj ( ) Tj (STX}) Tj /F1 10 Tf ( with 'imm' = ADD means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 298.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(u64 *\)\(dst + offset\) += src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 278.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (In addition to the simple atomic operations, there also is a modifier and two complex atomic operations:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 272.4236 cm
Q
q
1 0 0 1 57.02362 248.4236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 185.3392 0 Td (Complex atomic operations) Tj T* -185.3392 0 Td ET
Q
Q
q
1 0 0 1 57.02362 170.4236 cm
q
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 32.734 0 Td (imm) Tj T* -32.734 0 Td ET
Q
Q
q
1 0 0 1 104.028 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 52.50809 0 Td (value) Tj T* -52.50809 0 Td ET
Q
Q
q
1 0 0 1 246.6142 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 87.35709 0 Td (description) Tj T* -87.35709 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (FETCH) Tj T* ET
Q
Q
q
1 0 0 1 104.028 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x01) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (modifier: return old value) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (XCHG) Tj T* ET
Q
Q
q
1 0 0 1 104.028 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xe0 | FETCH) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic exchange) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CMPXCHG) Tj T* ET
Q
Q
q
1 0 0 1 104.028 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xf0 | FETCH) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic compare and exchange) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 98.028 0 m 98.028 72 l S
n 240.6142 0 m 240.6142 72 l S
n 0 72 m 481.2283 72 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 72 l S
n 481.2283 0 m 481.2283 72 l S
Q
Q
Q
q
1 0 0 1 57.02362 170.4236 cm
Q
q
1 0 0 1 57.02362 128.4236 cm
q
BT 1 0 0 1 0 26 Tm 2.812556 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (FETCH) Tj /F1 10 Tf ( modifier is optional for simple atomic operations, and always set for the complex atomic) Tj T* 0 Tw -0.04535 Tw (operations. If the ) Tj /F5 10 Tf (FETCH) Tj /F1 10 Tf ( flag is set, then the operation also overwrites ) Tj /F5 10 Tf (src) Tj /F1 10 Tf ( with the value that was in memory) Tj T* 0 Tw (before it was modified.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 110.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (XCHG) Tj /F1 10 Tf ( operation atomically exchanges ) Tj /F5 10 Tf (src) Tj /F1 10 Tf ( with the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 68.42362 cm
q
BT 1 0 0 1 0 26 Tm -0.065103 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (CMPXCHG) Tj /F1 10 Tf ( operation atomically compares the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( with ) Tj /F5 10 Tf (R0) Tj /F1 10 Tf (. If they match,) Tj T* 0 Tw 2.651019 Tw (the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( is replaced with ) Tj /F5 10 Tf (src) Tj /F1 10 Tf (. In either case, the value that was at) Tj T* 0 Tw /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( before the operation is zero-extended and loaded back to ) Tj /F5 10 Tf (R0) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
 
endstream
endobj
137 0 obj
<<
/Length 10703
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.4   64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 720.0236 cm
q
BT 1 0 0 1 0 14 Tm .73631 Tw 12 TL /F1 10 Tf 0 0 0 rg (Instructions with the ) Tj /F5 10 Tf (IMM) Tj /F1 10 Tf ( 'mode' modifier use the wide instruction encoding defined in ) Tj 0 .4 .6 rg (Instruction encoding) Tj 0 0 0 rg (,) Tj T* 0 Tw (and use the 'src_reg' field of the basic instruction to hold an opcode subtype.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 690.0236 cm
q
BT 1 0 0 1 0 14 Tm .182844 Tw 12 TL /F1 10 Tf 0 0 0 rg (The following table defines a set of ) Tj /F5 10 Tf ({IMM,) Tj ( ) Tj (DW,) Tj ( ) Tj (LD}) Tj /F1 10 Tf ( instructions with opcode subtypes in the 'src_reg' field,) Tj T* 0 Tw (using new terms such as "map" defined further below:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 684.0236 cm
Q
q
1 0 0 1 57.02362 660.0236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 181.7242 0 Td (64-bit immediate instructions) Tj T* -181.7242 0 Td ET
Q
Q
q
1 0 0 1 57.02362 498.0236 cm
q
1 1 1 rg
n 0 156 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 126 481.2283 -18 re f*
1 1 1 rg
n 0 108 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -18 re f*
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.062592 0 Td (src_re) Tj T* 11.955 0 Td (g) Tj T* -14.01759 0 Td ET
Q
Q
q
1 0 0 1 52.14518 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 99.68947 0 Td (pseudocode) Tj T* -99.68947 0 Td ET
Q
Q
q
1 0 0 1 322.4241 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8.30693 0 Td (imm type) Tj T* -8.30693 0 Td ET
Q
Q
q
1 0 0 1 394.938 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 20.97518 0 Td (dst type) Tj T* -20.97518 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x0) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 111 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst = \(next_imm <) Tj (< 32\) | imm) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 394.938 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x1) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_by_fd\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map fd) Tj T* ET
Q
Q
q
1 0 0 1 394.938 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x2) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_val\(map_by_fd\(imm\)\) + next_imm) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map fd) Tj T* ET
Q
Q
q
1 0 0 1 394.938 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data address) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x3) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = var_addr\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (variable id) Tj T* ET
Q
Q
q
1 0 0 1 394.938 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data address) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x4) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = code_addr\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 394.938 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (code address) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x5) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_by_idx\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map index) Tj T* ET
Q
Q
q
1 0 0 1 394.938 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x6) Tj T* ET
Q
Q
q
1 0 0 1 52.14518 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_val\(map_by_idx\(imm\)\) + next_imm) Tj T* ET
Q
Q
q
1 0 0 1 322.4241 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map index) Tj T* ET
Q
Q
q
1 0 0 1 394.938 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data address) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 126 m 481.2283 126 l S
n 0 108 m 481.2283 108 l S
n 0 90 m 481.2283 90 l S
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 46.14518 0 m 46.14518 156 l S
n 316.4241 0 m 316.4241 156 l S
n 388.938 0 m 388.938 156 l S
n 0 156 m 481.2283 156 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 156 l S
n 481.2283 0 m 481.2283 156 l S
Q
Q
Q
q
1 0 0 1 57.02362 498.0236 cm
Q
q
1 0 0 1 57.02362 480.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 474.0236 cm
Q
q
1 0 0 1 57.02362 474.0236 cm
Q
q
1 0 0 1 57.02362 462.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (map_by_fd\(imm\) means to convert a 32-bit file descriptor into an address of a map \(see ) Tj 0 .4 .6 rg (Maps) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 456.0236 cm
Q
q
1 0 0 1 57.02362 444.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map_by_idx\(imm\) means to convert a 32-bit index into an address of a map) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 438.0236 cm
Q
q
1 0 0 1 57.02362 426.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map_val\(map\) gets the address of the first value in a given map) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 420.0236 cm
Q
q
1 0 0 1 57.02362 408.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (var_addr\(imm\) gets the address of a platform variable \(see ) Tj 0 .4 .6 rg (Platform Variables) Tj 0 0 0 rg (\) with a given id) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 402.0236 cm
Q
q
1 0 0 1 57.02362 378.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.054556 Tw (code_addr\(imm\) gets the address of the instruction at a specified relative offset in number of \(64-bit\)) Tj T* 0 Tw (instructions) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 372.0236 cm
Q
q
1 0 0 1 57.02362 360.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the 'imm type' can be used by disassemblers for display) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 354.0236 cm
Q
q
1 0 0 1 57.02362 342.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the 'dst type' can be used for verification and JIT compilation purposes) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 342.0236 cm
Q
q
1 0 0 1 57.02362 318.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.4.4.1   Maps) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 276.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .239897 Tw (Maps are shared memory regions accessible by BPF programs on some platforms. A map can have various) Tj T* 0 Tw .059314 Tw (semantics as defined in a separate document, and may or may not have a single contiguous memory region,) Tj T* 0 Tw (but the 'map_val\(map\)' is currently only defined for maps that do have a single contiguous memory region.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 222.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .326373 Tw (Each map can have a file descriptor \(fd\) if supported by the platform, where 'map_by_fd\(imm\)' means to get) Tj T* 0 Tw 1.603071 Tw (the map with the specified file descriptor. Each BPF program can also be defined to use a set of maps) Tj T* 0 Tw .195197 Tw (associated with the program at load time, and 'map_by_idx\(imm\)' means to get the map with the given index) Tj T* 0 Tw (in the set associated with the BPF program containing the instruction.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 198.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.4.4.2   Platform Variables) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 156.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .66189 Tw (Platform variables are memory regions, identified by integer ids, exposed by the runtime and accessible by) Tj T* 0 Tw .704556 Tw (BPF programs on some platforms. The 'var_addr\(imm\)' operation means to get the address of the memory) Tj T* 0 Tw (region identified by the given id.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 129.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.5   Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 63.02362 cm
q
BT 1 0 0 1 0 50 Tm .55189 Tw 12 TL /F1 10 Tf 0 0 0 rg (BPF previously introduced special instructions for access to packet data that were carried over from classic) Tj T* 0 Tw .208016 Tw (BPF. These instructions used an instruction class of ) Tj /F5 10 Tf (LD) Tj /F1 10 Tf (, a size modifier of ) Tj /F5 10 Tf (W) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (H) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (B) Tj /F1 10 Tf (, and a mode modifier of) Tj T* 0 Tw .112417 Tw /F5 10 Tf (ABS) Tj /F1 10 Tf ( or ) Tj /F5 10 Tf (IND) Tj /F1 10 Tf (. The 'dst_reg' and 'offset' fields were set to zero, and 'src_reg' was set to zero for ) Tj /F5 10 Tf (ABS) Tj /F1 10 Tf (. However,) Tj T* 0 Tw 1.342739 Tw (these instructions are deprecated and SHOULD no longer be used. All legacy packet access instructions) Tj T* 0 Tw (belong to the "packet" conformance group.) Tj T* ET
Q
Q
 
endstream
endobj
138 0 obj
<<
/Nums [ 0 139 0 R 1 140 0 R 2 141 0 R 3 142 0 R 4 143 0 R 
  5 144 0 R 6 145 0 R 7 146 0 R 8 147 0 R 9 148 0 R 
  10 149 0 R 11 150 0 R 12 151 0 R ]
>>
endobj
139 0 obj
<<
/S /D /St 1
>>
endobj
140 0 obj
<<
/S /D /St 2
>>
endobj
141 0 obj
<<
/S /D /St 3
>>
endobj
142 0 obj
<<
/S /D /St 4
>>
endobj
143 0 obj
<<
/S /D /St 5
>>
endobj
144 0 obj
<<
/S /D /St 6
>>
endobj
145 0 obj
<<
/S /D /St 7
>>
endobj
146 0 obj
<<
/S /D /St 8
>>
endobj
147 0 obj
<<
/S /D /St 9
>>
endobj
148 0 obj
<<
/S /D /St 10
>>
endobj
149 0 obj
<<
/S /D /St 11
>>
endobj
150 0 obj
<<
/S /D /St 12
>>
endobj
151 0 obj
<<
/S /D /St 13
>>
endobj
xref
0 152
0000000000 65535 f 
0000000073 00000 n 
0000000146 00000 n 
0000000253 00000 n 
0000000362 00000 n 
0000000474 00000 n 
0000000642 00000 n 
0000000808 00000 n 
0000000976 00000 n 
0000001142 00000 n 
0000001310 00000 n 
0000001477 00000 n 
0000001646 00000 n 
0000001813 00000 n 
0000001982 00000 n 
0000002149 00000 n 
0000002318 00000 n 
0000002485 00000 n 
0000002654 00000 n 
0000002821 00000 n 
0000002990 00000 n 
0000003157 00000 n 
0000003326 00000 n 
0000003493 00000 n 
0000003662 00000 n 
0000003829 00000 n 
0000003998 00000 n 
0000004165 00000 n 
0000004334 00000 n 
0000004501 00000 n 
0000004670 00000 n 
0000004837 00000 n 
0000005006 00000 n 
0000005173 00000 n 
0000005342 00000 n 
0000005507 00000 n 
0000005676 00000 n 
0000005841 00000 n 
0000006010 00000 n 
0000006175 00000 n 
0000006344 00000 n 
0000006509 00000 n 
0000006678 00000 n 
0000006843 00000 n 
0000007012 00000 n 
0000007177 00000 n 
0000007346 00000 n 
0000007511 00000 n 
0000007680 00000 n 
0000007845 00000 n 
0000008014 00000 n 
0000008179 00000 n 
0000008348 00000 n 
0000008513 00000 n 
0000008704 00000 n 
0000008896 00000 n 
0000009473 00000 n 
0000009589 00000 n 
0000009695 00000 n 
0000009889 00000 n 
0000010116 00000 n 
0000010285 00000 n 
0000010512 00000 n 
0000010681 00000 n 
0000010849 00000 n 
0000011083 00000 n 
0000011252 00000 n 
0000011421 00000 n 
0000011590 00000 n 
0000011759 00000 n 
0000011928 00000 n 
0000012097 00000 n 
0000012266 00000 n 
0000012435 00000 n 
0000012711 00000 n 
0000012880 00000 n 
0000013107 00000 n 
0000013274 00000 n 
0000013501 00000 n 
0000013709 00000 n 
0000013876 00000 n 
0000014043 00000 n 
0000014210 00000 n 
0000014451 00000 n 
0000014659 00000 n 
0000014828 00000 n 
0000014997 00000 n 
0000015166 00000 n 
0000015335 00000 n 
0000015504 00000 n 
0000015673 00000 n 
0000015842 00000 n 
0000016111 00000 n 
0000016319 00000 n 
0000016487 00000 n 
0000016656 00000 n 
0000016825 00000 n 
0000017066 00000 n 
0000017174 00000 n 
0000017432 00000 n 
0000017509 00000 n 
0000017867 00000 n 
0000018185 00000 n 
0000018372 00000 n 
0000018593 00000 n 
0000018824 00000 n 
0000019076 00000 n 
0000019383 00000 n 
0000019675 00000 n 
0000019976 00000 n 
0000020233 00000 n 
0000020600 00000 n 
0000020877 00000 n 
0000021163 00000 n 
0000021451 00000 n 
0000021703 00000 n 
0000021990 00000 n 
0000022318 00000 n 
0000022645 00000 n 
0000022971 00000 n 
0000023232 00000 n 
0000023594 00000 n 
0000023786 00000 n 
0000024048 00000 n 
0000024395 00000 n 
0000024545 00000 n 
0000032879 00000 n 
0000041541 00000 n 
0000049091 00000 n 
0000054613 00000 n 
0000063285 00000 n 
0000073038 00000 n 
0000081506 00000 n 
0000089077 00000 n 
0000100211 00000 n 
0000107095 00000 n 
0000116909 00000 n 
0000126758 00000 n 
0000137515 00000 n 
0000137687 00000 n 
0000137722 00000 n 
0000137757 00000 n 
0000137792 00000 n 
0000137827 00000 n 
0000137862 00000 n 
0000137897 00000 n 
0000137932 00000 n 
0000137967 00000 n 
0000138002 00000 n 
0000138038 00000 n 
0000138074 00000 n 
0000138110 00000 n 
trailer
<<
/ID 
[<7e93ace4ea3f2869c9e517f995dab2b6><7e93ace4ea3f2869c9e517f995dab2b6>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 98 0 R
/Root 97 0 R
/Size 152
>>
startxref
138146
%%EOF
