%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 49 0 R /F5 51 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Times-Roman /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 57.02362 369.6236 0 ] /Rect [ 57.02362 724.8236 224.2441 735.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 57.02362 369.6236 0 ] /Rect [ 533.526 725.4611 538.252 735.6611 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 57.02362 318.6236 0 ] /Rect [ 77.02362 708.6236 200.8091 718.8236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 57.02362 318.6236 0 ] /Rect [ 533.526 709.2611 538.252 719.4611 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 57.02362 246.6236 0 ] /Rect [ 97.02362 692.4236 146.1621 702.6236 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 57.02362 246.6236 0 ] /Rect [ 533.526 693.0611 538.252 703.2611 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 52 0 R /XYZ 57.02362 615.0236 0 ] /Rect [ 97.02362 676.2236 159.8641 686.4236 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 52 0 R /XYZ 57.02362 615.0236 0 ] /Rect [ 533.526 676.8611 538.252 687.0611 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 52 0 R /XYZ 57.02362 315.8929 0 ] /Rect [ 97.02362 660.0236 162.6946 670.2236 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 52 0 R /XYZ 57.02362 315.8929 0 ] /Rect [ 533.526 660.6611 538.252 670.8611 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 52 0 R /XYZ 57.02362 148.6929 0 ] /Rect [ 97.02362 643.8236 202.3811 654.0236 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 52 0 R /XYZ 57.02362 148.6929 0 ] /Rect [ 533.526 644.4611 538.252 654.6611 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 669.0236 0 ] /Rect [ 77.02362 627.6236 171.9941 637.8236 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 669.0236 0 ] /Rect [ 533.526 628.2611 538.252 638.4611 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 623.8236 0 ] /Rect [ 97.02362 611.4236 192.9291 621.6236 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 623.8236 0 ] /Rect [ 533.526 612.0611 538.252 622.2611 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 302.8236 0 ] /Rect [ 77.02362 595.2236 216.3811 605.4236 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 302.8236 0 ] /Rect [ 533.526 595.8611 538.252 606.0611 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 67 0 R /XYZ 57.02362 738.0236 0 ] /Rect [ 97.02362 579.0236 206.1466 589.2236 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 67 0 R /XYZ 57.02362 738.0236 0 ] /Rect [ 533.526 579.6611 538.252 589.8611 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 68 0 R /XYZ 57.02362 242.2236 0 ] /Rect [ 97.02362 562.8236 207.5746 573.0236 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 68 0 R /XYZ 57.02362 242.2236 0 ] /Rect [ 533.526 563.4611 538.252 573.6611 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 57.02362 397.4236 0 ] /Rect [ 97.02362 546.6236 189.1466 556.8236 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 57.02362 397.4236 0 ] /Rect [ 533.526 547.2611 538.252 557.4611 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 705.0236 0 ] /Rect [ 117.0236 530.4236 211.5181 540.6236 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 705.0236 0 ] /Rect [ 533.526 531.0611 538.252 541.2611 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 591.0236 0 ] /Rect [ 117.0236 514.2236 239.3811 524.4236 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 591.0236 0 ] /Rect [ 533.526 514.8611 538.252 525.0611 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 525.0236 0 ] /Rect [ 77.02362 498.0236 197.9786 508.2236 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 525.0236 0 ] /Rect [ 533.526 498.6611 538.252 508.8611 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 97.02362 481.8236 251.0521 492.0236 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 765.0236 0 ] /Rect [ 528.8 482.4611 538.252 492.6611 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 530.4236 0 ] /Rect [ 97.02362 465.6236 239.7131 475.8236 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 530.4236 0 ] /Rect [ 528.8 466.2611 538.252 476.4611 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 402.2236 0 ] /Rect [ 97.02362 449.4236 191.0421 459.6236 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 402.2236 0 ] /Rect [ 528.8 450.0611 538.252 460.2611 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 85 0 R /XYZ 57.02362 527.8236 0 ] /Rect [ 97.02362 433.2236 231.1876 443.4236 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 85 0 R /XYZ 57.02362 527.8236 0 ] /Rect [ 528.8 433.8611 538.252 444.0611 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 639.0236 0 ] /Rect [ 117.0236 417.0236 170.8881 427.2236 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 639.0236 0 ] /Rect [ 528.8 417.6611 538.252 427.8611 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 519.0236 0 ] /Rect [ 117.0236 400.8236 219.5421 411.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 519.0236 0 ] /Rect [ 528.8 401.4611 538.252 411.6611 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 453.0236 0 ] /Rect [ 97.02362 384.6236 271.8261 394.8236 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 453.0236 0 ] /Rect [ 528.8 385.2611 538.252 395.4611 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
50 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 
  15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 
  25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 
  35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 
  45 0 R 46 0 R 47 0 R 48 0 R ] /Contents 114 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
51 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
52 0 obj
<<
/Contents 115 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
53 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 85 0 R /XYZ 57.02362 530.3236 0 ] /Rect [ 384.9136 424.8236 538.252 436.8236 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 85 0 R /XYZ 57.02362 530.3236 0 ] /Rect [ 158.1736 183.6236 288.7458 195.6236 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/Annots [ 53 0 R 54 0 R ] /Contents 116 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
56 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 528.0236 0 ] /Rect [ 333.7146 540.5736 453.7746 552.5736 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 528.0236 0 ] /Rect [ 333.7146 510.5736 453.7746 522.5736 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 528.0236 0 ] /Rect [ 333.7146 480.5736 453.7746 492.5736 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 528.0236 0 ] /Rect [ 333.7146 450.5736 453.7746 462.5736 ] /Subtype /Link /Type /Annot
>>
endobj
60 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 305.8236 0 ] /Rect [ 333.7146 420.5736 475.4246 432.5736 ] /Subtype /Link /Type /Annot
>>
endobj
61 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 305.8236 0 ] /Rect [ 333.7146 390.5736 475.4246 402.5736 ] /Subtype /Link /Type /Annot
>>
endobj
62 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 305.8236 0 ] /Rect [ 333.7146 360.5736 475.4246 372.5736 ] /Subtype /Link /Type /Annot
>>
endobj
63 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 305.8236 0 ] /Rect [ 333.7146 330.5736 475.4246 342.5736 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/Annots [ 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R 63 0 R ] /Contents 117 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
65 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 64 0 R /XYZ 57.02362 626.3236 0 ] /Rect [ 189.8436 750.0236 272.0936 762.0236 ] /Subtype /Link /Type /Annot
>>
endobj
66 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 68 0 R /XYZ 57.02362 244.7236 0 ] /Rect [ 310.4451 150.0236 409.9251 162.0236 ] /Subtype /Link /Type /Annot
>>
endobj
67 0 obj
<<
/Annots [ 65 0 R 66 0 R ] /Contents 118 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
68 0 obj
<<
/Contents 119 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
69 0 obj
<<
/Contents 120 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
70 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 707.0236 0 ] /Rect [ 424.2488 582.0236 496.4988 594.0236 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 593.0236 0 ] /Rect [ 424.2488 540.0236 529.2788 552.0236 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 57.02362 707.0236 0 ] /Rect [ 424.2488 498.0236 496.4988 510.0236 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/Annots [ 70 0 R 71 0 R 72 0 R ] /Contents 121 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
74 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 85 0 R /XYZ 57.02362 530.3236 0 ] /Rect [ 347.9846 348.7736 475.2446 360.7736 ] /Subtype /Link /Type /Annot
>>
endobj
75 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 455.5236 0 ] /Rect [ 347.9846 318.7736 523.0546 330.7736 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 455.5236 0 ] /Rect [ 347.9846 288.7736 523.0546 300.7736 ] /Subtype /Link /Type /Annot
>>
endobj
77 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 767.5236 0 ] /Rect [ 347.9846 258.7736 498.6146 270.7736 ] /Subtype /Link /Type /Annot
>>
endobj
78 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 532.9236 0 ] /Rect [ 347.9846 228.7736 485.2746 240.7736 ] /Subtype /Link /Type /Annot
>>
endobj
79 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 57.02362 404.7236 0 ] /Rect [ 347.9846 198.7736 428.0146 210.7736 ] /Subtype /Link /Type /Annot
>>
endobj
80 0 obj
<<
/Annots [ 74 0 R 75 0 R 76 0 R 77 0 R 78 0 R 79 0 R ] /Contents 122 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
81 0 obj
<<
/Contents 123 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
82 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 672.0236 0 ] /Rect [ 459.6736 494.8236 535.7559 506.8236 ] /Subtype /Link /Type /Annot
>>
endobj
83 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 55 0 R /XYZ 57.02362 672.0236 0 ] /Rect [ 57.02362 482.8236 97.60362 494.8236 ] /Subtype /Link /Type /Annot
>>
endobj
84 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 641.0236 0 ] /Rect [ 470.7336 71.82362 495.1836 83.82362 ] /Subtype /Link /Type /Annot
>>
endobj
85 0 obj
<<
/Annots [ 82 0 R 83 0 R 84 0 R ] /Contents 124 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
86 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 57.02362 521.0236 0 ] /Rect [ 342.8936 714.0236 424.5836 726.0236 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/Annots [ 86 0 R ] /Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 113 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
88 0 obj
<<
/Outlines 90 0 R /PageLabels 126 0 R /PageMode /UseNone /Pages 113 0 R /Type /Catalog
>>
endobj
89 0 obj
<<
/Author () /CreationDate (D:20240126225924+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20240126225924+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
90 0 obj
<<
/Count 29 /First 91 0 R /Last 91 0 R /Type /Outlines
>>
endobj
91 0 obj
<<
/Count 21 /Dest [ 50 0 R /XYZ 57.02362 369.6236 0 ] /First 92 0 R /Last 105 0 R /Parent 90 0 R /Title (\376\377\0001\000\240\000\240\000\240\000B\000P\000F\000 \000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000S\000e\000t\000 \000S\000p\000e\000c\000i\000f\000i\000c\000a\000t\000i\000o\000n\000,\000 \000v\0001\000.\0000)
>>
endobj
92 0 obj
<<
/Count 4 /Dest [ 50 0 R /XYZ 57.02362 318.6236 0 ] /First 93 0 R /Last 96 0 R /Next 97 0 R /Parent 91 0 R 
  /Title (\376\377\0001\000.\0001\000\240\000\240\000\240\000D\000o\000c\000u\000m\000e\000n\000t\000a\000t\000i\000o\000n\000 \000c\000o\000n\000v\000e\000n\000t\000i\000o\000n\000s)
>>
endobj
93 0 obj
<<
/Dest [ 50 0 R /XYZ 57.02362 246.6236 0 ] /Next 94 0 R /Parent 92 0 R /Title (\376\377\0001\000.\0001\000.\0001\000\240\000\240\000\240\000T\000y\000p\000e\000s)
>>
endobj
94 0 obj
<<
/Dest [ 52 0 R /XYZ 57.02362 615.0236 0 ] /Next 95 0 R /Parent 92 0 R /Prev 93 0 R /Title (\376\377\0001\000.\0001\000.\0002\000\240\000\240\000\240\000F\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
95 0 obj
<<
/Dest [ 52 0 R /XYZ 57.02362 315.8929 0 ] /Next 96 0 R /Parent 92 0 R /Prev 94 0 R /Title (\376\377\0001\000.\0001\000.\0003\000\240\000\240\000\240\000D\000e\000f\000i\000n\000i\000t\000i\000o\000n\000s)
>>
endobj
96 0 obj
<<
/Dest [ 52 0 R /XYZ 57.02362 148.6929 0 ] /Parent 92 0 R /Prev 95 0 R /Title (\376\377\0001\000.\0001\000.\0004\000\240\000\240\000\240\000C\000o\000n\000f\000o\000r\000m\000a\000n\000c\000e\000 \000g\000r\000o\000u\000p\000s)
>>
endobj
97 0 obj
<<
/Count 1 /Dest [ 55 0 R /XYZ 57.02362 669.0236 0 ] /First 98 0 R /Last 98 0 R /Next 99 0 R /Parent 91 0 R 
  /Prev 92 0 R /Title (\376\377\0001\000.\0002\000\240\000\240\000\240\000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000e\000n\000c\000o\000d\000i\000n\000g)
>>
endobj
98 0 obj
<<
/Dest [ 64 0 R /XYZ 57.02362 623.8236 0 ] /Parent 97 0 R /Title (\376\377\0001\000.\0002\000.\0001\000\240\000\240\000\240\000I\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000 \000c\000l\000a\000s\000s\000e\000s)
>>
endobj
99 0 obj
<<
/Count 5 /Dest [ 64 0 R /XYZ 57.02362 302.8236 0 ] /First 100 0 R /Last 102 0 R /Next 105 0 R /Parent 91 0 R 
  /Prev 97 0 R /Title (\376\377\0001\000.\0003\000\240\000\240\000\240\000A\000r\000i\000t\000h\000m\000e\000t\000i\000c\000 \000a\000n\000d\000 \000j\000u\000m\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
100 0 obj
<<
/Dest [ 67 0 R /XYZ 57.02362 738.0236 0 ] /Next 101 0 R /Parent 99 0 R /Title (\376\377\0001\000.\0003\000.\0001\000\240\000\240\000\240\000A\000r\000i\000t\000h\000m\000e\000t\000i\000c\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
101 0 obj
<<
/Dest [ 68 0 R /XYZ 57.02362 242.2236 0 ] /Next 102 0 R /Parent 99 0 R /Prev 100 0 R /Title (\376\377\0001\000.\0003\000.\0002\000\240\000\240\000\240\000B\000y\000t\000e\000 \000s\000w\000a\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
102 0 obj
<<
/Count 2 /Dest [ 69 0 R /XYZ 57.02362 397.4236 0 ] /First 103 0 R /Last 104 0 R /Parent 99 0 R /Prev 101 0 R 
  /Title (\376\377\0001\000.\0003\000.\0003\000\240\000\240\000\240\000J\000u\000m\000p\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
103 0 obj
<<
/Dest [ 80 0 R /XYZ 57.02362 705.0236 0 ] /Next 104 0 R /Parent 102 0 R /Title (\376\377\0001\000.\0003\000.\0003\000.\0001\000\240\000\240\000\240\000H\000e\000l\000p\000e\000r\000 \000f\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
104 0 obj
<<
/Dest [ 80 0 R /XYZ 57.02362 591.0236 0 ] /Parent 102 0 R /Prev 103 0 R /Title (\376\377\0001\000.\0003\000.\0003\000.\0002\000\240\000\240\000\240\000P\000r\000o\000g\000r\000a\000m\000-\000l\000o\000c\000a\000l\000 \000f\000u\000n\000c\000t\000i\000o\000n\000s)
>>
endobj
105 0 obj
<<
/Count 7 /Dest [ 80 0 R /XYZ 57.02362 525.0236 0 ] /First 106 0 R /Last 112 0 R /Parent 91 0 R /Prev 99 0 R 
  /Title (\376\377\0001\000.\0004\000\240\000\240\000\240\000L\000o\000a\000d\000 \000a\000n\000d\000 \000s\000t\000o\000r\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
106 0 obj
<<
/Dest [ 81 0 R /XYZ 57.02362 765.0236 0 ] /Next 107 0 R /Parent 105 0 R /Title (\376\377\0001\000.\0004\000.\0001\000\240\000\240\000\240\000R\000e\000g\000u\000l\000a\000r\000 \000l\000o\000a\000d\000 \000a\000n\000d\000 \000s\000t\000o\000r\000e\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
107 0 obj
<<
/Dest [ 81 0 R /XYZ 57.02362 530.4236 0 ] /Next 108 0 R /Parent 105 0 R /Prev 106 0 R /Title (\376\377\0001\000.\0004\000.\0002\000\240\000\240\000\240\000S\000i\000g\000n\000-\000e\000x\000t\000e\000n\000s\000i\000o\000n\000 \000l\000o\000a\000d\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
108 0 obj
<<
/Dest [ 81 0 R /XYZ 57.02362 402.2236 0 ] /Next 109 0 R /Parent 105 0 R /Prev 107 0 R /Title (\376\377\0001\000.\0004\000.\0003\000\240\000\240\000\240\000A\000t\000o\000m\000i\000c\000 \000o\000p\000e\000r\000a\000t\000i\000o\000n\000s)
>>
endobj
109 0 obj
<<
/Count 2 /Dest [ 85 0 R /XYZ 57.02362 527.8236 0 ] /First 110 0 R /Last 111 0 R /Next 112 0 R /Parent 105 0 R 
  /Prev 108 0 R /Title (\376\377\0001\000.\0004\000.\0004\000\240\000\240\000\240\0006\0004\000-\000b\000i\000t\000 \000i\000m\000m\000e\000d\000i\000a\000t\000e\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
110 0 obj
<<
/Dest [ 87 0 R /XYZ 57.02362 639.0236 0 ] /Next 111 0 R /Parent 109 0 R /Title (\376\377\0001\000.\0004\000.\0004\000.\0001\000\240\000\240\000\240\000M\000a\000p\000s)
>>
endobj
111 0 obj
<<
/Dest [ 87 0 R /XYZ 57.02362 519.0236 0 ] /Parent 109 0 R /Prev 110 0 R /Title (\376\377\0001\000.\0004\000.\0004\000.\0002\000\240\000\240\000\240\000P\000l\000a\000t\000f\000o\000r\000m\000 \000V\000a\000r\000i\000a\000b\000l\000e\000s)
>>
endobj
112 0 obj
<<
/Dest [ 87 0 R /XYZ 57.02362 453.0236 0 ] /Parent 105 0 R /Prev 109 0 R /Title (\376\377\0001\000.\0004\000.\0005\000\240\000\240\000\240\000L\000e\000g\000a\000c\000y\000 \000B\000P\000F\000 \000P\000a\000c\000k\000e\000t\000 \000a\000c\000c\000e\000s\000s\000 \000i\000n\000s\000t\000r\000u\000c\000t\000i\000o\000n\000s)
>>
endobj
113 0 obj
<<
/Count 12 /Kids [ 50 0 R 52 0 R 55 0 R 64 0 R 67 0 R 68 0 R 69 0 R 73 0 R 80 0 R 81 0 R 
  85 0 R 87 0 R ] /Type /Pages
>>
endobj
114 0 obj
<<
/Length 8336
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 381.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 343.2 cm
q
BT 1 0 0 1 0 1.7 Tm 10.2 TL /F3 8.5 Tf 0 .4 .6 rg (1   BPF Instruction Set Specification, v1.0) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 343.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F3 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1   Documentation conventions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 327 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 310.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.1   Types) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 310.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (1) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 294.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.2   Functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 294.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 278.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.3   Definitions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 278.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 262.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.1.4   Conformance groups) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 262.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (2) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 246 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2   Instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 246 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (3) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 229.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.2.1   Instruction classes) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 229.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (4) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 213.6 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3   Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 213.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (4) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 197.4 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.1   Arithmetic instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 197.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (5) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 181.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.2   Byte swap instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 181.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (6) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3   Jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (7) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 148.8 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3.1   Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 148.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 132.6 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.3.3.2   Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 132.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 116.4 cm
q
BT 1 0 0 1 20 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4   Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 116.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 67.274 0 Td (9) Tj T* -67.274 0 Td ET
Q
Q
q
1 0 0 1 0 100.2 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.1   Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 100.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 84 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.2   Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 84 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 67.8 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.3   Atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 67.8 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (10) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 51.6 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4   64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 51.6 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (11) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 35.4 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4.1   Maps) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 35.4 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 19.2 cm
q
BT 1 0 0 1 60 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.4.2   Platform Variables) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 19.2 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 40 1.7 Tm 10.2 TL /F1 8.5 Tf 0 .4 .6 rg (1.4.5   Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 409.2283 3 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 1.7 Tm /F1 8.5 Tf 10.2 TL 62.548 0 Td (12) Tj T* -62.548 0 Td ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 348.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf .133333 .133333 .133333 rg (1   BPF Instruction Set Specification, v1.0) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 330.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This document specifies version 1.0 of the BPF instruction set.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 300.6236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.1   Documentation conventions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 258.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .288726 Tw (For brevity and consistency, this document refers to families of types using a shorthand syntax and refers to) Tj T* 0 Tw 1.276796 Tw (several expository, mnemonic functions when describing the semantics of instructions. The range of valid) Tj T* 0 Tw (values for those types and the semantics of those functions are defined in the following subsections.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 231.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.1   Types) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 201.6236 cm
q
BT 1 0 0 1 0 14 Tm .752686 Tw 12 TL /F1 10 Tf 0 0 0 rg (This document refers to integer types with the notation ) Tj /F4 10 Tf (SN) Tj /F1 10 Tf ( to specify a type's signedness \() Tj /F4 10 Tf (S) Tj /F1 10 Tf (\) and bit width) Tj T* 0 Tw (\() Tj /F4 10 Tf (N) Tj /F1 10 Tf (\), respectively.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 195.6236 cm
Q
q
1 0 0 1 57.02362 171.6236 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 175.6192 0 Td (Meaning of signedness notation.) Tj T* -175.6192 0 Td ET
Q
Q
q
1 0 0 1 57.02362 111.6236 cm
q
1 1 1 rg
n 0 54 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 481.2283 -18 re f*
1 1 1 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL 64.70013 0 Td (S) Tj T* -64.70013 0 Td ET
Q
Q
q
1 0 0 1 154.0703 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 140.299 0 Td (Meaning) Tj T* -140.299 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (u) Tj T* ET
Q
Q
q
1 0 0 1 154.0703 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (s) Tj T* ET
Q
Q
q
1 0 0 1 154.0703 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 148.0703 0 m 148.0703 54 l S
n 0 54 m 481.2283 54 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 54 l S
n 481.2283 0 m 481.2283 54 l S
Q
Q
Q
q
1 0 0 1 57.02362 111.6236 cm
Q
q
1 0 0 1 57.02362 105.6236 cm
Q
q
1 0 0 1 57.02362 81.62362 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 178.9492 0 Td (Meaning of bit-width notation.) Tj T* -178.9492 0 Td ET
Q
Q
 
endstream
endobj
115 0 obj
<<
/Length 8426
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 657.0236 cm
q
1 1 1 rg
n 0 108 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -18 re f*
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL 76.32363 0 Td (N) Tj T* -76.32363 0 Td ET
Q
Q
q
1 0 0 1 177.8673 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 127.5705 0 Td (Bit width) Tj T* -127.5705 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (32) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (64) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64 bits) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (128) Tj T* ET
Q
Q
q
1 0 0 1 177.8673 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (128 bits) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 90 m 481.2283 90 l S
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 171.8673 0 m 171.8673 108 l S
n 0 108 m 481.2283 108 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 108 l S
n 481.2283 0 m 481.2283 108 l S
Q
Q
Q
q
1 0 0 1 57.02362 657.0236 cm
Q
q
1 0 0 1 57.02362 627.0236 cm
q
BT 1 0 0 1 0 14 Tm .105917 Tw 12 TL /F1 10 Tf 0 0 0 rg (For example, ) Tj /F4 10 Tf (u32) Tj /F1 10 Tf ( is a type whose valid values are all the 32-bit unsigned numbers and ) Tj /F4 10 Tf (s16) Tj /F1 10 Tf ( is a types whose) Tj T* 0 Tw (valid values are all the 16-bit signed numbers.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 600.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.2   Functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 588.0236 cm
Q
q
1 0 0 1 57.02362 588.0236 cm
Q
q
1 0 0 1 57.02362 564.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .174168 Tw 12 TL /F4 10 Tf 0 0 0 rg (htobe16) Tj /F1 10 Tf (: Takes an unsigned 16-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 16-bit number in big-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 558.0236 cm
Q
q
1 0 0 1 57.02362 534.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .174168 Tw 12 TL /F4 10 Tf 0 0 0 rg (htobe32) Tj /F1 10 Tf (: Takes an unsigned 32-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 32-bit number in big-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 528.0236 cm
Q
q
1 0 0 1 57.02362 504.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .174168 Tw 12 TL /F4 10 Tf 0 0 0 rg (htobe64) Tj /F1 10 Tf (: Takes an unsigned 64-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 64-bit number in big-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 498.0236 cm
Q
q
1 0 0 1 57.02362 474.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .412739 Tw 12 TL /F4 10 Tf 0 0 0 rg (htole16) Tj /F1 10 Tf (: Takes an unsigned 16-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 16-bit number in little-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 468.0236 cm
Q
q
1 0 0 1 57.02362 444.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .412739 Tw 12 TL /F4 10 Tf 0 0 0 rg (htole32) Tj /F1 10 Tf (: Takes an unsigned 32-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 32-bit number in little-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 438.0236 cm
Q
q
1 0 0 1 57.02362 414.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .412739 Tw 12 TL /F4 10 Tf 0 0 0 rg (htole64) Tj /F1 10 Tf (: Takes an unsigned 64-bit number in host-endian format and returns the equivalent number as) Tj T* 0 Tw (an unsigned 64-bit number in little-endian format.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 411.8929 cm
Q
q
1 0 0 1 57.02362 387.8929 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.79631 Tw 12 TL /F4 10 Tf 0 0 0 rg (bswap16) Tj /F1 10 Tf (: Takes an unsigned 16-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 381.8929 cm
Q
q
1 0 0 1 57.02362 357.8929 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.79631 Tw 12 TL /F4 10 Tf 0 0 0 rg (bswap32) Tj /F1 10 Tf (: Takes an unsigned 32-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 351.8929 cm
Q
q
1 0 0 1 57.02362 327.8929 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.79631 Tw 12 TL /F4 10 Tf 0 0 0 rg (bswap64) Tj /F1 10 Tf (: Takes an unsigned 64-bit number in either big- or little-endian format and returns the) Tj T* 0 Tw (equivalent number with the same bit width but opposite endianness.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 327.8929 cm
Q
q
1 0 0 1 57.02362 300.8929 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.3   Definitions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 282.8929 cm
Q
q
1 0 0 1 57.02362 166.6929 cm
q
1 .972549 .862745 rg
n 0 116.2 481.2283 -116.2 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 90.2 Tm  T* ET
q
1 0 0 1 16 85.2 cm
q
.133333 .133333 .133333 rg
BT 1 0 0 1 0 2.5 Tm /F2 12.5 Tf 15 TL (Example) Tj T* ET
Q
Q
q
1 0 0 1 16 61.2 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sign extend an 8-bit number ) Tj /F5 10 Tf (A) Tj /F1 10 Tf ( to a 16-bit number ) Tj /F5 10 Tf (B) Tj /F1 10 Tf ( on a big-endian platform:) Tj T* ET
Q
Q
q
1 0 0 1 16 16 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 448.0283 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F5 10 Tf 12 TL (A:          10000110) Tj T* (B: 11111111 10000110) Tj T* ET
Q
Q
Q
Q
Q
q
1 J
1 j
.662745 .662745 .662745 RG
.5 w
n 0 116.2 m 481.2283 116.2 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 116.2 l S
n 481.2283 0 m 481.2283 116.2 l S
Q
Q
Q
q
1 0 0 1 57.02362 160.6929 cm
Q
q
1 0 0 1 57.02362 133.6929 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.1.4   Conformance groups) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 79.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.619168 Tw (An implementation does not need to support all instructions specified in this document \(e.g., deprecated) Tj T* 0 Tw .847565 Tw (instructions\). Instead, a number of conformance groups are specified. An implementation must support the) Tj T* 0 Tw 4.953486 Tw ("basic" conformance group and may support additional conformance groups, where supporting a) Tj T* 0 Tw (conformance group means it must support all instructions in that conformance group.) Tj T* ET
Q
Q
 
endstream
endobj
116 0 obj
<<
/Length 6496
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 4.483196 Tw (The use of named conformance groups enables interoperability between a runtime that executes) Tj T* 0 Tw -0.045118 Tw (instructions, and tools as such compilers that generate instructions for the runtime. Thus, capability discovery) Tj T* 0 Tw (in terms of conformance groups might be done manually by users or automatically by tools.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 699.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .32755 Tw (Each conformance group has a short ASCII label \(e.g., "basic"\) that corresponds to a set of instructions that) Tj T* 0 Tw (are mandatory. That is, each instruction has one or more conformance groups of which it is a member.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 681.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The "basic" conformance group includes all instructions defined in this specification unless otherwise noted.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 651.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.2   Instruction encoding) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 633.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF has two instruction encodings:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 627.0236 cm
Q
q
1 0 0 1 57.02362 627.0236 cm
Q
q
1 0 0 1 57.02362 615.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the basic instruction encoding, which uses 64 bits to encode an instruction) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 609.0236 cm
Q
q
1 0 0 1 57.02362 585.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .334168 Tw (the wide instruction encoding, which appends a second 64-bit immediate \(i.e., constant\) value after the) Tj T* 0 Tw (basic instruction for a total of 128 bits.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 585.0236 cm
Q
q
1 0 0 1 57.02362 567.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The fields conforming an encoded basic instruction are stored in the following order:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 521.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F5 10 Tf 12 TL (opcode:8 src_reg:4 dst_reg:4 offset:16 imm:32 // In little-endian BPF.) Tj T* (opcode:8 dst_reg:4 src_reg:4 offset:16 imm:32 // In big-endian BPF.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 501.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (imm) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 486.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer immediate value) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 470.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (offset) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 455.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed integer offset used with pointer arithmetic) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 439.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (src_reg) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 412.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 2.370759 Tw 12 TL /F1 10 Tf 0 0 0 rg (the source register number \(0-10\), except where otherwise specified \() Tj 0 .4 .6 rg (64-bit immediate instructions) Tj 0 0 0 rg  T* 0 Tw (reuse this field for other purposes\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 396.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (dst_reg) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 381.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (destination register number \(0-10\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 365.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (opcode) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 350.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (operation to perform) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 320.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.357397 Tw (Note that the contents of multi-byte fields \('imm' and 'offset'\) are stored using big-endian byte ordering in) Tj T* 0 Tw (big-endian BPF and little-endian byte ordering in little-endian BPF.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 302.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For example:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 221.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F5 10 Tf 12 TL (opcode                  offset imm          assembly) Tj T* (       src_reg dst_reg) Tj T* (07     0       1        00 00  44 33 22 11  r1 += 0x11223344 // little) Tj T* (       dst_reg src_reg) Tj T* (07     1       0        00 00  11 22 33 44  r1 += 0x11223344 // big) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 201.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Note that most instructions do not use all of the fields. Unused fields shall be cleared to zero.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 147.6236 cm
q
BT 1 0 0 1 0 38 Tm .552025 Tw 12 TL /F1 10 Tf 0 0 0 rg (As discussed below in ) Tj 0 .4 .6 rg (64-bit immediate instructions) Tj 0 0 0 rg (, a 64-bit immediate instruction uses a 64-bit immediate) Tj T* 0 Tw .723022 Tw (value that is constructed as follows. The 64 bits following the basic instruction contain a pseudo instruction) Tj T* 0 Tw .611019 Tw (using the same format but with opcode, dst_reg, src_reg, and offset all set to zero, and imm containing the) Tj T* 0 Tw (high 32 bits of the immediate value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 129.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This is depicted in the following figure:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 72.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (      basic_instruction) Tj T* (.------------------------------.) Tj T* (|                              |) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
117 0 obj
<<
/Length 10307
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 703.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F5 10 Tf 12 TL (opcode:8 regs:8 offset:16 imm:32 unused:32 imm:32) Tj T* (                                 |              |) Tj T* (                                 '--------------') Tj T* (                                pseudo instruction) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 683.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Thus the 64-bit immediate value is constructed as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 677.8236 cm
Q
q
1 0 0 1 57.02362 665.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (imm64 = \(next_imm <) Tj (< 32\) | imm) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 665.8236 cm
Q
q
1 0 0 1 57.02362 635.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.148556 Tw (where 'next_imm' refers to the imm value of the pseudo instruction following the basic instruction. The) Tj T* 0 Tw (unused bytes in the pseudo instruction are reserved and shall be cleared to zero.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 608.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.2.1   Instruction classes) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 590.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The three LSB bits of the 'opcode' field store the instruction class:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 584.8236 cm
Q
q
1 0 0 1 57.02362 314.8236 cm
q
1 1 1 rg
n 0 270 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 240 481.2283 -30 re f*
1 1 1 rg
n 0 210 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 180 481.2283 -30 re f*
1 1 1 rg
n 0 150 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 120 481.2283 -30 re f*
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8.559094 0 Td (class) Tj T* -8.559094 0 Td ET
Q
Q
q
1 0 0 1 60.13819 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.088386 0 Td (val) Tj T* 1.115 0 Td (ue) Tj T* -3.203386 0 Td ET
Q
Q
q
1 0 0 1 90.21496 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 60.28799 0 Td (description) Tj T* -60.28799 0 Td ET
Q
Q
q
1 0 0 1 276.6909 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 76.7587 0 Td (reference) Tj T* -76.7587 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (non-standard load operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 225 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_LD) Tj T* (X) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (1) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (load into register operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 195 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_ST) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (store from immediate operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_ST) Tj T* (X) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (3) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (store from register operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 135 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_AL) Tj T* (U) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (4) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32-bit arithmetic operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 105 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_JM) Tj T* (P) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (5) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit jump operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 75 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_JM) Tj T* (P32) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (6) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (32-bit jump operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 45 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_AL) Tj T* (U64) Tj T* ET
Q
Q
q
1 0 0 1 60.13819 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (7) Tj T* ET
Q
Q
q
1 0 0 1 90.21496 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit arithmetic operations) Tj T* ET
Q
Q
q
1 0 0 1 276.6909 15 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 240 m 481.2283 240 l S
n 0 210 m 481.2283 210 l S
n 0 180 m 481.2283 180 l S
n 0 150 m 481.2283 150 l S
n 0 120 m 481.2283 120 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 54.13819 0 m 54.13819 270 l S
n 84.21496 0 m 84.21496 270 l S
n 270.6909 0 m 270.6909 270 l S
n 0 270 m 481.2283 270 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 270 l S
n 481.2283 0 m 481.2283 270 l S
Q
Q
Q
q
1 0 0 1 57.02362 314.8236 cm
Q
q
1 0 0 1 57.02362 284.8236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.3   Arithmetic and jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 254.8236 cm
q
BT 1 0 0 1 0 14 Tm .579862 Tw 12 TL /F1 10 Tf 0 0 0 rg (For arithmetic and jump instructions \() Tj /F5 10 Tf (BPF_ALU) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_JMP) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (BPF_JMP32) Tj /F1 10 Tf (\), the 8-bit 'opcode') Tj T* 0 Tw (field is divided into three parts:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 248.8236 cm
Q
q
1 0 0 1 57.02362 212.8236 cm
q
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 56.1532 0 Td (4 bits \(MSB\)) Tj T* -56.1532 0 Td ET
Q
Q
q
1 0 0 1 188.0864 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 22.73851 0 Td (1 bit) Tj T* -22.73851 0 Td ET
Q
Q
q
1 0 0 1 266.1234 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 76.77246 0 Td (3 bits \(LSB\)) Tj T* -76.77246 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (code) Tj T* ET
Q
Q
q
1 0 0 1 188.0864 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (source) Tj T* ET
Q
Q
q
1 0 0 1 266.1234 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instruction class) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 18 m 481.2283 18 l S
n 182.0864 0 m 182.0864 36 l S
n 260.1234 0 m 260.1234 36 l S
n 0 36 m 481.2283 36 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 36 l S
n 481.2283 0 m 481.2283 36 l S
Q
Q
Q
q
1 0 0 1 57.02362 212.8236 cm
Q
q
1 0 0 1 57.02362 196.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (code) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 181.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the operation code, whose meaning varies by instruction class) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 165.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (source) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 90.82362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 62 Tm  T* ET
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the source operand location, which unless otherwise specified is one of:) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 54 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 461.2283 -18 re f*
1 1 1 rg
n 0 18 461.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.880176 0 Td (source) Tj T* -1.880176 0 Td ET
Q
Q
q
1 0 0 1 54.55035 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.444313 0 Td (value) Tj T* -1.444313 0 Td ET
Q
Q
q
1 0 0 1 95.00898 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 153.1597 0 Td (description) Tj T* -153.1597 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_K) Tj T* ET
Q
Q
q
1 0 0 1 54.55035 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x00) Tj T* ET
Q
Q
q
1 0 0 1 95.00898 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use 32-bit 'imm' value as source operand) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_X) Tj T* ET
Q
Q
q
1 0 0 1 54.55035 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x08) Tj T* ET
Q
Q
q
1 0 0 1 95.00898 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use 'src_reg' register value as source operand) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 461.2283 36 l S
n 0 18 m 461.2283 18 l S
n 48.55035 0 m 48.55035 54 l S
n 89.00898 0 m 89.00898 54 l S
n 0 54 m 461.2283 54 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 54 l S
n 461.2283 0 m 461.2283 54 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 74.82362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (instruction class) Tj T* ET
Q
Q
 
endstream
endobj
118 0 obj
<<
/Length 10715
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the instruction class \(see ) Tj 0 .4 .6 rg (Instruction classes) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 723.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.1   Arithmetic instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 681.0236 cm
q
BT 1 0 0 1 0 26 Tm 1.416027 Tw 12 TL /F5 10 Tf 0 0 0 rg (BPF_ALU) Tj /F1 10 Tf ( uses 32-bit wide operands while ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf ( uses 64-bit wide operands for otherwise identical) Tj T* 0 Tw .868797 Tw (operations. The 'code' field encodes the operation as below, where 'src' and 'dst' refer to the values of the) Tj T* 0 Tw (source and destination registers, respectively.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 675.0236 cm
Q
q
1 0 0 1 57.02362 135.0236 cm
q
1 1 1 rg
n 0 540 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 510 481.2283 -30 re f*
1 1 1 rg
n 0 480 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 450 481.2283 -30 re f*
1 1 1 rg
n 0 420 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 390 481.2283 -30 re f*
1 1 1 rg
n 0 360 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 330 481.2283 -30 re f*
1 1 1 rg
n 0 300 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 270 481.2283 -30 re f*
1 1 1 rg
n 0 240 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 210 481.2283 -30 re f*
1 1 1 rg
n 0 180 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 150 481.2283 -30 re f*
1 1 1 rg
n 0 120 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 90 481.2283 -30 re f*
1 1 1 rg
n 0 60 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 513 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 9.741741 0 Td (code) Tj T* -9.741741 0 Td ET
Q
Q
q
1 0 0 1 60.82348 513 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 2.278745 0 Td (val) Tj T* 1.115 0 Td (ue) Tj T* -3.393745 0 Td ET
Q
Q
q
1 0 0 1 91.28097 513 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.710243 0 Td (offset) Tj T* -1.710243 0 Td ET
Q
Q
q
1 0 0 1 133.9215 513 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 143.7034 0 Td (description) Tj T* -143.7034 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_AD) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 483 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 495 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 495 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst += src) Tj T* ET
Q
Q
q
1 0 0 1 6 453 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_SU) Tj T* (B) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 453 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst -= src) Tj T* ET
Q
Q
q
1 0 0 1 6 423 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_MU) Tj T* (L) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 423 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x2) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst *= src) Tj T* ET
Q
Q
q
1 0 0 1 6 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_DIV) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 393 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x3) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst / src\) : 0) Tj T* ET
Q
Q
q
1 0 0 1 6 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_SDI) Tj T* (V) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x3) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst s/ src\) : 0) Tj T* ET
Q
Q
q
1 0 0 1 6 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_OR) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x4) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst |= src) Tj T* ET
Q
Q
q
1 0 0 1 6 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_AN) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 303 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x5) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 315 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst &) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 6 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_LS) Tj T* (H) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x6) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 285 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst <) Tj (<) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_RS) Tj T* (H) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x7) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (dst >) Tj (>) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_NE) Tj T* (G) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x8) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = -dst) Tj T* ET
Q
Q
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_MO) Tj T* (D) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x9) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst % src\) : dst) Tj T* ET
Q
Q
q
1 0 0 1 6 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_SM) Tj T* (OD) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x9) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(src != 0\) ? \(dst s% src\) : dst) Tj T* ET
Q
Q
q
1 0 0 1 6 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_XO) Tj T* (R) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0xa) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst ^= src) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_MO) Tj T* (V) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0xb) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = src) Tj T* ET
Q
Q
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_MO) Tj T* (VSX) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0xb) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (8/16/3) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = \(s8,s16,s32\)src) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_AR) Tj T* (SH) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0xc) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 45 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (:term:`sign extending) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( dst >) Tj (>) Tj (= \(src & mask\)) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (BPF_END) Tj T* ET
Q
Q
q
1 0 0 1 60.82348 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0xd) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 91.28097 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 133.9215 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (byte swap operations \(see ) Tj 0 .4 .6 rg (Byte swap instructions) Tj 0 0 0 rg ( below\)) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 510 m 481.2283 510 l S
n 0 480 m 481.2283 480 l S
n 0 450 m 481.2283 450 l S
n 0 420 m 481.2283 420 l S
n 0 390 m 481.2283 390 l S
n 0 360 m 481.2283 360 l S
n 0 330 m 481.2283 330 l S
n 0 300 m 481.2283 300 l S
n 0 270 m 481.2283 270 l S
n 0 240 m 481.2283 240 l S
n 0 210 m 481.2283 210 l S
n 0 180 m 481.2283 180 l S
n 0 150 m 481.2283 150 l S
n 0 120 m 481.2283 120 l S
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 54.82348 0 m 54.82348 540 l S
n 85.28097 0 m 85.28097 540 l S
n 127.9215 0 m 127.9215 540 l S
n 0 540 m 481.2283 540 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 540 l S
n 481.2283 0 m 481.2283 540 l S
Q
Q
Q
q
1 0 0 1 57.02362 135.0236 cm
Q
q
1 0 0 1 57.02362 81.02362 cm
q
BT 1 0 0 1 0 38 Tm -0.115444 Tw 12 TL /F1 10 Tf 0 0 0 rg (Underflow and overflow are allowed during arithmetic operations, meaning the 64-bit or 32-bit value will wrap.) Tj T* 0 Tw .95213 Tw (If BPF program execution would result in division by zero, the destination register is instead set to zero. If) Tj T* 0 Tw .369272 Tw (execution would result in modulo by zero, for ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf ( the value of the destination register is unchanged) Tj T* 0 Tw (whereas for ) Tj /F5 10 Tf (BPF_ALU) Tj /F1 10 Tf ( the upper 32 bits of the destination register are zeroed.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 63.02362 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ADD) Tj ( ) Tj (|) Tj ( ) Tj (BPF_X) Tj ( ) Tj (|) Tj ( ) Tj (BPF_ALU) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
 
endstream
endobj
119 0 obj
<<
/Length 7519
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 739.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\) \(\(u32\) dst + \(u32\) src\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 719.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where '\(u32\)' indicates that the upper 32 bits are zeroed.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 701.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ADD) Tj ( ) Tj (|) Tj ( ) Tj (BPF_X) Tj ( ) Tj (|) Tj ( ) Tj (BPF_ALU64) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 668.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = dst + src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 648.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_XOR) Tj ( ) Tj (|) Tj ( ) Tj (BPF_K) Tj ( ) Tj (|) Tj ( ) Tj (BPF_ALU) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 615.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = \(u32\) dst ^ \(u32\) imm32) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 595.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_XOR) Tj ( ) Tj (|) Tj ( ) Tj (BPF_K) Tj ( ) Tj (|) Tj ( ) Tj (BPF_ALU64) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 562.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = dst ^ imm32) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 530.2236 cm
q
BT 1 0 0 1 0 14 Tm 2.14218 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that most instructions have instruction offset of 0. Only three instructions \() Tj /F5 10 Tf (BPF_SDIV) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_SMOD) Tj /F1 10 Tf (,) Tj T* 0 Tw /F5 10 Tf (BPF_MOVSX) Tj /F1 10 Tf (\) have a non-zero offset.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 512.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The division and modulo operations support both unsigned and signed flavors.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 470.2236 cm
q
BT 1 0 0 1 0 26 Tm 1.002739 Tw 12 TL /F1 10 Tf 0 0 0 rg (For unsigned operations \() Tj /F5 10 Tf (BPF_DIV) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (BPF_MOD) Tj /F1 10 Tf (\), for ) Tj /F5 10 Tf (BPF_ALU) Tj /F1 10 Tf (, 'imm' is interpreted as a 32-bit unsigned) Tj T* 0 Tw 2.36389 Tw (value. For ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf (, 'imm' is first ) Tj 1 0 0 rg (:term:`sign extended) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( from 32 to 64 bits, and then) Tj T* 0 Tw (interpreted as a 64-bit unsigned value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 428.2236 cm
q
BT 1 0 0 1 0 26 Tm 1.734168 Tw 12 TL /F1 10 Tf 0 0 0 rg (For signed operations \() Tj /F5 10 Tf (BPF_SDIV) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (BPF_SMOD) Tj /F1 10 Tf (\), for ) Tj /F5 10 Tf (BPF_ALU) Tj /F1 10 Tf (, 'imm' is interpreted as a 32-bit signed) Tj T* 0 Tw 2.36389 Tw (value. For ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf (, 'imm' is first ) Tj 1 0 0 rg (:term:`sign extended) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( from 32 to 64 bits, and then) Tj T* 0 Tw (interpreted as a 64-bit signed value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 374.2236 cm
q
BT 1 0 0 1 0 38 Tm 1.938022 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there are varying definitions of the signed modulo operation when the dividend or divisor are) Tj T* 0 Tw 1.58589 Tw (negative, where implementations often vary by language such that Python, Ruby, etc. differ from C, Go,) Tj T* 0 Tw 1.171667 Tw (Java, etc. This specification requires that signed modulo use truncated division \(where -13 % 3 == -1\) as) Tj T* 0 Tw (implemented in C, Go, etc.:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 368.2236 cm
Q
q
1 0 0 1 57.02362 356.2236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a % n = a - n * trunc\(a / n\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 356.2236 cm
Q
q
1 0 0 1 57.02362 290.2236 cm
q
BT 1 0 0 1 0 50 Tm 3.962362 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_MOVSX) Tj /F1 10 Tf ( instruction does a move operation with sign extension. ) Tj /F5 10 Tf (BPF_ALU) Tj ( ) Tj (|) Tj ( ) Tj (BPF_MOVSX) Tj /F1 10 Tf  T* 0 Tw .308453 Tw 1 0 0 rg (:term:`sign extends) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( 8-bit and 16-bit operands into 32 bit operands, and zeroes the remaining) Tj T* 0 Tw 2.690696 Tw (upper 32 bits. ) Tj /F5 10 Tf (BPF_ALU64) Tj ( ) Tj (|) Tj ( ) Tj (BPF_MOVSX) Tj /F1 10 Tf ( ) Tj 1 0 0 rg (:term:`sign extends) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( 8-bit, 16-bit, and 32-bit) Tj T* 0 Tw .979882 Tw (operands into 64 bit operands. Unlike other arithmetic instructions, ) Tj /F5 10 Tf (BPF_MOVSX) Tj /F1 10 Tf ( is only defined for register) Tj T* 0 Tw (source operands \() Tj /F5 10 Tf (BPF_X) Tj /F1 10 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 272.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_NEG) Tj /F1 10 Tf ( instruction is only defined when the source bit is clear \() Tj /F5 10 Tf (BPF_K) Tj /F1 10 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 254.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Shift operations use a mask of 0x3F \(63\) for 64-bit operations and 0x1F \(31\) for 32-bit operations.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 227.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.2   Byte swap instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 197.2236 cm
q
BT 1 0 0 1 0 14 Tm 1.049272 Tw 12 TL /F1 10 Tf 0 0 0 rg (The byte swap instructions use instruction classes of ) Tj /F5 10 Tf (BPF_ALU) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf ( and a 4-bit 'code' field of) Tj T* 0 Tw /F5 10 Tf (BPF_END) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 167.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.040097 Tw (The byte swap instructions operate on the destination register only and do not use a separate source register) Tj T* 0 Tw (or immediate value.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 125.2236 cm
q
BT 1 0 0 1 0 26 Tm .901575 Tw 12 TL /F1 10 Tf 0 0 0 rg (For ) Tj /F5 10 Tf (BPF_ALU) Tj /F1 10 Tf (, the 1-bit source operand field in the opcode is used to select what byte order the operation) Tj T* 0 Tw .730464 Tw (converts from or to. For ) Tj /F5 10 Tf (BPF_ALU64) Tj /F1 10 Tf (, the 1-bit source operand field in the opcode is reserved and must be) Tj T* 0 Tw (set to 0.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 119.2236 cm
Q
q
1 0 0 1 57.02362 89.22362 cm
q
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 11.56677 0 Td (class) Tj T* -11.56677 0 Td ET
Q
Q
q
1 0 0 1 66.15354 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 7.681772 0 Td (source) Tj T* -7.681772 0 Td ET
Q
Q
q
1 0 0 1 126.3071 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL .704318 0 Td (valu) Tj T* 7.225 0 Td (e) Tj T* -7.929318 0 Td ET
Q
Q
q
1 0 0 1 159.7257 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 130.8013 0 Td (description) Tj T* -130.8013 0 Td ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 0 m 481.2283 0 l S
n 60.15354 0 m 60.15354 30 l S
n 120.3071 0 m 120.3071 30 l S
n 153.7257 0 m 153.7257 30 l S
n 0 30 m 481.2283 30 l S
n 0 0 m 0 30 l S
n 481.2283 0 m 481.2283 30 l S
Q
Q
Q
 
endstream
endobj
120 0 obj
<<
/Length 8005
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 675.0236 cm
q
1 1 1 rg
n 0 90 481.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 481.2283 -30 re f*
1 1 1 rg
n 0 30 481.2283 -30 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_ALU) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_TO_) Tj T* (LE) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 159.7257 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (convert between host byte order and little endian) Tj T* ET
Q
Q
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_ALU) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_TO_) Tj T* (BE) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 159.7257 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (convert between host byte order and big endian) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_ALU) Tj T* (64) Tj T* ET
Q
Q
q
1 0 0 1 66.15354 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Reserved) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x0) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 159.7257 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (do byte swap unconditionally) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 90 m 481.2283 90 l S
n 0 60 m 481.2283 60 l S
n 0 30 m 481.2283 30 l S
n 60.15354 0 m 60.15354 90 l S
n 120.3071 0 m 120.3071 90 l S
n 153.7257 0 m 153.7257 90 l S
n 0 0 m 0 90 l S
n 481.2283 0 m 481.2283 90 l S
n 0 0 m 481.2283 0 l S
Q
Q
Q
q
1 0 0 1 57.02362 675.0236 cm
Q
q
1 0 0 1 57.02362 657.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The 'imm' field encodes the width of the swap operations. The following widths are supported: 16, 32 and 64.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 639.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Examples:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 621.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ALU) Tj ( ) Tj (|) Tj ( ) Tj (BPF_TO_LE) Tj ( ) Tj (|) Tj ( ) Tj (BPF_END) Tj /F1 10 Tf ( with imm = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 563.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = htole16\(dst\)) Tj T* (dst = htole32\(dst\)) Tj T* (dst = htole64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 543.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ALU) Tj ( ) Tj (|) Tj ( ) Tj (BPF_TO_BE) Tj ( ) Tj (|) Tj ( ) Tj (BPF_END) Tj /F1 10 Tf ( with imm = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 486.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = htobe16\(dst\)) Tj T* (dst = htobe32\(dst\)) Tj T* (dst = htobe64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 466.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ALU64) Tj ( ) Tj (|) Tj ( ) Tj (BPF_TO_LE) Tj ( ) Tj (|) Tj ( ) Tj (BPF_END) Tj /F1 10 Tf ( with imm = 16/32/64 means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 409.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F5 10 Tf 12 TL (dst = bswap16\(dst\)) Tj T* (dst = bswap32\(dst\)) Tj T* (dst = bswap64\(dst\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 382.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.3.3   Jump instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 352.4236 cm
q
BT 1 0 0 1 0 14 Tm 1.416027 Tw 12 TL /F5 10 Tf 0 0 0 rg (BPF_JMP32) Tj /F1 10 Tf ( uses 32-bit wide operands while ) Tj /F5 10 Tf (BPF_JMP) Tj /F1 10 Tf ( uses 64-bit wide operands for otherwise identical) Tj T* 0 Tw (operations. The 'code' field encodes the operation as below:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 346.4236 cm
Q
q
1 0 0 1 54.69039 94.42362 cm
q
1 1 1 rg
n 0 252 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 210 485.8948 -42 re f*
1 1 1 rg
n 0 168 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 126 485.8948 -42 re f*
1 1 1 rg
n 0 84 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 42 485.8948 -42 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 1.77357 0 Td (code) Tj T* -1.77357 0 Td ET
Q
Q
q
1 0 0 1 44.88714 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .592231 0 Td (va) Tj T* 1.115 0 Td (lu) Tj T* 1.665 0 Td (e) Tj T* -3.372231 0 Td ET
Q
Q
q
1 0 0 1 69.1916 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .844567 0 Td (s) Tj T* .835 0 Td (r) Tj T* -0.835 0 Td (c) Tj T* -0.844567 0 Td ET
Q
Q
q
1 0 0 1 88.44073 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 42.39383 0 Td (description) Tj T* -42.39383 0 Td ET
Q
Q
q
1 0 0 1 239.1284 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 107.0482 0 Td (notes) Tj T* -107.0482 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JA) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_JMP | BPF_K only) Tj T* ET
Q
Q
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JA) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += imm) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_JMP32 | BPF_K only) Tj T* ET
Q
Q
q
1 0 0 1 6 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JEQ) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (1) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset if dst == src) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JGT) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 69 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst > src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JGE) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (3) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 27 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst >) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 0 m 485.8948 0 l S
n 0 210 m 485.8948 210 l S
n 0 168 m 485.8948 168 l S
n 0 126 m 485.8948 126 l S
n 0 84 m 485.8948 84 l S
n 0 42 m 485.8948 42 l S
n 38.88714 0 m 38.88714 252 l S
n 63.1916 0 m 63.1916 252 l S
n 82.44073 0 m 82.44073 252 l S
n 233.1284 0 m 233.1284 252 l S
n 0 252 m 485.8948 252 l S
n 0 0 m 0 252 l S
n 485.8948 0 m 485.8948 252 l S
Q
Q
Q
 
endstream
endobj
121 0 obj
<<
/Length 8878
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 54.69039 261.0236 cm
q
1 1 1 rg
n 0 504 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 462 485.8948 -42 re f*
1 1 1 rg
n 0 420 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 378 485.8948 -42 re f*
1 1 1 rg
n 0 336 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 294 485.8948 -42 re f*
1 1 1 rg
n 0 252 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 210 485.8948 -42 re f*
1 1 1 rg
n 0 168 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 126 485.8948 -42 re f*
1 1 1 rg
n 0 84 485.8948 -42 re f*
.878431 .878431 .878431 rg
n 0 42 485.8948 -42 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 477 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JSET) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 477 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (4) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 465 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 489 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst & src) Tj T* ET
Q
Q
q
1 0 0 1 6 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JNE) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (5) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 423 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 447 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC += offset if dst != src) Tj T* ET
Q
Q
q
1 0 0 1 6 393 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JSGT) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 393 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (6) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 405 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst > src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JSGE) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (7) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 339 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 363 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst >) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (CALL) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 321 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call helper function by address) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 321 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (BPF_JMP | BPF_K only, see ) Tj 0 .4 .6 rg (Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (CALL) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (1) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call PC += imm) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 279 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (BPF_JMP | BPF_K only, see ) Tj 0 .4 .6 rg (Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 6 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (CALL) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (call helper function by BTF ID) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 237 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (BPF_JMP | BPF_K only, see ) Tj 0 .4 .6 rg (Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (EXIT) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (9) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (return) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_JMP | BPF_K only) Tj T* ET
Q
Q
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JLT) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (a) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 153 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst < src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JLE) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (b) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 111 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst <) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unsigned) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JSLT) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (c) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 69 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst < src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_) Tj T* (JSLE) Tj T* ET
Q
Q
q
1 0 0 1 44.88714 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (d) Tj T* ET
Q
Q
q
1 0 0 1 69.1916 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (a) Tj T* (n) Tj T* (y) Tj T* ET
Q
Q
q
1 0 0 1 88.44073 27 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (PC += offset if dst <) Tj (= src) Tj T* ET
Q
Q
q
1 0 0 1 239.1284 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signed) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 504 m 485.8948 504 l S
n 0 462 m 485.8948 462 l S
n 0 420 m 485.8948 420 l S
n 0 378 m 485.8948 378 l S
n 0 336 m 485.8948 336 l S
n 0 294 m 485.8948 294 l S
n 0 252 m 485.8948 252 l S
n 0 210 m 485.8948 210 l S
n 0 168 m 485.8948 168 l S
n 0 126 m 485.8948 126 l S
n 0 84 m 485.8948 84 l S
n 0 42 m 485.8948 42 l S
n 38.88714 0 m 38.88714 504 l S
n 63.1916 0 m 63.1916 504 l S
n 82.44073 0 m 82.44073 504 l S
n 233.1284 0 m 233.1284 504 l S
n 0 0 m 0 504 l S
n 485.8948 0 m 485.8948 504 l S
n 0 0 m 485.8948 0 l S
Q
Q
Q
q
1 0 0 1 57.02362 261.0236 cm
Q
q
1 0 0 1 57.02362 243.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The BPF program needs to store the return value into register R0 before doing a ) Tj /F5 10 Tf (BPF_EXIT) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 225.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Example:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 207.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_JSGE) Tj ( ) Tj (|) Tj ( ) Tj (BPF_X) Tj ( ) Tj (|) Tj ( ) Tj (BPF_JMP32) Tj /F1 10 Tf ( \(0x7e\) means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 173.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (if \(s32\)dst s) Tj (>) Tj (= \(s32\)src goto +offset) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 153.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (where 's) Tj (>) Tj (=' indicates a signed ') Tj (>) Tj (=' comparison.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 135.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_JA) Tj ( ) Tj (|) Tj ( ) Tj (BPF_K) Tj ( ) Tj (|) Tj ( ) Tj (BPF_JMP32) Tj /F1 10 Tf ( \(0x06\) means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 102.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (gotol +imm) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 82.62362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where 'imm' means the branch offset comes from insn 'imm' field.) Tj T* ET
Q
Q
 
endstream
endobj
122 0 obj
<<
/Length 10464
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 717.0236 cm
q
BT 1 0 0 1 0 38 Tm 1.719897 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that there are two flavors of ) Tj /F5 10 Tf (BPF_JA) Tj /F1 10 Tf ( instructions. The ) Tj /F5 10 Tf (BPF_JMP) Tj /F1 10 Tf ( class permits a 16-bit jump offset) Tj T* 0 Tw 1.347397 Tw (specified by the 'offset' field, whereas the ) Tj /F5 10 Tf (BPF_JMP32) Tj /F1 10 Tf ( class permits a 32-bit jump offset specified by the) Tj T* 0 Tw 2.40713 Tw ('imm' field. A > 16-bit conditional jump may be converted to a < 16-bit conditional jump plus a 32-bit) Tj T* 0 Tw (unconditional jump.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 693.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.3.3.1   Helper functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 663.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .858797 Tw (Helper functions are a concept whereby BPF programs can call into a set of function calls exposed by the) Tj T* 0 Tw (underlying platform.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 633.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .098647 Tw (Historically, each helper function was identified by an address encoded in the imm field. The available helper) Tj T* 0 Tw (functions may differ for each program type, but address values are unique across all program types.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 603.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.070686 Tw (Platforms that support the BPF Type Format \(BTF\) support identifying a helper function by a BTF ID encoded) Tj T* 0 Tw (in the imm field, where the BTF ID identifies the helper name and type.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 579.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.3.3.2   Program-local functions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 537.0236 cm
q
BT 1 0 0 1 0 26 Tm .62389 Tw 12 TL /F1 10 Tf 0 0 0 rg (Program-local functions are functions exposed by the same BPF program as the caller, and are referenced) Tj T* 0 Tw 1.933071 Tw (by offset from the call instruction, similar to ) Tj /F5 10 Tf (BPF_JA) Tj /F1 10 Tf (. The offset is encoded in the imm field of the call) Tj T* 0 Tw (instruction. A ) Tj /F5 10 Tf (BPF_EXIT) Tj /F1 10 Tf ( within the program-local function will return to the caller.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 507.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf .133333 .133333 .133333 rg (1.4   Load and store instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 477.0236 cm
q
BT 1 0 0 1 0 14 Tm -0.101444 Tw 12 TL /F1 10 Tf 0 0 0 rg (For load and store instructions \() Tj /F5 10 Tf (BPF_LD) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_LDX) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_ST) Tj /F1 10 Tf (, and ) Tj /F5 10 Tf (BPF_STX) Tj /F1 10 Tf (\), the 8-bit 'opcode' field is divided) Tj T* 0 Tw (as:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 471.0236 cm
Q
q
1 0 0 1 57.02362 435.0236 cm
q
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 47.60629 0 Td (3 bits \(MSB\)) Tj T* -47.60629 0 Td ET
Q
Q
q
1 0 0 1 170.9926 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 22.18814 0 Td (2 bits) Tj T* -22.18814 0 Td ET
Q
Q
q
1 0 0 1 253.4889 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 83.08974 0 Td (3 bits \(LSB\)) Tj T* -83.08974 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (mode) Tj T* ET
Q
Q
q
1 0 0 1 170.9926 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (size) Tj T* ET
Q
Q
q
1 0 0 1 253.4889 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instruction class) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 18 m 481.2283 18 l S
n 164.9926 0 m 164.9926 36 l S
n 247.4889 0 m 247.4889 36 l S
n 0 36 m 481.2283 36 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 36 l S
n 481.2283 0 m 481.2283 36 l S
Q
Q
Q
q
1 0 0 1 57.02362 435.0236 cm
Q
q
1 0 0 1 57.02362 417.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The mode modifier is one of:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 411.0236 cm
Q
q
1 0 0 1 57.02362 183.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 222 461.2283 -42 re f*
.878431 .878431 .878431 rg
n 0 180 461.2283 -30 re f*
1 1 1 rg
n 0 150 461.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 120 461.2283 -30 re f*
1 1 1 rg
n 0 90 461.2283 -30 re f*
.878431 .878431 .878431 rg
n 0 60 461.2283 -30 re f*
1 1 1 rg
n 0 30 461.2283 -30 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 12.55845 0 Td (mode) Tj T* -6.390001 0 Td (modifier) Tj T* -6.168449 0 Td ET
Q
Q
q
1 0 0 1 69.7869 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .706711 0 Td (va) Tj T* 1.115 0 Td (lu) Tj T* 1.665 0 Td (e) Tj T* -3.486711 0 Td ET
Q
Q
q
1 0 0 1 94.32032 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 55.37032 0 Td (description) Tj T* -55.37032 0 Td ET
Q
Q
q
1 0 0 1 270.961 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 69.62369 0 Td (reference) Tj T* -69.62369 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_IMM) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (00) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 270.961 165 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_ABS) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (20) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 135 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legacy BPF packet access \(absolute\)) Tj T* ET
Q
Q
q
1 0 0 1 270.961 135 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_IND) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (40) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legacy BPF packet access \(indirect\)) Tj T* ET
Q
Q
q
1 0 0 1 270.961 105 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_MEM) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (60) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 270.961 75 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_MEM) Tj T* (SX) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (80) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 270.961 45 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_ATO) Tj T* (MIC) Tj T* ET
Q
Q
q
1 0 0 1 69.7869 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x) Tj T* (c0) Tj T* ET
Q
Q
q
1 0 0 1 94.32032 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 270.961 15 cm
q
0 .4 .6 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Atomic operations) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 180 m 461.2283 180 l S
n 0 150 m 461.2283 150 l S
n 0 120 m 461.2283 120 l S
n 0 90 m 461.2283 90 l S
n 0 60 m 461.2283 60 l S
n 0 30 m 461.2283 30 l S
n 63.7869 0 m 63.7869 222 l S
n 88.32032 0 m 88.32032 222 l S
n 264.961 0 m 264.961 222 l S
n 0 222 m 461.2283 222 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 222 l S
n 461.2283 0 m 461.2283 222 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 183.0236 cm
Q
q
1 0 0 1 57.02362 165.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The size modifier is one of:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 159.0236 cm
Q
q
1 0 0 1 57.02362 63.02362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 0 cm
q
1 1 1 rg
n 0 90 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 461.2283 -18 re f*
1 1 1 rg
n 0 54 461.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 461.2283 -18 re f*
1 1 1 rg
n 0 18 461.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 40.30639 0 Td (size modifier) Tj T* -40.30639 0 Td ET
Q
Q
q
1 0 0 1 159.7428 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 10.78092 0 Td (value) Tj T* -10.78092 0 Td ET
Q
Q
q
1 0 0 1 218.8746 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 91.22686 0 Td (description) Tj T* -91.22686 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_W) Tj T* ET
Q
Q
q
1 0 0 1 159.7428 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x00) Tj T* ET
Q
Q
q
1 0 0 1 218.8746 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (word \(4 bytes\)) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_H) Tj T* ET
Q
Q
q
1 0 0 1 159.7428 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x08) Tj T* ET
Q
Q
q
1 0 0 1 218.8746 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (half word \(2 bytes\)) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_B) Tj T* ET
Q
Q
q
1 0 0 1 159.7428 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x10) Tj T* ET
Q
Q
q
1 0 0 1 218.8746 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (byte) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_DW) Tj T* ET
Q
Q
q
1 0 0 1 159.7428 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x18) Tj T* ET
Q
Q
q
1 0 0 1 218.8746 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (double word \(8 bytes\)) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 72 m 461.2283 72 l S
n 0 54 m 461.2283 54 l S
n 0 36 m 461.2283 36 l S
n 0 18 m 461.2283 18 l S
n 153.7428 0 m 153.7428 90 l S
n 212.8746 0 m 212.8746 90 l S
n 0 90 m 461.2283 90 l S
n 0 0 m 461.2283 0 l S
n 0 0 m 0 90 l S
n 461.2283 0 m 461.2283 90 l S
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 63.02362 cm
Q
 
endstream
endobj
123 0 obj
<<
/Length 8454
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.1   Regular load and store operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 720.0236 cm
q
BT 1 0 0 1 0 14 Tm -0.026978 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_MEM) Tj /F1 10 Tf ( mode modifier is used to encode regular load and store instructions that transfer data between) Tj T* 0 Tw (a register and memory.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 702.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_MEM) Tj ( ) Tj (|) Tj ( ) Tj (<) Tj (size) Tj (>) Tj ( ) Tj (|) Tj ( ) Tj (BPF_STX) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 668.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(size *\) \(dst + offset\) = src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 648.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_MEM) Tj ( ) Tj (|) Tj ( ) Tj (<) Tj (size) Tj (>) Tj ( ) Tj (|) Tj ( ) Tj (BPF_ST) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 615.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(size *\) \(dst + offset\) = imm32) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 595.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_MEM) Tj ( ) Tj (|) Tj ( ) Tj (<) Tj (size) Tj (>) Tj ( ) Tj (|) Tj ( ) Tj (BPF_LDX) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 562.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = *\(unsigned size *\) \(src + offset\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 542.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Where size is one of: ) Tj /F5 10 Tf (BPF_B) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_H) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_W) Tj /F1 10 Tf (, or ) Tj /F5 10 Tf (BPF_DW) Tj /F1 10 Tf ( and 'unsigned size' is one of u8, u16, u32 or u64.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 515.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.2   Sign-extension load operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 485.4236 cm
q
BT 1 0 0 1 0 14 Tm .030696 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_MEMSX) Tj /F1 10 Tf ( mode modifier is used to encode ) Tj 1 0 0 rg (:term:`sign-extension) Tj (<) Tj (Sign Extend) Tj (>) Tj (`) Tj 0 0 0 rg ( load instructions that) Tj T* 0 Tw (transfer data between a register and memory.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 467.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_MEMSX) Tj ( ) Tj (|) Tj ( ) Tj (<) Tj (size) Tj (>) Tj ( ) Tj (|) Tj ( ) Tj (BPF_LDX) Tj /F1 10 Tf ( means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 434.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (dst = *\(signed size *\) \(src + offset\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 414.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Where size is one of: ) Tj /F5 10 Tf (BPF_B) Tj /F1 10 Tf (, ) Tj /F5 10 Tf (BPF_H) Tj /F1 10 Tf ( or ) Tj /F5 10 Tf (BPF_W) Tj /F1 10 Tf (, and 'signed size' is one of s8, s16 or s32.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 387.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.3   Atomic operations) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 357.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .652397 Tw (Atomic operations are operations that operate on memory and can not be interrupted or corrupted by other) Tj T* 0 Tw (access to the same memory region by other BPF programs or means outside of this specification.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 327.2236 cm
q
BT 1 0 0 1 0 14 Tm .91989 Tw 12 TL /F1 10 Tf 0 0 0 rg (All atomic operations supported by BPF are encoded as store operations that use the ) Tj /F5 10 Tf (BPF_ATOMIC) Tj /F1 10 Tf ( mode) Tj T* 0 Tw (modifier as follows:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 321.2236 cm
Q
q
1 0 0 1 57.02362 321.2236 cm
Q
q
1 0 0 1 57.02362 309.2236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ATOMIC) Tj ( ) Tj (|) Tj ( ) Tj (BPF_W) Tj ( ) Tj (|) Tj ( ) Tj (BPF_STX) Tj /F1 10 Tf ( for 32-bit operations) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 303.2236 cm
Q
q
1 0 0 1 57.02362 291.2236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ATOMIC) Tj ( ) Tj (|) Tj ( ) Tj (BPF_DW) Tj ( ) Tj (|) Tj ( ) Tj (BPF_STX) Tj /F1 10 Tf ( for 64-bit operations) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 285.2236 cm
Q
q
1 0 0 1 57.02362 273.2236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8-bit and 16-bit wide atomic operations are not supported.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 273.2236 cm
Q
q
1 0 0 1 57.02362 243.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .738797 Tw (The 'imm' field is used to encode the actual atomic operation. Simple atomic operation use a subset of the) Tj T* 0 Tw (values defined to encode arithmetic operations in the 'imm' field to encode the atomic operation:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 237.2236 cm
Q
q
1 0 0 1 57.02362 147.2236 cm
q
1 1 1 rg
n 0 90 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 72 481.2283 -18 re f*
1 1 1 rg
n 0 54 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 36 481.2283 -18 re f*
1 1 1 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 63.92472 0 Td (imm) Tj T* -63.92472 0 Td ET
Q
Q
q
1 0 0 1 166.4094 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 31.34295 0 Td (value) Tj T* -31.34295 0 Td ET
Q
Q
q
1 0 0 1 266.6654 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 77.3315 0 Td (description) Tj T* -77.3315 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_ADD) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x00) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic add) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_OR) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x40) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic or) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_AND) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x50) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic and) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_XOR) Tj T* ET
Q
Q
q
1 0 0 1 166.4094 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xa0) Tj T* ET
Q
Q
q
1 0 0 1 266.6654 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic xor) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 72 m 481.2283 72 l S
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 160.4094 0 m 160.4094 90 l S
n 260.6654 0 m 260.6654 90 l S
n 0 90 m 481.2283 90 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 90 l S
n 481.2283 0 m 481.2283 90 l S
Q
Q
Q
q
1 0 0 1 57.02362 147.2236 cm
Q
q
1 0 0 1 57.02362 129.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ATOMIC) Tj ( ) Tj (|) Tj ( ) Tj (BPF_W) Tj ( ) Tj ( ) Tj (|) Tj ( ) Tj (BPF_STX) Tj /F1 10 Tf ( with 'imm' = BPF_ADD means:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 96.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(u32 *\)\(dst + offset\) += src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 76.02362 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (BPF_ATOMIC) Tj ( ) Tj (|) Tj ( ) Tj (BPF_DW) Tj ( ) Tj (|) Tj ( ) Tj (BPF_STX) Tj /F1 10 Tf ( with 'imm' = BPF ADD means:) Tj T* ET
Q
Q
 
endstream
endobj
124 0 obj
<<
/Length 11531
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 739.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.941176 .972549 1 rg
n -6 -6 480.0283 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (*\(u64 *\)\(dst + offset\) += src) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 57.02362 719.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (In addition to the simple atomic operations, there also is a modifier and two complex atomic operations:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 713.8236 cm
Q
q
1 0 0 1 57.02362 641.8236 cm
q
1 1 1 rg
n 0 72 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 54 481.2283 -18 re f*
1 1 1 rg
n 0 36 481.2283 -18 re f*
.878431 .878431 .878431 rg
n 0 18 481.2283 -18 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 32.734 0 Td (imm) Tj T* -32.734 0 Td ET
Q
Q
q
1 0 0 1 104.028 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 52.50809 0 Td (value) Tj T* -52.50809 0 Td ET
Q
Q
q
1 0 0 1 246.6142 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 87.35709 0 Td (description) Tj T* -87.35709 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_FETCH) Tj T* ET
Q
Q
q
1 0 0 1 104.028 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0x01) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (modifier: return old value) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_XCHG) Tj T* ET
Q
Q
q
1 0 0 1 104.028 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xe0 | BPF_FETCH) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic exchange) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (BPF_CMPXCHG) Tj T* ET
Q
Q
q
1 0 0 1 104.028 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0xf0 | BPF_FETCH) Tj T* ET
Q
Q
q
1 0 0 1 246.6142 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (atomic compare and exchange) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 54 m 481.2283 54 l S
n 0 36 m 481.2283 36 l S
n 0 18 m 481.2283 18 l S
n 98.028 0 m 98.028 72 l S
n 240.6142 0 m 240.6142 72 l S
n 0 72 m 481.2283 72 l S
n 0 0 m 481.2283 0 l S
n 0 0 m 0 72 l S
n 481.2283 0 m 481.2283 72 l S
Q
Q
Q
q
1 0 0 1 57.02362 641.8236 cm
Q
q
1 0 0 1 57.02362 599.8236 cm
q
BT 1 0 0 1 0 26 Tm 1.212556 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_FETCH) Tj /F1 10 Tf ( modifier is optional for simple atomic operations, and always set for the complex atomic) Tj T* 0 Tw .779353 Tw (operations. If the ) Tj /F5 10 Tf (BPF_FETCH) Tj /F1 10 Tf ( flag is set, then the operation also overwrites ) Tj /F5 10 Tf (src) Tj /F1 10 Tf ( with the value that was in) Tj T* 0 Tw (memory before it was modified.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 581.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_XCHG) Tj /F1 10 Tf ( operation atomically exchanges ) Tj /F5 10 Tf (src) Tj /F1 10 Tf ( with the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 539.8236 cm
q
BT 1 0 0 1 0 26 Tm .516556 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F5 10 Tf (BPF_CMPXCHG) Tj /F1 10 Tf ( operation atomically compares the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( with ) Tj /F5 10 Tf (R0) Tj /F1 10 Tf (. If they) Tj T* 0 Tw .785702 Tw (match, the value addressed by ) Tj /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( is replaced with ) Tj /F5 10 Tf (src) Tj /F1 10 Tf (. In either case, the value that was at) Tj T* 0 Tw /F5 10 Tf (dst) Tj ( ) Tj (+) Tj ( ) Tj (offset) Tj /F1 10 Tf ( before the operation is zero-extended and loaded back to ) Tj /F5 10 Tf (R0) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 512.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.4   64-bit immediate instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 482.8236 cm
q
BT 1 0 0 1 0 14 Tm 2.496027 Tw 12 TL /F1 10 Tf 0 0 0 rg (Instructions with the ) Tj /F5 10 Tf (BPF_IMM) Tj /F1 10 Tf ( 'mode' modifier use the wide instruction encoding defined in ) Tj 0 .4 .6 rg (Instruction) Tj T* 0 Tw (encoding) Tj 0 0 0 rg (, and use the 'src' field of the basic instruction to hold an opcode subtype.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 452.8236 cm
q
BT 1 0 0 1 0 14 Tm .726772 Tw 12 TL /F1 10 Tf 0 0 0 rg (The following table defines a set of ) Tj /F5 10 Tf (BPF_IMM) Tj ( ) Tj (|) Tj ( ) Tj (BPF_DW) Tj ( ) Tj (|) Tj ( ) Tj (BPF_LD) Tj /F1 10 Tf ( instructions with opcode subtypes in) Tj T* 0 Tw (the 'src' field, using new terms such as "map" defined further below:) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 446.8236 cm
Q
q
1 0 0 1 54.61748 110.8236 cm
q
1 1 1 rg
n 0 336 486.0406 -42 re f*
.878431 .878431 .878431 rg
n 0 294 486.0406 -42 re f*
1 1 1 rg
n 0 252 486.0406 -42 re f*
.878431 .878431 .878431 rg
n 0 210 486.0406 -42 re f*
1 1 1 rg
n 0 168 486.0406 -42 re f*
.878431 .878431 .878431 rg
n 0 126 486.0406 -42 re f*
1 1 1 rg
n 0 84 486.0406 -42 re f*
.878431 .878431 .878431 rg
n 0 42 486.0406 -42 re f*
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 4.703543 0 Td (opcode construction) Tj T* -4.703543 0 Td ET
Q
Q
q
1 0 0 1 126.3071 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL 2.32685 0 Td (op) Tj T* .275 0 Td (co) Tj T* 0 0 Td (de) Tj T* -2.60185 0 Td ET
Q
Q
q
1 0 0 1 155.1808 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL .844567 0 Td (s) Tj T* .835 0 Td (r) Tj T* -0.835 0 Td (c) Tj T* -0.844567 0 Td ET
Q
Q
q
1 0 0 1 174.4299 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 63.20181 0 Td (pseudocode) Tj T* -63.20181 0 Td ET
Q
Q
q
1 0 0 1 371.7335 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL 10.18756 0 Td (imm) Tj T* -0.000001 0 Td (type) Tj T* -10.18756 0 Td ET
Q
Q
q
1 0 0 1 424.6687 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL 8.515984 0 Td (dst type) Tj T* -8.515984 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (0) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = imm64) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 6 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (1) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_by_fd\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map fd) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map) Tj T* ET
Q
Q
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (2) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (dst = map_val\(map_by_fd\(imm\)\) +) Tj T* (next_imm) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map fd) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data pointer) Tj T* ET
Q
Q
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (3) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = var_addr\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (variable) Tj T* (id) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 153 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data pointer) Tj T* ET
Q
Q
q
1 0 0 1 6 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (4) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = code_addr\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (integer) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (code pointer) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (5) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (dst = map_by_idx\(imm\)) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (map) Tj T* (index) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (BPF_IMM | BPF_DW |) Tj T* (BPF_LD) Tj T* ET
Q
Q
q
1 0 0 1 126.3071 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (0x1) Tj T* (8) Tj T* ET
Q
Q
q
1 0 0 1 155.1808 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL (0) Tj T* (x) Tj T* (6) Tj T* ET
Q
Q
q
1 0 0 1 174.4299 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (dst = map_val\(map_by_idx\(imm\)\) +) Tj T* (next_imm) Tj T* ET
Q
Q
q
1 0 0 1 371.7335 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (map) Tj T* (index) Tj T* ET
Q
Q
q
1 0 0 1 424.6687 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (data pointer) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 294 m 486.0406 294 l S
n 0 252 m 486.0406 252 l S
n 0 210 m 486.0406 210 l S
n 0 168 m 486.0406 168 l S
n 0 126 m 486.0406 126 l S
n 0 84 m 486.0406 84 l S
n 0 42 m 486.0406 42 l S
n 120.3071 0 m 120.3071 336 l S
n 149.1808 0 m 149.1808 336 l S
n 168.4299 0 m 168.4299 336 l S
n 365.7335 0 m 365.7335 336 l S
n 418.6687 0 m 418.6687 336 l S
n 0 336 m 486.0406 336 l S
n 0 0 m 486.0406 0 l S
n 0 0 m 0 336 l S
n 486.0406 0 m 486.0406 336 l S
Q
Q
Q
q
1 0 0 1 57.02362 110.8236 cm
Q
q
1 0 0 1 57.02362 92.82362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 86.82362 cm
Q
q
1 0 0 1 57.02362 86.82362 cm
Q
q
1 0 0 1 57.02362 74.82362 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (map_by_fd\(imm\) means to convert a 32-bit file descriptor into an address of a map \(see ) Tj 0 .4 .6 rg (Maps) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 68.82362 cm
Q
 
endstream
endobj
125 0 obj
<<
/Length 4541
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 57.02362 753.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map_by_idx\(imm\) means to convert a 32-bit index into an address of a map) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 747.0236 cm
Q
q
1 0 0 1 57.02362 735.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (map_val\(map\) gets the address of the first value in a given map) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 729.0236 cm
Q
q
1 0 0 1 57.02362 717.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (var_addr\(imm\) gets the address of a platform variable \(see ) Tj 0 .4 .6 rg (Platform Variables) Tj 0 0 0 rg (\) with a given id) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 711.0236 cm
Q
q
1 0 0 1 57.02362 687.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.054556 Tw (code_addr\(imm\) gets the address of the instruction at a specified relative offset in number of \(64-bit\)) Tj T* 0 Tw (instructions) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 681.0236 cm
Q
q
1 0 0 1 57.02362 669.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the 'imm type' can be used by disassemblers for display) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 663.0236 cm
Q
q
1 0 0 1 57.02362 651.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL 8 0 Td (\177) Tj T* -8 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the 'dst type' can be used for verification and JIT compilation purposes) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 57.02362 651.0236 cm
Q
q
1 0 0 1 57.02362 627.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.4.4.1   Maps) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 585.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .239897 Tw (Maps are shared memory regions accessible by BPF programs on some platforms. A map can have various) Tj T* 0 Tw .059314 Tw (semantics as defined in a separate document, and may or may not have a single contiguous memory region,) Tj T* 0 Tw (but the 'map_val\(map\)' is currently only defined for maps that do have a single contiguous memory region.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 531.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .326373 Tw (Each map can have a file descriptor \(fd\) if supported by the platform, where 'map_by_fd\(imm\)' means to get) Tj T* 0 Tw 1.603071 Tw (the map with the specified file descriptor. Each BPF program can also be defined to use a set of maps) Tj T* 0 Tw .195197 Tw (associated with the program at load time, and 'map_by_idx\(imm\)' means to get the map with the given index) Tj T* 0 Tw (in the set associated with the BPF program containing the instruction.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 507.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf .133333 .133333 .133333 rg (1.4.4.2   Platform Variables) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 465.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .66189 Tw (Platform variables are memory regions, identified by integer ids, exposed by the runtime and accessible by) Tj T* 0 Tw .704556 Tw (BPF programs on some platforms. The 'var_addr\(imm\)' operation means to get the address of the memory) Tj T* 0 Tw (region identified by the given id.) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 438.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F2 12.5 Tf .133333 .133333 .133333 rg (1.4.5   Legacy BPF Packet access instructions) Tj T* ET
Q
Q
q
1 0 0 1 57.02362 396.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .55189 Tw (BPF previously introduced special instructions for access to packet data that were carried over from classic) Tj T* 0 Tw .95589 Tw (BPF. However, these instructions are deprecated and should no longer be used. All legacy packet access) Tj T* 0 Tw (instructions belong to the "legacy" conformance group instead of the "basic" conformance group.) Tj T* ET
Q
Q
 
endstream
endobj
126 0 obj
<<
/Nums [ 0 127 0 R 1 128 0 R 2 129 0 R 3 130 0 R 4 131 0 R 
  5 132 0 R 6 133 0 R 7 134 0 R 8 135 0 R 9 136 0 R 
  10 137 0 R 11 138 0 R ]
>>
endobj
127 0 obj
<<
/S /D /St 1
>>
endobj
128 0 obj
<<
/S /D /St 2
>>
endobj
129 0 obj
<<
/S /D /St 3
>>
endobj
130 0 obj
<<
/S /D /St 4
>>
endobj
131 0 obj
<<
/S /D /St 5
>>
endobj
132 0 obj
<<
/S /D /St 6
>>
endobj
133 0 obj
<<
/S /D /St 7
>>
endobj
134 0 obj
<<
/S /D /St 8
>>
endobj
135 0 obj
<<
/S /D /St 9
>>
endobj
136 0 obj
<<
/S /D /St 10
>>
endobj
137 0 obj
<<
/S /D /St 11
>>
endobj
138 0 obj
<<
/S /D /St 12
>>
endobj
xref
0 139
0000000000 65535 f 
0000000073 00000 n 
0000000146 00000 n 
0000000253 00000 n 
0000000362 00000 n 
0000000474 00000 n 
0000000642 00000 n 
0000000808 00000 n 
0000000976 00000 n 
0000001142 00000 n 
0000001310 00000 n 
0000001477 00000 n 
0000001646 00000 n 
0000001813 00000 n 
0000001982 00000 n 
0000002149 00000 n 
0000002318 00000 n 
0000002485 00000 n 
0000002654 00000 n 
0000002821 00000 n 
0000002990 00000 n 
0000003157 00000 n 
0000003326 00000 n 
0000003493 00000 n 
0000003662 00000 n 
0000003829 00000 n 
0000003998 00000 n 
0000004165 00000 n 
0000004334 00000 n 
0000004501 00000 n 
0000004670 00000 n 
0000004837 00000 n 
0000005006 00000 n 
0000005173 00000 n 
0000005342 00000 n 
0000005509 00000 n 
0000005678 00000 n 
0000005843 00000 n 
0000006012 00000 n 
0000006177 00000 n 
0000006346 00000 n 
0000006511 00000 n 
0000006680 00000 n 
0000006845 00000 n 
0000007014 00000 n 
0000007179 00000 n 
0000007348 00000 n 
0000007513 00000 n 
0000007682 00000 n 
0000007847 00000 n 
0000007963 00000 n 
0000008498 00000 n 
0000008604 00000 n 
0000008812 00000 n 
0000008980 00000 n 
0000009149 00000 n 
0000009383 00000 n 
0000009552 00000 n 
0000009721 00000 n 
0000009890 00000 n 
0000010059 00000 n 
0000010228 00000 n 
0000010397 00000 n 
0000010566 00000 n 
0000010735 00000 n 
0000011011 00000 n 
0000011180 00000 n 
0000011349 00000 n 
0000011583 00000 n 
0000011791 00000 n 
0000011999 00000 n 
0000012168 00000 n 
0000012337 00000 n 
0000012506 00000 n 
0000012747 00000 n 
0000012916 00000 n 
0000013085 00000 n 
0000013254 00000 n 
0000013423 00000 n 
0000013592 00000 n 
0000013761 00000 n 
0000014023 00000 n 
0000014231 00000 n 
0000014400 00000 n 
0000014569 00000 n 
0000014738 00000 n 
0000014979 00000 n 
0000015148 00000 n 
0000015375 00000 n 
0000015483 00000 n 
0000015741 00000 n 
0000015816 00000 n 
0000016175 00000 n 
0000016488 00000 n 
0000016672 00000 n 
0000016889 00000 n 
0000017116 00000 n 
0000017365 00000 n 
0000017666 00000 n 
0000017907 00000 n 
0000018271 00000 n 
0000018547 00000 n 
0000018832 00000 n 
0000019119 00000 n 
0000019371 00000 n 
0000019658 00000 n 
0000019984 00000 n 
0000020311 00000 n 
0000020637 00000 n 
0000020898 00000 n 
0000021260 00000 n 
0000021452 00000 n 
0000021714 00000 n 
0000022061 00000 n 
0000022204 00000 n 
0000030593 00000 n 
0000039072 00000 n 
0000045621 00000 n 
0000055982 00000 n 
0000066751 00000 n 
0000074323 00000 n 
0000082381 00000 n 
0000091312 00000 n 
0000101830 00000 n 
0000110337 00000 n 
0000121922 00000 n 
0000126516 00000 n 
0000126677 00000 n 
0000126712 00000 n 
0000126747 00000 n 
0000126782 00000 n 
0000126817 00000 n 
0000126852 00000 n 
0000126887 00000 n 
0000126922 00000 n 
0000126957 00000 n 
0000126992 00000 n 
0000127028 00000 n 
0000127064 00000 n 
trailer
<<
/ID 
[<6fba5bf06e6683f577381d47be7f60ce><6fba5bf06e6683f577381d47be7f60ce>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 89 0 R
/Root 88 0 R
/Size 139
>>
startxref
127100
%%EOF
